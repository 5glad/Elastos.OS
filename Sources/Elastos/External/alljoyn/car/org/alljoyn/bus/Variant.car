//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Org.Alljoyn.Bus.IVariantTypeReference;
    using interface Elastos.Core.IArrayOf;
    
    namespace Org {
    namespace Alljoyn {
    namespace Bus {

    interface IVariant {
        /**
         * Gets the DBus type signature of the wrapped object.
         *
         * @throws AnnotationBusException This exception will occur if
         * <ul>
         * <li>a field of a user-defined type is not annotated with its position,
         * <li>a Java data type that is not supported is used,
         * <li>an Enum data type is not annotated with a valid AllJoyn type
         * </ul>
         * @return the signature of the wrapped object.
         */
        GetSignature(
            [out] String* signature);

        /**
         * Gets the object wrapped by this Variant when object is specified by Type.
         *
         * @param <T> type returned from the getObject call.
         * @param type the type of the return value.
         * @return the value of the Variant.
         * @throws BusException if Variant data cannot be unmarshalled
         * @throws ClassCastException if Variant data cannot be converted to requested type
         */
        GetObject(
            [out] IInterface** obj);

        GetArrayObject(
            [out] IArrayOf** obj);

        /**
         * Gets the object wrapped by this Variant when the wrapped object is a
         * generic type.
         *
         * @param <T> type returned from the getObject call.
         * @param type the VariantTypeReference of the return value
         * @return the value of the Variant
         * @throws BusException if Variant data cannot be unmarshalled
         * @throws ClassCastException if Variant data cannot be converted to requested type
         * @see VariantTypeReference
         */
        // GetObject(
        //     [in] IVariantTypeReference* type,
        //     [out] IInterface** obj);

    }

    } // namespace Bus
    } // namespace Alljoyn
    } // namespace Org
}
