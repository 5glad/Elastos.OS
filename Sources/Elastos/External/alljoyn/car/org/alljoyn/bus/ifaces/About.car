//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Utility.IMap;
    interface Org.Alljoyn.Bus.IAboutObjectDescription;

    namespace Org {
    namespace Alljoyn {
    namespace Bus {
    namespace Ifaces {

    /**
     * Definition of the About BusInterface
     */
    [deprecated, @Org.Alljoyn.Bus.Annotation.BusInterface (name = "org.alljoyn.About")]
    interface IAbout {
        const String INTERFACE_NAME = "org.alljoyn.About";
        const String OBJ_PATH       = "/About";
        const Int16 VERSION = 1;
        /**
         * @return the version of the protocol
         * @throws BusException indicating failure to read Version property
         */
        [@Org.Alljoyn.Bus.Annotation.BusProperty(signature="q")]
         GetVersion(
            [out] Int16* ver);

        /**
         *
         * @param languageTag IETF language tags specified by  RFC 5646
         * @return all the configuration fields based on the language tag.
         *         See The list of known configuration fields in About interface for
         *         more details.
         * @throws BusException indicating failure to calling the remote GetAboutData method
         */
        [@Org.Alljoyn.Bus.Annotation.BusMethod(name = "GetAboutData", signature = "s", replySignature="a{sv}")]
        GetAboutData(
            [in] String languageTag,
            [out] IMap** data);

        /**
         * Return the array of object paths and the list of all interfaces available
         * at the given object path.
         * @return the array of object paths and the list of all interfaces available
         *         at the given object path.
         * @throws BusException indicating failure when calling the remote GetObjectDescription method
         */
        [@Org.Alljoyn.Bus.Annotation.BusMethod(name = "GetObjectDescription", replySignature="a(oas)")]
        GetObjectDescription(
            [out, callee] ArrayOf<IAboutObjectDescription*>* array);

        /**
         * This signal is used to announce the list of all interfaces available at
         * the given object path.
         * @param version The interface version is added since it might help with the
         * decision to connect back.
         * @param port The global gateway port for the services for this application
         * @param objectDescriptions Descriptions of the BusObjects that make up the service. "a(sas)"
         * @param serviceMetadata Service specific key/value pairs. (Service implementers
         *                        are free to populate this dictionary with any key/value
         *                        pairs that are meaningful to the service and its
         *                        potential consumers) "a{sv}"
         */
        [@Org.Alljoyn.Bus.Annotation.BusSignal (name = "Announce", signature="qqa(oas)a{sv}")]
        Announce(
            [in] Int16 ver,
            [in] Int16 port,
            [in] ArrayOf<IAboutObjectDescription*>* objectDescriptions,
            [in] IMap* serviceMetadata);
    }

    } // namespace Ifaces
    } // namespace Bus
    } // namespace Alljoyn
    } // namespace Org
}
