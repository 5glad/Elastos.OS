//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Org {
    namespace Alljoyn {
    namespace Bus {

    interface ISessionListener {
        /**
         * Invalid SessionLost code.
         */
        const Int32 ALLJOYN_SESSIONLOST_INVALID                      = 0x00;

        /**
         * Remote end called LeaveSession.
         */
        const Int32 ALLJOYN_SESSIONLOST_REMOTE_END_LEFT_SESSION      = 0x01;

        /**
         * Remote end closed abruptly.
         */
        const Int32 ALLJOYN_SESSIONLOST_REMOTE_END_CLOSED_ABRUPTLY   = 0x02;

        /**
         * Session binder removed this endpoint by calling RemoveSessionMember.
         */
        const Int32 ALLJOYN_SESSIONLOST_REMOVED_BY_BINDER            = 0x03;

        /**
         * Link was timed-out.
         */
        const Int32 ALLJOYN_SESSIONLOST_LINK_TIMEOUT                 = 0x04;

        /**
         * Unspecified reason for session loss.
         */
        const Int32 ALLJOYN_SESSIONLOST_REASON_OTHER                 = 0x05;

        /**
         * Session binder removed its joiner part by calling RemoveSessionMember (selfjoin only)
         */
        const Int32 ALLJOYN_SESSIONLOST_REMOVED_BY_BINDER_SELF       = 0x06;

        /**
         * Called by the bus when a session becomes disconnected.
         *
         * Any implementation of this function must be multithread safe.  See the
         * class documentation for details.
         *
         * @param sessionId     Id of session that was lost.
         * @param reason        Reason for the session being lost. One of:
         *                      ALLJOYN_SESSIONLOST_REMOTE_END_LEFT_SESSION
         *                      ALLJOYN_SESSIONLOST_REMOTE_END_CLOSED_ABRUPTLY
         *                      ALLJOYN_SESSIONLOST_REMOVED_BY_BINDER
         *                      ALLJOYN_SESSIONLOST_LINK_TIMEOUT
         *                      ALLJOYN_SESSIONLOST_REASON_OTHER
         */
        SessionLost(
            [in] Int32 sessionId,
            [in] Int32 reason);

        /**
         * Called by the bus for multipoint sessions when another node joins the session.
         *
         * @param sessionId     Id of multipoint session whose members have changed.
         * @param uniqueName    Unique name of member who joined the session.
         */
        SessionMemberAdded(
            [in] Int32 sessionId,
            [in] String uniqueName);

        /**
         * Called by the bus for multipoint sessions when another node leaves the session.
         *
         * @param sessionId     Id of multipoint session whose members have changed.
         * @param uniqueName    Unique name of member who left the session.
         */
        SessionMemberRemoved(
            [in] Int32 sessionId,
            [in] String uniqueName);
    }

    } // namespace Bus
    } // namespace Alljoyn
    } // namespace Org
}
