
TARGET_NAME = Org.Conscrypt
TARGET_TYPE = eco

include $(MAKEDIR)/../../../../../LibCore/src/sources.inc

INCLUDES += $(MAKEDIR)/../../../inc
INCLUDES += $(MAKEDIR)/../../../inc/org/conscrypt
INCLUDES += $(MAKEDIR)/../../../../../LibCore/inc/corelibrary

SOURCES = Org.Conscrypt.car
SOURCES += AbstractSessionContext.cpp
SOURCES += ByteArray.cpp
SOURCES += ChainStrengthAnalyzer.cpp
SOURCES += CChainStrengthAnalyzer.cpp
SOURCES += CClientSessionContext.cpp
SOURCES += CryptoUpcalls.cpp
SOURCES += CCryptoUpcalls.cpp
SOURCES += CDefaultSSLContextImpl.cpp
SOURCES += FileClientSessionCache.cpp
SOURCES += KeyManagerFactoryImpl.cpp
SOURCES += KeyManagerImpl.cpp
SOURCES += NativeCrypto.cpp
SOURCES += OpenSSLBIOInputStream.cpp
SOURCES += OpenSSLBIOSink.cpp
SOURCES += OpenSSLBIOSource.cpp

SOURCES += OpenSSLCipherContext.cpp
SOURCES += OpenSSLCipherRSA.cpp
SOURCES += OpenSSLContextImpl.cpp

SOURCES += COpenSSLProvider.cpp
SOURCES += OpenSSLKey.cpp
SOURCES += OpenSSLMac.cpp
SOURCES += OpenSSLMessageDigestJDK.cpp
SOURCES += OpenSSLNativeReference.cpp
SOURCES += OpenSSLProvider.cpp
SOURCES += OpenSSLRSAKeyFactory.cpp
SOURCES += OpenSSLRSAKeyPairGenerator.cpp
SOURCES += OpenSSLRSAPrivateCrtKey.cpp

SOURCES += Platform.cpp
SOURCES += CPlatform.cpp

SOURCES += Elastos.CoreLibrary.cpp

LIBRARIES  = $(XDK_USER_LIB)/Elastos.Runtime.lib
LIBRARIES += $(XDK_TARGETS)/Elastos.Runtime.eco
LIBRARIES += $(XDK_TARGETS)/Elastos.CoreLibrary.eco
LIBRARIES += $(XDK_USER_LIB)/crt0.lib
LIBRARIES += -llog -lssl -lcrypto
