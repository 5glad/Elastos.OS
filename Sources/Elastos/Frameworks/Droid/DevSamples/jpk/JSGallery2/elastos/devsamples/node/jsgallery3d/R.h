/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

#ifndef __Elastos_DevSamples_Node_JSGallery3D_R_H__
#define __Elastos_DevSamples_Node_JSGallery3D_R_H__
#include <elatypes.h>
namespace Elastos {
namespace DevSamples {
namespace Node {
namespace JSGallery3D {
class ECO_PUBLIC R {
    public: class anim {
        public: static const int count_down_exit = 0x7f050000;
        public: static const int on_screen_hint_enter = 0x7f050001;
        public: static const int on_screen_hint_exit = 0x7f050002;
        public: static const int player_out = 0x7f050003;
        public: static const int slide_in_left = 0x7f050004;
        public: static const int slide_in_right = 0x7f050005;
        public: static const int slide_out_left = 0x7f050006;
        public: static const int slide_out_right = 0x7f050007;
    };
    public: class array {
        public: static const int camera_flashmode_icons = 0x7f09000e;
        public: static const int camera_flashmode_largeicons = 0x7f09000f;
        public: static const int camera_id_entries = 0x7f090024;
        public: static const int camera_id_icons = 0x7f090026;
        public: static const int camera_id_labels = 0x7f090025;
        public: static const int camera_id_largeicons = 0x7f090027;
        public: static const int camera_recordlocation_icons = 0x7f090018;
        public: static const int camera_recordlocation_largeicons = 0x7f090019;
        public: static const int camera_wb_indicators = 0x7f09001f;
        /**   Labels for Countdown timer 
         */
        public: static const int pref_camera_countdown_labels = 0x7f090033;
        /**  Icons for exposure compensation 
         */
        public: static const int pref_camera_exposure_icons = 0x7f090032;
        /**  Camera Preferences flash mode dialog box entries 
         */
        public: static const int pref_camera_flashmode_entries = 0x7f09000b;
        public: static const int pref_camera_flashmode_entryvalues = 0x7f09000d;
        public: static const int pref_camera_flashmode_labels = 0x7f09000c;
        /**  Default focus mode setting.
         */
        public: static const int pref_camera_focusmode_default_array = 0x7f090031;
        /**  Camera Preferences focus mode dialog box entries 
         */
        public: static const int pref_camera_focusmode_entries = 0x7f090008;
        public: static const int pref_camera_focusmode_entryvalues = 0x7f090009;
        public: static const int pref_camera_focusmode_labels = 0x7f09000a;
        public: static const int pref_camera_hdr_entries = 0x7f09002b;
        public: static const int pref_camera_hdr_entryvalues = 0x7f09002e;
        public: static const int pref_camera_hdr_icons = 0x7f09002d;
        public: static const int pref_camera_hdr_labels = 0x7f09002c;
        /**  Camera Preferences Picture size dialog box entries 
         */
        public: static const int pref_camera_picturesize_entries = 0x7f090006;
        /**  When launching the camera app first time, we will set the picture
         size to the first one in the list that is also supported by the
         driver 
         */
        public: static const int pref_camera_picturesize_entryvalues = 0x7f090007;
        public: static const int pref_camera_recordlocation_entries = 0x7f090016;
        public: static const int pref_camera_recordlocation_entryvalues = 0x7f090015;
        public: static const int pref_camera_recordlocation_labels = 0x7f090017;
        /**  Camera Preferences Scene Mode dialog box entries 
         */
        public: static const int pref_camera_scenemode_entries = 0x7f090020;
        public: static const int pref_camera_scenemode_entryvalues = 0x7f090023;
        public: static const int pref_camera_scenemode_icons = 0x7f090022;
        public: static const int pref_camera_scenemode_labels = 0x7f090021;
        public: static const int pref_camera_timer_sound_entries = 0x7f09002f;
        public: static const int pref_camera_timer_sound_entryvalues = 0x7f090030;
        /**  Videocamera Preferences flash mode dialog box entries 
         */
        public: static const int pref_camera_video_flashmode_entries = 0x7f090010;
        public: static const int pref_camera_video_flashmode_entryvalues = 0x7f090012;
        public: static const int pref_camera_video_flashmode_labels = 0x7f090011;
        /**  Camera Preferences White Balance dialog box entries 
         */
        public: static const int pref_camera_whitebalance_entries = 0x7f09001a;
        public: static const int pref_camera_whitebalance_entryvalues = 0x7f09001c;
        public: static const int pref_camera_whitebalance_labels = 0x7f09001b;
        public: static const int pref_video_effect_entries = 0x7f090028;
        public: static const int pref_video_effect_entryvalues = 0x7f090029;
        /**  Camera Preferences Video Quality entries 
         */
        public: static const int pref_video_quality_entries = 0x7f090000;
        public: static const int pref_video_quality_entryvalues = 0x7f090001;
        /**  These values correspond to the time interval between frame capture
    for time lapse recording 
         */
        public: static const int pref_video_time_lapse_frame_interval_duration_values = 0x7f090004;
        /**  These values correspond to the time interval between frame capture in
    different units (i.e. seconds, minutes, hours) for time lapse recording 
         */
        public: static const int pref_video_time_lapse_frame_interval_entries = 0x7f090003;
        /**  These values correspond to the time interval between frame capture in millseconds
    for time lapse recording 
         */
        public: static const int pref_video_time_lapse_frame_interval_entryvalues = 0x7f090002;
        public: static const int pref_video_time_lapse_frame_interval_units = 0x7f090005;
        public: static const int video_effect_icons = 0x7f09002a;
        public: static const int video_flashmode_icons = 0x7f090013;
        public: static const int video_flashmode_largeicons = 0x7f090014;
        public: static const int whitebalance_icons = 0x7f09001d;
        public: static const int whitebalance_largeicons = 0x7f09001e;
    };
    public: class attr {
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int background = 0x7f01000e;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public: static const int defaultValue = 0x7f010004;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int elemEndSize = 0x7f010012;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int elemSize = 0x7f010011;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int entries = 0x7f010006;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int entryValues = 0x7f010005;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int foreground = 0x7f01000f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int iconSize = 0x7f010013;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int icons = 0x7f010008;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int images = 0x7f01000c;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int key = 0x7f010003;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int label = 0x7f01000d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int labelList = 0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int largeIcons = 0x7f01000b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int listPreferredItemHeightSmall = 0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int max_width = 0x7f010010;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int modes = 0x7f010009;
        /**  If a preference does not have individual icons for each entry, it can has a single icon to represent it. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int singleIcon = 0x7f01000a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int switchStyle = 0x7f010001;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int title = 0x7f010002;
    };
    public: class bool_ {
        public: static const int config_scroll_horizontal = 0x7f0a0007;
        public: static const int config_show_more_images = 0x7f0a0006;
        public: static const int loop = 0x7f0a0002;
        /**  Specify the screen orientation 
 Specify the screen orientation 
 Specify the screen orientation 
         */
        public: static const int only_use_portrait = 0x7f0a0008;
        public: static const int picker_is_dialog = 0x7f0a0009;
        public: static const int playlist = 0x7f0a0001;
        public: static const int show_action_bar_title = 0x7f0a0000;
        public: static const int speaker = 0x7f0a0005;
        public: static const int stereo = 0x7f0a0003;
        public: static const int streaming = 0x7f0a0004;
    };
    public: class color {
        public: static const int accent = 0x7f0c0003;
        /**  configuration for album page 
 configuration for album page 
         */
        public: static const int album_background = 0x7f0c000a;
        public: static const int album_placeholder = 0x7f0c000b;
        /**  configuration for album set page 
 configuration for album set page 
         */
        public: static const int albumset_background = 0x7f0c0005;
        public: static const int albumset_label_background = 0x7f0c0007;
        public: static const int albumset_label_count = 0x7f0c0009;
        public: static const int albumset_label_title = 0x7f0c0008;
        public: static const int albumset_placeholder = 0x7f0c0006;
        public: static const int background_main_toolbar = 0x7f0c003d;
        public: static const int background_screen = 0x7f0c003b;
        public: static const int background_toolbar = 0x7f0c003c;
        public: static const int bitmap_screennail_placeholder = 0x7f0c0010;
        public: static const int blue = 0x7f0c0039;
        public: static const int bright_foreground_disabled_holo_dark = 0x7f0c0026;
        public: static const int bright_foreground_holo_dark = 0x7f0c0027;
        public: static const int button_dark_transparent_background = 0x7f0c0012;
        /**  configuration for manage cache page 
 configuration for manage cache page 
         */
        public: static const int cache_background = 0x7f0c000e;
        public: static const int cache_placeholder = 0x7f0c000f;
        public: static const int color_chooser_slected_border = 0x7f0c0057;
        public: static const int color_chooser_unslected_border = 0x7f0c0056;
        public: static const int crop_shadow_color = 0x7f0c0033;
        public: static const int crop_shadow_wp_color = 0x7f0c0034;
        public: static const int crop_wp_markers = 0x7f0c0035;
        public: static const int darker_transparent = 0x7f0c0058;
        public: static const int default_background = 0x7f0c0000;
        public: static const int disabled_knob = 0x7f0c002f;
        public: static const int draw_rect_border = 0x7f0c0055;
        /**  FAB 
         */
        public: static const int fab = 0x7f0c0030;
        public: static const int face_detect_fail = 0x7f0c002a;
        public: static const int face_detect_start = 0x7f0c0028;
        public: static const int face_detect_success = 0x7f0c0029;
        public: static const int filtershow_background = 0x7f0c0042;
        public: static const int filtershow_category_selection = 0x7f0c004c;
        public: static const int filtershow_categoryview_background = 0x7f0c004a;
        public: static const int filtershow_categoryview_text = 0x7f0c004b;
        public: static const int filtershow_graphic = 0x7f0c0043;
        public: static const int filtershow_stateview_background = 0x7f0c0046;
        public: static const int filtershow_stateview_end_background = 0x7f0c0044;
        public: static const int filtershow_stateview_end_text = 0x7f0c0045;
        public: static const int filtershow_stateview_selected_background = 0x7f0c0048;
        public: static const int filtershow_stateview_selected_text = 0x7f0c0049;
        public: static const int filtershow_stateview_text = 0x7f0c0047;
        public: static const int floating_action_button_icon_color = 0x7f0c0032;
        public: static const int floating_action_button_touch_tint = 0x7f0c0031;
        public: static const int gradcontrol_graypoint_center = 0x7f0c004f;
        public: static const int gradcontrol_graypoint_edge = 0x7f0c0050;
        public: static const int gradcontrol_line_color = 0x7f0c0053;
        public: static const int gradcontrol_line_shadow = 0x7f0c0054;
        public: static const int gradcontrol_point_center = 0x7f0c004d;
        public: static const int gradcontrol_point_edge = 0x7f0c004e;
        public: static const int gradcontrol_point_shadow_end = 0x7f0c0052;
        public: static const int gradcontrol_point_shadow_start = 0x7f0c0051;
        public: static const int gray = 0x7f0c002b;
        public: static const int green = 0x7f0c0037;
        public: static const int grey = 0x7f0c002e;
        public: static const int highlight = 0x7f0c002c;
        public: static const int holo_blue_light = 0x7f0c0025;
        public: static const int icon_disabled_color = 0x7f0c001b;
        public: static const int indicator_background = 0x7f0c001d;
        public: static const int ingest_date_tile_text = 0x7f0c0014;
        public: static const int ingest_highlight_semitransparent = 0x7f0c0013;
        public: static const int lowlight = 0x7f0c002d;
        public: static const int material_blue_grey_950 = 0x7f0c0004;
        public: static const int mode_selection_border = 0x7f0c0024;
        public: static const int on_viewfinder_label_background_color = 0x7f0c0017;
        public: static const int pano_progress_done = 0x7f0c0021;
        public: static const int pano_progress_empty = 0x7f0c0020;
        public: static const int pano_progress_indication = 0x7f0c0022;
        public: static const int pano_progress_indication_fast = 0x7f0c0023;
        /**  configuration for photo page 
 configuration for photo page 
         */
        public: static const int photo_background = 0x7f0c000c;
        public: static const int photo_placeholder = 0x7f0c000d;
        public: static const int popup_background = 0x7f0c001f;
        public: static const int popup_title_color = 0x7f0c001e;
        public: static const int primary = 0x7f0c0001;
        public: static const int primary_dark = 0x7f0c0002;
        public: static const int primary_text = 0x7f0c0059;
        /**  Camera resources below 
         */
        public: static const int recording_time_elapsed_text = 0x7f0c0015;
        public: static const int recording_time_remaining_text = 0x7f0c0016;
        public: static const int red = 0x7f0c0038;
        public: static const int review_background = 0x7f0c001a;
        public: static const int review_control_pressed_color = 0x7f0c0018;
        public: static const int review_control_pressed_fan_color = 0x7f0c0019;
        public: static const int slider_dot_color = 0x7f0c003f;
        public: static const int slider_line_color = 0x7f0c0040;
        public: static const int slideshow_background = 0x7f0c0011;
        public: static const int state_panel_separation_line = 0x7f0c0041;
        public: static const int text_toolbar = 0x7f0c003a;
        public: static const int time_lapse_arc = 0x7f0c001c;
        public: static const int toolbar_separation_line = 0x7f0c003e;
        public: static const int yellow = 0x7f0c0036;
    };
    public: class dimen {
        public: static const int action_bar_arrow_margin_left = 0x7f0e00a4;
        public: static const int action_bar_arrow_margin_right = 0x7f0e00a5;
        public: static const int action_bar_elevation = 0x7f0e0082;
        public: static const int action_bar_icon_padding_left = 0x7f0e00a6;
        public: static const int action_bar_icon_padding_right = 0x7f0e00a7;
        public: static const int action_bar_icon_padding_vertical = 0x7f0e00b1;
        public: static const int action_button_padding_horizontal = 0x7f0e00a8;
        public: static const int action_button_padding_vertical = 0x7f0e00b2;
        public: static const int action_item_height = 0x7f0e007a;
        public: static const int add_button_margin = 0x7f0e008c;
        public: static const int album_padding_bottom = 0x7f0e0071;
        public: static const int album_padding_left = 0x7f0e0072;
        public: static const int album_padding_right = 0x7f0e0073;
        public: static const int album_padding_top = 0x7f0e0070;
        /**  configuration for album set page 
         */
        public: static const int album_set_item_image_height = 0x7f0e007c;
        public: static const int album_set_item_width = 0x7f0e007d;
        public: static const int album_slot_gap = 0x7f0e0074;
        public: static const int albumset_count_font_size = 0x7f0e006c;
        public: static const int albumset_count_offset = 0x7f0e006a;
        public: static const int albumset_icon_size = 0x7f0e006f;
        public: static const int albumset_label_background_height = 0x7f0e0068;
        public: static const int albumset_left_margin = 0x7f0e006d;
        public: static const int albumset_padding_bottom = 0x7f0e0064;
        public: static const int albumset_padding_left = 0x7f0e0065;
        public: static const int albumset_padding_right = 0x7f0e0066;
        public: static const int albumset_padding_top = 0x7f0e0063;
        public: static const int albumset_slot_gap = 0x7f0e0067;
        public: static const int albumset_title_font_size = 0x7f0e006b;
        public: static const int albumset_title_offset = 0x7f0e0069;
        public: static const int albumset_title_right_margin = 0x7f0e006e;
        public: static const int appwidget_height = 0x7f0e0060;
        public: static const int appwidget_width = 0x7f0e005f;
        public: static const int big_setting_popup_window_width = 0x7f0e0015;
        public: static const int big_setting_popup_window_width_xlarge = 0x7f0e0037;
        public: static const int cache_pin_margin = 0x7f0e0076;
        /**  configuration for manage page 
         */
        public: static const int cache_pin_size = 0x7f0e0075;
        public: static const int camera_controls_size = 0x7f0e005d;
        public: static const int camera_film_strip_gap = 0x7f0e005e;
        public: static const int capture_border = 0x7f0e005a;
        public: static const int capture_margin_right = 0x7f0e005b;
        public: static const int capture_margin_top = 0x7f0e005c;
        public: static const int capture_size = 0x7f0e0059;
        public: static const int capture_top_margin = 0x7f0e008d;
        /**  Category Panel Height 
 Category Panel Height 
 Category Panel Height 
         */
        public: static const int category_panel_height = 0x7f0e008f;
        /**  Category Panel Icon Size 
 Category Panel Icon Size 
 Category Panel Icon Size 
         */
        public: static const int category_panel_icon_size = 0x7f0e0090;
        /**  Category Panel Text Size 
 Category Panel Text Size 
 Category Panel Text Size 
         */
        public: static const int category_panel_margin = 0x7f0e0092;
        /**  Category Panel Text Size 
 Category Panel Text Size 
 Category Panel Text Size 
         */
        public: static const int category_panel_text_size = 0x7f0e0091;
        public: static const int crop_indicator_size = 0x7f0e00b0;
        public: static const int crop_min_side = 0x7f0e0002;
        public: static const int crop_touch_tolerance = 0x7f0e0003;
        /**  draw check UI size  
         */
        public: static const int draw_color_check_dim = 0x7f0e009b;
        /**  draw color icon size 
         */
        public: static const int draw_color_icon_dim = 0x7f0e009a;
        /**  Grad filter minimum touch distance 
         */
        public: static const int draw_rect_border = 0x7f0e0095;
        /**  Grad filter minimum touch distance 
         */
        public: static const int draw_rect_border_edge = 0x7f0e0097;
        /**  Grad filter minimum touch distance 
         */
        public: static const int draw_rect_round = 0x7f0e0098;
        /**  Grad filter minimum touch distance 
         */
        public: static const int draw_rect_shadow = 0x7f0e0096;
        /**  draw color icon size 
         */
        public: static const int draw_style_icon_dim = 0x7f0e0099;
        /**  draw check UI size  
 draw check UI size  
         */
        public: static const int draw_ui_width = 0x7f0e009c;
        /**  Glow effect size 
         */
        public: static const int edge_glow_size = 0x7f0e009d;
        public: static const int effect_icon_size = 0x7f0e00a1;
        public: static const int effect_label_margin_top = 0x7f0e00a0;
        public: static const int effect_label_text_size = 0x7f0e009e;
        public: static const int effect_label_width = 0x7f0e009f;
        public: static const int effect_padding_horizontal = 0x7f0e00a2;
        public: static const int effect_setting_clear_text_min_height = 0x7f0e001c;
        public: static const int effect_setting_clear_text_min_height_xlarge = 0x7f0e003e;
        public: static const int effect_setting_clear_text_size = 0x7f0e001b;
        public: static const int effect_setting_clear_text_size_xlarge = 0x7f0e003d;
        public: static const int effect_setting_item_icon_width = 0x7f0e0017;
        public: static const int effect_setting_item_icon_width_xlarge = 0x7f0e0039;
        public: static const int effect_setting_item_text_size = 0x7f0e0018;
        public: static const int effect_setting_item_text_size_xlarge = 0x7f0e003a;
        public: static const int effect_setting_type_text_left_padding = 0x7f0e001d;
        public: static const int effect_setting_type_text_left_padding_xlarge = 0x7f0e003f;
        public: static const int effect_setting_type_text_min_height = 0x7f0e001a;
        public: static const int effect_setting_type_text_min_height_xlarge = 0x7f0e003c;
        public: static const int effect_setting_type_text_size = 0x7f0e0019;
        public: static const int effect_setting_type_text_size_xlarge = 0x7f0e003b;
        public: static const int effect_tool_panel_padding_bottom = 0x7f0e00ab;
        public: static const int effect_tool_panel_padding_top = 0x7f0e00aa;
        public: static const int effects_container_padding = 0x7f0e00a3;
        public: static const int effects_menu_container_width = 0x7f0e00a9;
        public: static const int elevation_high = 0x7f0e008b;
        public: static const int elevation_low = 0x7f0e008a;
        public: static const int face_circle_stroke = 0x7f0e0052;
        /**  FAB 
 Floating action button 
         */
        public: static const int floating_action_button_height = 0x7f0e0083;
        public: static const int floating_action_button_margin_bottom = 0x7f0e0089;
        public: static const int floating_action_button_margin_left = 0x7f0e0087;
        public: static const int floating_action_button_margin_right = 0x7f0e0088;
        public: static const int floating_action_button_radius = 0x7f0e0085;
        public: static const int floating_action_button_translation_z = 0x7f0e0086;
        public: static const int floating_action_button_width = 0x7f0e0084;
        public: static const int focus_inner_offset = 0x7f0e004d;
        public: static const int focus_inner_stroke = 0x7f0e004f;
        public: static const int focus_outer_stroke = 0x7f0e004e;
        public: static const int focus_radius_offset = 0x7f0e004c;
        /**  Grad filter dot size 
         */
        public: static const int gradcontrol_dot_size = 0x7f0e0093;
        /**  Grad filter minimum touch distance 
         */
        public: static const int gradcontrol_min_touch_dist = 0x7f0e0094;
        public: static const int hint_y_offset = 0x7f0e0006;
        public: static const int indicator_bar_width = 0x7f0e0012;
        public: static const int indicator_bar_width_large = 0x7f0e0028;
        public: static const int indicator_bar_width_xlarge = 0x7f0e0034;
        /**  for manage cache bar 
 for manage cache bar 
         */
        public: static const int manage_cache_bottom_height = 0x7f0e0077;
        public: static const int navigation_bar_height = 0x7f0e0057;
        public: static const int navigation_bar_width = 0x7f0e0058;
        public: static const int onscreen_exposure_indicator_text_size = 0x7f0e001f;
        public: static const int onscreen_exposure_indicator_text_size_xlarge = 0x7f0e0041;
        public: static const int onscreen_indicators_height = 0x7f0e001e;
        public: static const int onscreen_indicators_height_large = 0x7f0e002a;
        public: static const int onscreen_indicators_height_xlarge = 0x7f0e0040;
        public: static const int pano_mosaic_surface_height = 0x7f0e0007;
        public: static const int pano_mosaic_surface_height_xlarge = 0x7f0e002b;
        public: static const int pano_review_button_height = 0x7f0e0009;
        public: static const int pano_review_button_height_xlarge = 0x7f0e002d;
        public: static const int pano_review_button_width = 0x7f0e0008;
        public: static const int pano_review_button_width_xlarge = 0x7f0e002c;
        public: static const int photoeditor_original_text_margin = 0x7f0e0081;
        public: static const int photoeditor_original_text_size = 0x7f0e0080;
        public: static const int photoeditor_text_padding = 0x7f0e007f;
        /**  configuration for preview in editor 
         */
        public: static const int photoeditor_text_size = 0x7f0e007e;
        public: static const int pie_anglezone_width = 0x7f0e004b;
        public: static const int pie_arc_offset = 0x7f0e0047;
        public: static const int pie_arc_radius = 0x7f0e0049;
        public: static const int pie_deadzone_width = 0x7f0e004a;
        public: static const int pie_item_radius = 0x7f0e0048;
        public: static const int pie_radius_increment = 0x7f0e0043;
        public: static const int pie_radius_start = 0x7f0e0042;
        public: static const int pie_touch_offset = 0x7f0e0045;
        public: static const int pie_touch_slop = 0x7f0e0044;
        public: static const int pie_view_size = 0x7f0e0046;
        public: static const int popup_title_frame_min_height = 0x7f0e0014;
        public: static const int popup_title_frame_min_height_xlarge = 0x7f0e0036;
        public: static const int popup_title_text_size = 0x7f0e0013;
        public: static const int popup_title_text_size_xlarge = 0x7f0e0035;
        public: static const int preview_margin = 0x7f0e0000;
        public: static const int seekbar_height = 0x7f0e00ad;
        public: static const int seekbar_padding_horizontal = 0x7f0e00ae;
        public: static const int seekbar_padding_vertical = 0x7f0e00af;
        public: static const int seekbar_width = 0x7f0e00ac;
        public: static const int setting_item_icon_width = 0x7f0e0016;
        public: static const int setting_item_icon_width_large = 0x7f0e0029;
        public: static const int setting_item_icon_width_xlarge = 0x7f0e0038;
        public: static const int setting_item_list_margin = 0x7f0e0011;
        public: static const int setting_item_list_margin_xlarge = 0x7f0e0033;
        public: static const int setting_item_text_size = 0x7f0e000c;
        public: static const int setting_item_text_size_xlarge = 0x7f0e002f;
        public: static const int setting_item_text_width = 0x7f0e000f;
        public: static const int setting_item_text_width_xlarge = 0x7f0e0031;
        public: static const int setting_knob_text_size = 0x7f0e000e;
        public: static const int setting_knob_width = 0x7f0e000d;
        public: static const int setting_knob_width_xlarge = 0x7f0e0030;
        public: static const int setting_popup_right_margin = 0x7f0e000a;
        public: static const int setting_popup_right_margin_large = 0x7f0e0025;
        public: static const int setting_popup_window_width = 0x7f0e0010;
        public: static const int setting_popup_window_width_large = 0x7f0e0027;
        public: static const int setting_popup_window_width_xlarge = 0x7f0e0032;
        public: static const int setting_row_height = 0x7f0e000b;
        public: static const int setting_row_height_large = 0x7f0e0026;
        public: static const int setting_row_height_xlarge = 0x7f0e002e;
        public: static const int shadow_margin = 0x7f0e0001;
        public: static const int shutter_offset = 0x7f0e0054;
        public: static const int size_preview = 0x7f0e0056;
        public: static const int size_thumbnail = 0x7f0e0055;
        public: static const int stack_photo_height = 0x7f0e0062;
        public: static const int stack_photo_width = 0x7f0e0061;
        /**  Text size for the state panel 
         */
        public: static const int state_panel_text_size = 0x7f0e008e;
        public: static const int switch_min_width = 0x7f0e0021;
        public: static const int switch_padding = 0x7f0e0020;
        public: static const int switch_text_max_width = 0x7f0e0022;
        public: static const int switcher_size = 0x7f0e0051;
        public: static const int thumb_text_padding = 0x7f0e0023;
        public: static const int thumb_text_size = 0x7f0e0024;
        public: static const int thumbnail_margin = 0x7f0e0079;
        /**   configuration for filtershow UI 
  configuration for filtershow UI 
  configuration for filtershow UI 
         */
        public: static const int thumbnail_size = 0x7f0e0078;
        public: static const int touch_circle_size = 0x7f0e007b;
        public: static const int wp_selector_dash_length = 0x7f0e0004;
        public: static const int wp_selector_off_length = 0x7f0e0005;
        public: static const int zoom_font_size = 0x7f0e0053;
        public: static const int zoom_ring_min = 0x7f0e0050;
    };
    public: class drawable {
        public: static const int action_bar_two_line_background = 0x7f020000;
        public: static const int actionbar_translucent = 0x7f020001;
        public: static const int appwidget_photo_border = 0x7f020002;
        public: static const int background = 0x7f020003;
        public: static const int background_portrait = 0x7f020004;
        public: static const int bg_pressed = 0x7f020005;
        public: static const int bg_pressed_exit_fading = 0x7f020006;
        public: static const int bg_text_on_preview = 0x7f020007;
        public: static const int bg_vidcontrol = 0x7f020008;
        public: static const int border_photo_frame_widget = 0x7f020009;
        public: static const int border_photo_frame_widget_focused_holo = 0x7f02000a;
        public: static const int border_photo_frame_widget_holo = 0x7f02000b;
        public: static const int border_photo_frame_widget_pressed_holo = 0x7f02000c;
        public: static const int brush_flat = 0x7f02000d;
        public: static const int brush_gauss = 0x7f02000e;
        public: static const int brush_marker = 0x7f02000f;
        public: static const int brush_round = 0x7f020010;
        public: static const int brush_spatter = 0x7f020011;
        public: static const int btn_make_offline_disabled_on_holo_dark = 0x7f020012;
        public: static const int btn_make_offline_normal_off_holo_dark = 0x7f020013;
        public: static const int btn_make_offline_normal_on_holo_dark = 0x7f020014;
        public: static const int btn_new_shutter = 0x7f020015;
        public: static const int btn_new_shutter_video = 0x7f020016;
        public: static const int btn_shutter_default = 0x7f020017;
        public: static const int btn_shutter_pressed = 0x7f020018;
        public: static const int btn_shutter_video_default = 0x7f020019;
        public: static const int btn_shutter_video_pressed = 0x7f02001a;
        public: static const int btn_shutter_video_recording = 0x7f02001b;
        public: static const int btn_video_shutter_recording_holo = 0x7f02001c;
        public: static const int btn_video_shutter_recording_holo_large = 0x7f02001d;
        public: static const int btn_video_shutter_recording_holo_xlarge = 0x7f02001e;
        public: static const int btn_video_shutter_recording_pressed_holo = 0x7f02001f;
        public: static const int btn_video_shutter_recording_pressed_holo_large = 0x7f020020;
        public: static const int btn_video_shutter_recording_pressed_holo_xlarge = 0x7f020021;
        public: static const int cab_divider_vertical_dark = 0x7f020022;
        public: static const int camera_crop = 0x7f020023;
        public: static const int dialog_full_holo_dark = 0x7f020024;
        public: static const int dropdown_ic_arrow = 0x7f020025;
        public: static const int fab_accent = 0x7f020026;
        public: static const int filtershow_add = 0x7f020027;
        public: static const int filtershow_addpoint = 0x7f020028;
        public: static const int filtershow_border_4x5 = 0x7f020029;
        public: static const int filtershow_border_black = 0x7f02002a;
        public: static const int filtershow_border_brush = 0x7f02002b;
        public: static const int filtershow_border_film = 0x7f02002c;
        public: static const int filtershow_border_grunge = 0x7f02002d;
        public: static const int filtershow_border_rounded_black = 0x7f02002e;
        public: static const int filtershow_border_rounded_white = 0x7f02002f;
        public: static const int filtershow_border_sumi_e = 0x7f020030;
        public: static const int filtershow_border_tape = 0x7f020031;
        public: static const int filtershow_border_white = 0x7f020032;
        public: static const int filtershow_button_background = 0x7f020033;
        public: static const int filtershow_button_border = 0x7f020034;
        public: static const int filtershow_button_colors = 0x7f020035;
        public: static const int filtershow_button_colors_contrast = 0x7f020036;
        public: static const int filtershow_button_colors_curve = 0x7f020037;
        public: static const int filtershow_button_colors_sharpen = 0x7f020038;
        public: static const int filtershow_button_colors_vignette = 0x7f020039;
        public: static const int filtershow_button_current = 0x7f02003a;
        public: static const int filtershow_button_fx = 0x7f02003b;
        public: static const int filtershow_button_geometry = 0x7f02003c;
        public: static const int filtershow_button_geometry_crop = 0x7f02003d;
        public: static const int filtershow_button_geometry_flip = 0x7f02003e;
        public: static const int filtershow_button_geometry_rotate = 0x7f02003f;
        public: static const int filtershow_button_geometry_straighten = 0x7f020040;
        public: static const int filtershow_button_grad = 0x7f020041;
        public: static const int filtershow_button_operations = 0x7f020042;
        public: static const int filtershow_button_origin = 0x7f020043;
        public: static const int filtershow_button_redo = 0x7f020044;
        public: static const int filtershow_button_selected_background = 0x7f020045;
        public: static const int filtershow_button_settings = 0x7f020046;
        public: static const int filtershow_button_show_original = 0x7f020047;
        public: static const int filtershow_button_undo = 0x7f020048;
        public: static const int filtershow_color_picker_circle = 0x7f020049;
        public: static const int filtershow_color_picker_roundrect = 0x7f02004a;
        public: static const int filtershow_delpoint = 0x7f02004b;
        public: static const int filtershow_drawing = 0x7f02004c;
        public: static const int filtershow_fx_0000_vintage = 0x7f02004d;
        public: static const int filtershow_fx_0001_instant = 0x7f02004e;
        public: static const int filtershow_fx_0002_bleach = 0x7f02004f;
        public: static const int filtershow_fx_0003_blue_crush = 0x7f020050;
        public: static const int filtershow_fx_0004_bw_contrast = 0x7f020051;
        public: static const int filtershow_fx_0005_punch = 0x7f020052;
        public: static const int filtershow_fx_0006_x_process = 0x7f020053;
        public: static const int filtershow_fx_0007_washout = 0x7f020054;
        public: static const int filtershow_fx_0008_washout_color = 0x7f020055;
        public: static const int filtershow_grad_button = 0x7f020056;
        public: static const int filtershow_icon_vignette = 0x7f020057;
        public: static const int filtershow_menu_marker = 0x7f020058;
        public: static const int filtershow_menu_marker_rtl = 0x7f020059;
        public: static const int filtershow_scrubber = 0x7f02005a;
        public: static const int filtershow_scrubber_control_disabled = 0x7f02005b;
        public: static const int filtershow_scrubber_control_focused = 0x7f02005c;
        public: static const int filtershow_scrubber_control_normal = 0x7f02005d;
        public: static const int filtershow_scrubber_control_pressed = 0x7f02005e;
        public: static const int filtershow_scrubber_primary = 0x7f02005f;
        public: static const int filtershow_scrubber_secondary = 0x7f020060;
        public: static const int filtershow_scrubber_track = 0x7f020061;
        public: static const int filtershow_slider = 0x7f020062;
        public: static const int filtershow_state_button_background = 0x7f020063;
        public: static const int filtershow_versions_compare = 0x7f020064;
        public: static const int filtershow_vertical_bar = 0x7f020065;
        public: static const int filtershow_vertical_line = 0x7f020066;
        public: static const int floating_action_button = 0x7f020067;
        public: static const int frame_overlay_gallery_camera = 0x7f020068;
        public: static const int frame_overlay_gallery_folder = 0x7f020069;
        public: static const int frame_overlay_gallery_picasa = 0x7f02006a;
        public: static const int geometry_shadow = 0x7f02006b;
        public: static const int grid_pressed = 0x7f02006c;
        public: static const int grid_selected = 0x7f02006d;
        public: static const int ic_360pano_holo_light = 0x7f02006e;
        public: static const int ic_action_overflow = 0x7f02006f;
        public: static const int ic_btn_shutter_retake = 0x7f020070;
        public: static const int ic_cameraalbum_overlay = 0x7f020071;
        public: static const int ic_control_play = 0x7f020072;
        public: static const int ic_edit = 0x7f020073;
        public: static const int ic_effects_holo_light = 0x7f020074;
        public: static const int ic_effects_holo_light_large = 0x7f020075;
        public: static const int ic_effects_holo_light_xlarge = 0x7f020076;
        public: static const int ic_exposure_0 = 0x7f020077;
        public: static const int ic_exposure_holo_light = 0x7f020078;
        public: static const int ic_exposure_n1 = 0x7f020079;
        public: static const int ic_exposure_n2 = 0x7f02007a;
        public: static const int ic_exposure_n3 = 0x7f02007b;
        public: static const int ic_exposure_p1 = 0x7f02007c;
        public: static const int ic_exposure_p2 = 0x7f02007d;
        public: static const int ic_exposure_p3 = 0x7f02007e;
        public: static const int ic_flash_auto_holo_light = 0x7f02007f;
        public: static const int ic_flash_off_holo_light = 0x7f020080;
        public: static const int ic_flash_on_holo_light = 0x7f020081;
        public: static const int ic_gallery_play = 0x7f020082;
        public: static const int ic_gallery_play_big = 0x7f020083;
        public: static const int ic_grad_add = 0x7f020084;
        public: static const int ic_grad_del = 0x7f020085;
        public: static const int ic_hdr = 0x7f020086;
        public: static const int ic_hdr_off = 0x7f020087;
        public: static const int ic_indicator_ev_0 = 0x7f020088;
        public: static const int ic_indicator_flash_auto = 0x7f020089;
        public: static const int ic_indicator_flash_off = 0x7f02008a;
        public: static const int ic_indicator_loc_on = 0x7f02008b;
        public: static const int ic_indicator_sce_off = 0x7f02008c;
        public: static const int ic_indicator_timer_off = 0x7f02008d;
        public: static const int ic_indicator_wb_cloudy = 0x7f02008e;
        public: static const int ic_indicator_wb_daylight = 0x7f02008f;
        public: static const int ic_indicator_wb_fluorescent = 0x7f020090;
        public: static const int ic_indicator_wb_off = 0x7f020091;
        public: static const int ic_indicator_wb_tungsten = 0x7f020092;
        public: static const int ic_location = 0x7f020093;
        public: static const int ic_location_off = 0x7f020094;
        public: static const int ic_media_bigscreen = 0x7f020095;
        public: static const int ic_media_cropscreen = 0x7f020096;
        public: static const int ic_media_fullscreen = 0x7f020097;
        public: static const int ic_menu_camera_holo_light = 0x7f020098;
        public: static const int ic_menu_cancel_holo_light = 0x7f020099;
        public: static const int ic_menu_disabled_forward = 0x7f02009a;
        public: static const int ic_menu_disabled_rewind = 0x7f02009b;
        public: static const int ic_menu_disabled_stop = 0x7f02009c;
        public: static const int ic_menu_display_bookmark = 0x7f02009d;
        public: static const int ic_menu_done_holo_light = 0x7f02009e;
        public: static const int ic_menu_forward = 0x7f02009f;
        public: static const int ic_menu_info_details = 0x7f0200a0;
        public: static const int ic_menu_loop = 0x7f0200a1;
        public: static const int ic_menu_make_offline = 0x7f0200a2;
        public: static const int ic_menu_ptp_holo_light = 0x7f0200a3;
        public: static const int ic_menu_revert_holo_dark = 0x7f0200a4;
        public: static const int ic_menu_rewind = 0x7f0200a5;
        public: static const int ic_menu_savephoto = 0x7f0200a6;
        public: static const int ic_menu_savephoto_disabled = 0x7f0200a7;
        public: static const int ic_menu_share = 0x7f0200a8;
        public: static const int ic_menu_single_track = 0x7f0200a9;
        public: static const int ic_menu_slideshow_holo_light = 0x7f0200aa;
        public: static const int ic_menu_stereo = 0x7f0200ab;
        public: static const int ic_menu_stop = 0x7f0200ac;
        public: static const int ic_menu_tiny_planet = 0x7f0200ad;
        public: static const int ic_menu_trash = 0x7f0200ae;
        public: static const int ic_menu_unloop = 0x7f0200af;
        public: static const int ic_pan_border_fast = 0x7f0200b0;
        public: static const int ic_pan_border_fast_large = 0x7f0200b1;
        public: static const int ic_pan_border_fast_xlarge = 0x7f0200b2;
        public: static const int ic_pan_left_indicator = 0x7f0200b3;
        public: static const int ic_pan_left_indicator_fast = 0x7f0200b4;
        public: static const int ic_pan_left_indicator_fast_large = 0x7f0200b5;
        public: static const int ic_pan_left_indicator_fast_xlarge = 0x7f0200b6;
        public: static const int ic_pan_left_indicator_large = 0x7f0200b7;
        public: static const int ic_pan_left_indicator_xlarge = 0x7f0200b8;
        public: static const int ic_pan_progression = 0x7f0200b9;
        public: static const int ic_pan_progression_large = 0x7f0200ba;
        public: static const int ic_pan_progression_xlarge = 0x7f0200bb;
        public: static const int ic_pan_right_indicator = 0x7f0200bc;
        public: static const int ic_pan_right_indicator_fast = 0x7f0200bd;
        public: static const int ic_pan_right_indicator_fast_large = 0x7f0200be;
        public: static const int ic_pan_right_indicator_fast_xlarge = 0x7f0200bf;
        public: static const int ic_pan_right_indicator_large = 0x7f0200c0;
        public: static const int ic_pan_right_indicator_xlarge = 0x7f0200c1;
        public: static const int ic_pan_thumb = 0x7f0200c2;
        public: static const int ic_photoeditor_border = 0x7f0200c3;
        public: static const int ic_photoeditor_color = 0x7f0200c4;
        public: static const int ic_photoeditor_effects = 0x7f0200c5;
        public: static const int ic_photoeditor_fix = 0x7f0200c6;
        public: static const int ic_recording_indicator = 0x7f0200c7;
        public: static const int ic_sce = 0x7f0200c8;
        public: static const int ic_sce_action = 0x7f0200c9;
        public: static const int ic_sce_night = 0x7f0200ca;
        public: static const int ic_sce_off = 0x7f0200cb;
        public: static const int ic_sce_party = 0x7f0200cc;
        public: static const int ic_sce_sunset = 0x7f0200cd;
        public: static const int ic_scn_holo_light = 0x7f0200ce;
        public: static const int ic_scn_holo_light_large = 0x7f0200cf;
        public: static const int ic_scn_holo_light_xlarge = 0x7f0200d0;
        public: static const int ic_separator_line = 0x7f0200d1;
        public: static const int ic_snapshot_border = 0x7f0200d2;
        public: static const int ic_snapshot_border_large = 0x7f0200d3;
        public: static const int ic_snapshot_border_xlarge = 0x7f0200d4;
        public: static const int ic_switch_back = 0x7f0200d5;
        public: static const int ic_switch_camera = 0x7f0200d6;
        public: static const int ic_switch_front = 0x7f0200d7;
        public: static const int ic_switch_photo_facing_holo_light = 0x7f0200d8;
        public: static const int ic_switch_photo_facing_holo_light_large = 0x7f0200d9;
        public: static const int ic_switch_photo_facing_holo_light_xlarge = 0x7f0200da;
        public: static const int ic_switch_video = 0x7f0200db;
        public: static const int ic_switch_video_facing_holo_light = 0x7f0200dc;
        public: static const int ic_switch_video_facing_holo_light_large = 0x7f0200dd;
        public: static const int ic_switch_video_facing_holo_light_xlarge = 0x7f0200de;
        public: static const int ic_switcher_menu_indicator = 0x7f0200df;
        public: static const int ic_timelapse_none = 0x7f0200e0;
        public: static const int ic_timelapse_none_large = 0x7f0200e1;
        public: static const int ic_timelapse_none_xlarge = 0x7f0200e2;
        public: static const int ic_vidcontrol_disable_pause = 0x7f0200e3;
        public: static const int ic_vidcontrol_disable_play = 0x7f0200e4;
        public: static const int ic_vidcontrol_disable_reload = 0x7f0200e5;
        public: static const int ic_vidcontrol_pause = 0x7f0200e6;
        public: static const int ic_vidcontrol_play = 0x7f0200e7;
        public: static const int ic_vidcontrol_reload = 0x7f0200e8;
        public: static const int ic_video_effects_background_fields_of_wheat_holo = 0x7f0200e9;
        public: static const int ic_video_effects_background_intergalactic_holo = 0x7f0200ea;
        public: static const int ic_video_effects_background_normal_holo_dark = 0x7f0200eb;
        public: static const int ic_video_effects_faces_big_eyes_holo_dark = 0x7f0200ec;
        public: static const int ic_video_effects_faces_big_mouth_holo_dark = 0x7f0200ed;
        public: static const int ic_video_effects_faces_big_nose_holo_dark = 0x7f0200ee;
        public: static const int ic_video_effects_faces_small_eyes_holo_dark = 0x7f0200ef;
        public: static const int ic_video_effects_faces_small_mouth_holo_dark = 0x7f0200f0;
        public: static const int ic_video_effects_faces_squeeze_holo_dark = 0x7f0200f1;
        public: static const int ic_video_thumb = 0x7f0200f2;
        public: static const int ic_view_photosphere = 0x7f0200f3;
        public: static const int ic_wb_auto = 0x7f0200f4;
        public: static const int ic_wb_cloudy = 0x7f0200f5;
        public: static const int ic_wb_fluorescent = 0x7f0200f6;
        public: static const int ic_wb_incandescent = 0x7f0200f7;
        public: static const int ic_wb_sunlight = 0x7f0200f8;
        public: static const int icn_media_forward = 0x7f0200f9;
        public: static const int icn_media_pause = 0x7f0200fa;
        public: static const int icn_media_pause_focused_holo_dark = 0x7f0200fb;
        public: static const int icn_media_pause_normal_holo_dark = 0x7f0200fc;
        public: static const int icn_media_pause_pressed_holo_dark = 0x7f0200fd;
        public: static const int icn_media_play = 0x7f0200fe;
        public: static const int icn_media_play_focused_holo_dark = 0x7f0200ff;
        public: static const int icn_media_play_normal_holo_dark = 0x7f020100;
        public: static const int icn_media_play_pressed_holo_dark = 0x7f020101;
        public: static const int icn_media_rewind = 0x7f020102;
        public: static const int icn_media_stop = 0x7f020103;
        public: static const int ingest_item_list_selector = 0x7f020104;
        public: static const int knob = 0x7f020105;
        public: static const int knob_toggle_off = 0x7f020106;
        public: static const int knob_toggle_on = 0x7f020107;
        public: static const int list_divider = 0x7f020108;
        public: static const int list_divider_holo_dark = 0x7f020109;
        public: static const int list_divider_large = 0x7f02010a;
        public: static const int list_pressed_holo_light = 0x7f02010b;
        public: static const int list_selector_background_selected = 0x7f02010c;
        public: static const int media_default_bkg = 0x7f02010d;
        public: static const int menu_dropdown_panel_holo_dark = 0x7f02010e;
        public: static const int menu_save_photo = 0x7f02010f;
        public: static const int on_screen_hint_frame = 0x7f020110;
        public: static const int overscroll_edge = 0x7f020111;
        public: static const int overscroll_glow = 0x7f020112;
        public: static const int panel_undo_holo = 0x7f020113;
        public: static const int photoeditor_effect_redeye = 0x7f020114;
        public: static const int photopage_bottom_button_background = 0x7f020115;
        public: static const int placeholder_camera = 0x7f020116;
        public: static const int placeholder_empty = 0x7f020117;
        public: static const int placeholder_locked = 0x7f020118;
        public: static const int preview = 0x7f020119;
        public: static const int scrubber_knob = 0x7f02011a;
        public: static const int setting_picker = 0x7f02011b;
        public: static const int spinner_76_inner_holo = 0x7f02011c;
        public: static const int spinner_76_outer_holo = 0x7f02011d;
        public: static const int spot_mask = 0x7f02011e;
        public: static const int switch_bg_focused_holo_dark = 0x7f02011f;
        public: static const int switch_bg_holo_dark = 0x7f020120;
        public: static const int switch_inner_holo_dark = 0x7f020121;
        public: static const int switch_thumb_activated = 0x7f020122;
        public: static const int switch_thumb_activated_holo_dark = 0x7f020123;
        public: static const int switch_thumb_disabled_holo_dark = 0x7f020124;
        public: static const int switch_thumb_holo_dark = 0x7f020125;
        public: static const int switch_thumb_off = 0x7f020126;
        public: static const int switch_thumb_pressed_holo_dark = 0x7f020127;
        public: static const int switch_track_holo_dark = 0x7f020128;
        public: static const int text_select_handle_left = 0x7f020129;
        public: static const int text_select_handle_right = 0x7f02012a;
        public: static const int toast_frame_holo = 0x7f02012b;
        public: static const int transparent_button_background = 0x7f02012c;
        public: static const int videoplayer_pause = 0x7f02012d;
        public: static const int videoplayer_play = 0x7f02012e;
        public: static const int videoplayer_reload = 0x7f02012f;
        public: static const int wallpaper_picker_preview = 0x7f020130;
        public: static const int white_text_bg_gradient = 0x7f020131;
    };
    public: class id {
        public: static const int Button06 = 0x7f0f0093;
        public: static const int Button11 = 0x7f0f0099;
        public: static const int Button16 = 0x7f0f009f;
        public: static const int ColorHueView = 0x7f0f0082;
        public: static const int RelativeLayout1 = 0x7f0f00a5;
        public: static const int aEffectsPanel = 0x7f0f0032;
        public: static const int action_camera = 0x7f0f015c;
        public: static const int action_cancel = 0x7f0f01ba;
        public: static const int action_cluster_album = 0x7f0f01a3;
        public: static const int action_cluster_faces = 0x7f0f01a8;
        public: static const int action_cluster_location = 0x7f0f01a5;
        public: static const int action_cluster_size = 0x7f0f01a7;
        public: static const int action_cluster_tags = 0x7f0f01a6;
        public: static const int action_cluster_time = 0x7f0f01a4;
        public: static const int action_crop = 0x7f0f01b2;
        public: static const int action_delete = 0x7f0f01ae;
        public: static const int action_details = 0x7f0f01b4;
        public: static const int action_edit = 0x7f0f01af;
        public: static const int action_filter_all = 0x7f0f0166;
        public: static const int action_filter_image = 0x7f0f0167;
        public: static const int action_filter_video = 0x7f0f0168;
        public: static const int action_general_help = 0x7f0f0163;
        public: static const int action_group_by = 0x7f0f015f;
        public: static const int action_import = 0x7f0f01ac;
        public: static const int action_manage_offline = 0x7f0f0160;
        public: static const int action_more_image = 0x7f0f0164;
        public: static const int action_mute = 0x7f0f01b8;
        public: static const int action_rotate_ccw = 0x7f0f01b0;
        public: static const int action_rotate_cw = 0x7f0f01b1;
        public: static const int action_select = 0x7f0f015e;
        public: static const int action_select_all = 0x7f0f0021;
        public: static const int action_setas = 0x7f0f01b3;
        public: static const int action_settings = 0x7f0f0162;
        public: static const int action_share = 0x7f0f01ab;
        public: static const int action_share_panorama = 0x7f0f01ad;
        public: static const int action_show_on_map = 0x7f0f01b5;
        public: static const int action_simple_edit = 0x7f0f01b6;
        public: static const int action_slideshow = 0x7f0f015d;
        public: static const int action_sync_picasa_albums = 0x7f0f0161;
        public: static const int action_toggle_full_caching = 0x7f0f0020;
        public: static const int action_trim = 0x7f0f01b7;
        public: static const int addButton = 0x7f0f0075;
        public: static const int add_account = 0x7f0f01bb;
        public: static const int album_header_image = 0x7f0f0028;
        public: static const int album_header_subtitle = 0x7f0f002a;
        public: static const int album_header_title = 0x7f0f0029;
        public: static const int album_set_item_count = 0x7f0f002c;
        public: static const int album_set_item_image = 0x7f0f002d;
        public: static const int album_set_item_title = 0x7f0f002b;
        public: static const int applyBar = 0x7f0f00bf;
        public: static const int applyColorPick = 0x7f0f00a7;
        public: static const int applyEffect = 0x7f0f00bb;
        public: static const int applyFilter = 0x7f0f00bc;
        public: static const int appwidget_empty_view = 0x7f0f002f;
        public: static const int appwidget_loading_item = 0x7f0f002e;
        public: static const int appwidget_photo_item = 0x7f0f0030;
        public: static const int appwidget_stack_view = 0x7f0f0031;
        public: static const int audio_effects_switch = 0x7f0f0035;
        public: static const int bBStrengthKnob = 0x7f0f0033;
        public: static const int basicEditor = 0x7f0f00b0;
        public: static const int beep_title = 0x7f0f0053;
        public: static const int bg_replace_message = 0x7f0f0037;
        public: static const int bg_replace_message_frame = 0x7f0f0036;
        public: static const int blocker = 0x7f0f003d;
        public: static const int blueSeekBar = 0x7f0f00ef;
        public: static const int blueValue = 0x7f0f00ee;
        public: static const int borderButton = 0x7f0f0071;
        public: static const int bottomControlLineBottom = 0x7f0f00be;
        public: static const int bottomControlLineTop = 0x7f0f00c0;
        public: static const int bottom_panel = 0x7f0f00df;
        public: static const int brightnessView = 0x7f0f006e;
        public: static const int btnSelect = 0x7f0f006f;
        public: static const int btn_cancel = 0x7f0f013f;
        public: static const int btn_done = 0x7f0f013d;
        public: static const int btn_play = 0x7f0f0157;
        public: static const int btn_retake = 0x7f0f013e;
        public: static const int button03 = 0x7f0f008f;
        public: static const int button04 = 0x7f0f0090;
        public: static const int button05 = 0x7f0f0091;
        public: static const int button07 = 0x7f0f0094;
        public: static const int button08 = 0x7f0f0095;
        public: static const int button09 = 0x7f0f0096;
        public: static const int button10 = 0x7f0f0097;
        public: static const int button12 = 0x7f0f009a;
        public: static const int button13 = 0x7f0f009b;
        public: static const int button14 = 0x7f0f009c;
        public: static const int button15 = 0x7f0f009d;
        public: static const int button17 = 0x7f0f00a0;
        public: static const int button18 = 0x7f0f00a1;
        public: static const int button19 = 0x7f0f00a2;
        public: static const int button2 = 0x7f0f008e;
        public: static const int button20 = 0x7f0f00a3;
        public: static const int bwfilterButton = 0x7f0f0005;
        public: static const int camera_app_root = 0x7f0f003b;
        public: static const int camera_controls = 0x7f0f003c;
        public: static const int camera_switcher = 0x7f0f003f;
        public: static const int camera_switcher_ind = 0x7f0f0115;
        public: static const int cancel = 0x7f0f004b;
        public: static const int cancelColorPick = 0x7f0f00a6;
        public: static const int cancelFilter = 0x7f0f00b9;
        public: static const int categorySelectedIndicator = 0x7f0f006b;
        public: static const int category_panel_container = 0x7f0f00de;
        public: static const int central_panel_container = 0x7f0f0067;
        public: static const int clearButton = 0x7f0f00b4;
        public: static const int clear_effects = 0x7f0f005e;
        public: static const int colorBorderCornerSizeSeekBar = 0x7f0f007c;
        public: static const int colorBorderCornerValue = 0x7f0f007b;
        public: static const int colorBorderSizeSeekBar = 0x7f0f0079;
        public: static const int colorBorderSizeValue = 0x7f0f0078;
        public: static const int colorOpacityView = 0x7f0f0083;
        public: static const int colorPicker = 0x7f0f007f;
        public: static const int colorRectView = 0x7f0f0081;
        public: static const int color_border_menu_clear = 0x7f0f017e;
        public: static const int color_border_menu_color = 0x7f0f017d;
        public: static const int color_border_menu_corner_size = 0x7f0f017b;
        public: static const int color_border_menu_size = 0x7f0f017c;
        public: static const int colorsButton = 0x7f0f0073;
        public: static const int content = 0x7f0f014a;
        public: static const int contrastButton = 0x7f0f0003;
        public: static const int contrastSeekBar = 0x7f0f0100;
        public: static const int contrastValue = 0x7f0f00ff;
        public: static const int controlArea = 0x7f0f00b7;
        public: static const int controlName = 0x7f0f00ab;
        public: static const int controlName1 = 0x7f0f0077;
        public: static const int controlName2 = 0x7f0f007a;
        public: static const int controlName3 = 0x7f0f00cc;
        public: static const int controlValue = 0x7f0f00ac;
        public: static const int controlValueSeekBar = 0x7f0f00a9;
        public: static const int controls = 0x7f0f0076;
        public: static const int count_down_title = 0x7f0f004e;
        public: static const int count_down_to_capture = 0x7f0f004c;
        public: static const int cp_grid_button01 = 0x7f0f008d;
        public: static const int cropUtilityButton = 0x7f0f00ae;
        public: static const int cropView = 0x7f0f0058;
        public: static const int crop_menu_1to1 = 0x7f0f0180;
        public: static const int crop_menu_3to4 = 0x7f0f0183;
        public: static const int crop_menu_4to3 = 0x7f0f0182;
        public: static const int crop_menu_4to6 = 0x7f0f0181;
        public: static const int crop_menu_5to7 = 0x7f0f0184;
        public: static const int crop_menu_7to5 = 0x7f0f0185;
        public: static const int crop_menu_9to16 = 0x7f0f0186;
        public: static const int crop_menu_none = 0x7f0f0187;
        public: static const int crop_menu_original = 0x7f0f0188;
        public: static const int crop_popupmenu = 0x7f0f017f;
        public: static const int current_setting = 0x7f0f0109;
        public: static const int curve_menu_blue = 0x7f0f018c;
        public: static const int curve_menu_green = 0x7f0f018b;
        public: static const int curve_menu_red = 0x7f0f018a;
        public: static const int curve_menu_rgb = 0x7f0f0189;
        public: static const int curvesButtonRGB = 0x7f0f000c;
        public: static const int curvesUtilityButton = 0x7f0f00af;
        public: static const int curves_popupmenu = 0x7f0f017a;
        public: static const int customTitle = 0x7f0f00ad;
        public: static const int cyanSeekBar = 0x7f0f00ed;
        public: static const int cyanValue = 0x7f0f00ec;
        public: static const int data = 0x7f0f0039;
        public: static const int date_tile_day = 0x7f0f0111;
        public: static const int date_tile_month = 0x7f0f010f;
        public: static const int date_tile_year = 0x7f0f0110;
        public: static const int deleteUserPreset = 0x7f0f00e4;
        public: static const int done = 0x7f0f00c6;
        public: static const int downsampleButton = 0x7f0f0010;
        public: static const int drawOnImageButton = 0x7f0f0011;
        public: static const int drawSizeSeekBar = 0x7f0f00b6;
        public: static const int drawSizeValue = 0x7f0f00b5;
        public: static const int drawUtilityButton = 0x7f0f00b1;
        public: static const int draw_color_button01 = 0x7f0f0085;
        public: static const int draw_color_button02 = 0x7f0f0086;
        public: static const int draw_color_button03 = 0x7f0f0087;
        public: static const int draw_color_button04 = 0x7f0f0088;
        public: static const int draw_color_button05 = 0x7f0f0089;
        public: static const int draw_color_popupbutton = 0x7f0f008a;
        public: static const int draw_menu_clear = 0x7f0f0190;
        public: static const int draw_menu_color = 0x7f0f018f;
        public: static const int draw_menu_size = 0x7f0f018e;
        public: static const int draw_menu_style = 0x7f0f018d;
        public: static const int duration = 0x7f0f0051;
        public: static const int duration_unit = 0x7f0f014c;
        public: static const int edgeButton = 0x7f0f000e;
        public: static const int editView = 0x7f0f00e1;
        public: static const int editableHeight = 0x7f0f00c2;
        public: static const int editableWidth = 0x7f0f00c1;
        public: static const int editorChanSat = 0x7f0f001f;
        public: static const int editorColorBorder = 0x7f0f0015;
        public: static const int editorContainer = 0x7f0f0068;
        public: static const int editorCrop = 0x7f0f0019;
        public: static const int editorDraw = 0x7f0f0014;
        public: static const int editorFlip = 0x7f0f001a;
        public: static const int editorGrad = 0x7f0f001e;
        public: static const int editorGradButton = 0x7f0f005a;
        public: static const int editorParametric = 0x7f0f001d;
        public: static const int editorRedEye = 0x7f0f0016;
        public: static const int editorRotate = 0x7f0f001b;
        public: static const int editorStraighten = 0x7f0f001c;
        public: static const int editor_chan_sat_blue = 0x7f0f0178;
        public: static const int editor_chan_sat_cyan = 0x7f0f0177;
        public: static const int editor_chan_sat_green = 0x7f0f0176;
        public: static const int editor_chan_sat_magenta = 0x7f0f0179;
        public: static const int editor_chan_sat_main = 0x7f0f0173;
        public: static const int editor_chan_sat_red = 0x7f0f0174;
        public: static const int editor_chan_sat_yellow = 0x7f0f0175;
        public: static const int editor_grad_brightness = 0x7f0f0191;
        public: static const int editor_grad_contrast = 0x7f0f0193;
        public: static const int editor_grad_new = 0x7f0f005b;
        public: static const int editor_grad_saturation = 0x7f0f0192;
        public: static const int editor_vignette_contrast = 0x7f0f0196;
        public: static const int editor_vignette_exposure = 0x7f0f0198;
        public: static const int editor_vignette_falloff = 0x7f0f0195;
        public: static const int editor_vignette_main = 0x7f0f0194;
        public: static const int editor_vignette_saturation = 0x7f0f0197;
        public: static const int effect_background = 0x7f0f0065;
        public: static const int effect_background_separator = 0x7f0f0062;
        public: static const int effect_background_title = 0x7f0f0063;
        public: static const int effect_background_title_separator = 0x7f0f0064;
        public: static const int effect_silly_faces = 0x7f0f0061;
        public: static const int effect_silly_faces_title = 0x7f0f005f;
        public: static const int effect_silly_faces_title_separator = 0x7f0f0060;
        public: static const int estimadedSize = 0x7f0f00c3;
        public: static const int exifData = 0x7f0f00dd;
        public: static const int exifLabel = 0x7f0f00dc;
        public: static const int exportFlattenButton = 0x7f0f0170;
        public: static const int exposureButton = 0x7f0f0008;
        public: static const int exposureSeekBar = 0x7f0f00fc;
        public: static const int exposureValue = 0x7f0f00fb;
        public: static const int face_view = 0x7f0f012f;
        public: static const int face_view_stub = 0x7f0f012e;
        public: static const int falloffSeekBar = 0x7f0f0102;
        public: static const int falloffValue = 0x7f0f0101;
        public: static const int filmstrip_bottom_control_panorama = 0x7f0f0043;
        public: static const int filmstrip_view = 0x7f0f0042;
        public: static const int filtershow_cp_custom = 0x7f0f00a4;
        public: static const int filtershow_done = 0x7f0f0066;
        public: static const int flash_overlay = 0x7f0f012d;
        public: static const int floating_action_button_edit = 0x7f0f0138;
        public: static const int floating_action_button_panorama = 0x7f0f0136;
        public: static const int floating_action_button_tiny_planet = 0x7f0f0134;
        public: static const int footer = 0x7f0f011e;
        public: static const int fxButton = 0x7f0f0070;
        public: static const int gallery_root = 0x7f0f011c;
        public: static const int geometryButton = 0x7f0f0072;
        public: static const int gl_root_cover = 0x7f0f0107;
        public: static const int gl_root_view = 0x7f0f0106;
        public: static const int gradAddButton = 0x7f0f00cf;
        public: static const int gradBrightnessSeekBar = 0x7f0f00c9;
        public: static const int gradBrightnessValue = 0x7f0f00c8;
        public: static const int gradContrastSeekBar = 0x7f0f00ce;
        public: static const int gradContrastValue = 0x7f0f00cd;
        public: static const int gradDelButton = 0x7f0f00d0;
        public: static const int gradEditor = 0x7f0f00c7;
        public: static const int gradSaturationSeekBar = 0x7f0f00cb;
        public: static const int gradSaturationValue = 0x7f0f00ca;
        public: static const int greenSeekBar = 0x7f0f00eb;
        public: static const int greenValue = 0x7f0f00ea;
        public: static const int gridContainer = 0x7f0f0027;
        public: static const int grunge_popupmenu = 0x7f0f0172;
        public: static const int header = 0x7f0f011d;
        public: static const int highlightRecoveryButton = 0x7f0f000a;
        public: static const int histogramView = 0x7f0f00db;
        public: static const int historyPanel = 0x7f0f00d3;
        public: static const int hueButton = 0x7f0f0007;
        public: static const int hueView = 0x7f0f00d7;
        public: static const int image = 0x7f0f005c;
        public: static const int imageCurves = 0x7f0f0012;
        public: static const int imageName = 0x7f0f00d8;
        public: static const int imageOnlyEditor = 0x7f0f0017;
        public: static const int imageShow = 0x7f0f0069;
        public: static const int imageSize = 0x7f0f00d9;
        public: static const int imageStateList = 0x7f0f00f6;
        public: static const int imageStatePanel = 0x7f0f00f5;
        public: static const int imageThumbnail = 0x7f0f00da;
        public: static const int imageTinyPlanet = 0x7f0f00fa;
        public: static const int imageView = 0x7f0f00e3;
        public: static const int imageVignette = 0x7f0f0105;
        public: static const int imageZoom = 0x7f0f0013;
        public: static const int image_absoluteLayout = 0x7f0f0158;
        public: static const int image_display_area = 0x7f0f0159;
        public: static const int ingest_fullsize_image = 0x7f0f0112;
        public: static const int ingest_fullsize_image_checkbox = 0x7f0f0113;
        public: static const int ingest_gridview = 0x7f0f010a;
        public: static const int ingest_import_items = 0x7f0f01aa;
        public: static const int ingest_notification_importing = 0x7f0f0024;
        public: static const int ingest_notification_scanning = 0x7f0f0023;
        public: static const int ingest_switch_view = 0x7f0f01a9;
        public: static const int ingest_view_pager = 0x7f0f010b;
        public: static const int ingest_warning_view = 0x7f0f010c;
        public: static const int ingest_warning_view_icon = 0x7f0f010d;
        public: static const int ingest_warning_view_text = 0x7f0f010e;
        public: static const int kmeansButton = 0x7f0f000f;
        public: static const int knob_foreground = 0x7f0f0116;
        public: static const int knob_label = 0x7f0f011a;
        public: static const int knob_toggle_off = 0x7f0f0118;
        public: static const int knob_toggle_on = 0x7f0f0117;
        public: static const int knob_value = 0x7f0f0119;
        public: static const int labels = 0x7f0f0155;
        public: static const int leftActionButton = 0x7f0f00a8;
        public: static const int listColors = 0x7f0f0084;
        public: static const int listItems = 0x7f0f0074;
        public: static const int listStates = 0x7f0f00f7;
        public: static const int listStyles = 0x7f0f007e;
        public: static const int loading = 0x7f0f0059;
        public: static const int magentaSeekBar = 0x7f0f00f1;
        public: static const int magentaValue = 0x7f0f00f0;
        public: static const int mainPanel = 0x7f0f0057;
        public: static const int mainSeekbar = 0x7f0f00f3;
        public: static const int mainValue = 0x7f0f00f2;
        public: static const int mainView = 0x7f0f0056;
        public: static const int mainVignetteSeekbar = 0x7f0f0104;
        public: static const int mainVignetteValue = 0x7f0f0103;
        public: static const int main_panel_container = 0x7f0f006a;
        public: static const int manageUserPresets = 0x7f0f016f;
        public: static const int menu = 0x7f0f003e;
        public: static const int menu_camera = 0x7f0f0199;
        public: static const int menu_crop = 0x7f0f019f;
        public: static const int menu_delete = 0x7f0f019e;
        public: static const int menu_edit = 0x7f0f019d;
        public: static const int menu_exposure_indicator = 0x7f0f0125;
        public: static const int menu_flash_indicator = 0x7f0f0124;
        public: static const int menu_help = 0x7f0f019c;
        public: static const int menu_location_indicator = 0x7f0f0126;
        public: static const int menu_mute = 0x7f0f01a1;
        public: static const int menu_scenemode_indicator = 0x7f0f0122;
        public: static const int menu_search = 0x7f0f019a;
        public: static const int menu_set_as = 0x7f0f01a2;
        public: static const int menu_settings = 0x7f0f019b;
        public: static const int menu_share = 0x7f0f0169;
        public: static const int menu_timer_indicator = 0x7f0f0123;
        public: static const int menu_trim = 0x7f0f01a0;
        public: static const int menu_wb_indicator = 0x7f0f0127;
        public: static const int message = 0x7f0f012a;
        public: static const int movie_view_root = 0x7f0f0128;
        public: static const int negativeButton = 0x7f0f000d;
        public: static const int ok = 0x7f0f00e2;
        public: static const int on_screen_indicators = 0x7f0f0121;
        public: static const int opacityView = 0x7f0f00e0;
        public: static const int operationsList = 0x7f0f00d4;
        public: static const int panel = 0x7f0f003a;
        public: static const int panelAccessoryViewList = 0x7f0f00ba;
        public: static const int pano_stitching_progress_bar = 0x7f0f0046;
        public: static const int pano_stitching_progress_panel = 0x7f0f0044;
        public: static const int pano_stitching_progress_text = 0x7f0f0045;
        public: static const int photo = 0x7f0f012b;
        public: static const int photopage_bottom_control_edit = 0x7f0f0137;
        public: static const int photopage_bottom_control_panorama = 0x7f0f0135;
        public: static const int photopage_bottom_control_tiny_planet = 0x7f0f0133;
        public: static const int photopage_bottom_controls = 0x7f0f0132;
        public: static const int photopage_progress_background = 0x7f0f013a;
        public: static const int photopage_progress_bar = 0x7f0f0139;
        public: static const int photopage_progress_bar_text = 0x7f0f013c;
        public: static const int photopage_progress_foreground = 0x7f0f013b;
        public: static const int preview = 0x7f0f00d1;
        public: static const int preview_border = 0x7f0f0153;
        public: static const int preview_content = 0x7f0f012c;
        public: static const int preview_thumb = 0x7f0f0041;
        public: static const int primarySeekBar = 0x7f0f00b8;
        public: static const int print = 0x7f0f01b9;
        public: static const int printButton = 0x7f0f0171;
        public: static const int progress = 0x7f0f0120;
        public: static const int progressContainer = 0x7f0f0026;
        public: static const int progress_bar = 0x7f0f00f4;
        public: static const int qualitySeekBar = 0x7f0f00c4;
        public: static const int qualityTextView = 0x7f0f00c5;
        public: static const int recording_time = 0x7f0f015a;
        public: static const int recording_time_rect = 0x7f0f0154;
        public: static const int redSeekBar = 0x7f0f00e7;
        public: static const int redValue = 0x7f0f00e6;
        public: static const int redoButton = 0x7f0f016b;
        public: static const int remaining_seconds = 0x7f0f004d;
        public: static const int render_overlay = 0x7f0f0130;
        public: static const int resetHistoryButton = 0x7f0f016c;
        public: static const int resetOperationsButton = 0x7f0f00d5;
        public: static const int review_image = 0x7f0f0156;
        public: static const int rightActionButton = 0x7f0f00aa;
        public: static const int rotate_dialog_button1 = 0x7f0f0148;
        public: static const int rotate_dialog_button2 = 0x7f0f0147;
        public: static const int rotate_dialog_button_layout = 0x7f0f0146;
        public: static const int rotate_dialog_layout = 0x7f0f0141;
        public: static const int rotate_dialog_root_layout = 0x7f0f0140;
        public: static const int rotate_dialog_spinner = 0x7f0f0144;
        public: static const int rotate_dialog_text = 0x7f0f0145;
        public: static const int rotate_dialog_title = 0x7f0f0143;
        public: static const int rotate_dialog_title_layout = 0x7f0f0142;
        public: static const int rotate_toast = 0x7f0f0149;
        public: static const int rowTextView = 0x7f0f00d2;
        public: static const int saturationButton = 0x7f0f0004;
        public: static const int saturationSeekBar = 0x7f0f00fe;
        public: static const int saturationValue = 0x7f0f00fd;
        public: static const int saturationView = 0x7f0f00e5;
        public: static const int save = 0x7f0f0165;
        public: static const int saveOperationsButton = 0x7f0f00d6;
        public: static const int scrollList = 0x7f0f007d;
        public: static const int selection_menu = 0x7f0f0025;
        public: static const int set_time_interval_help_text = 0x7f0f014e;
        public: static const int set_time_interval_title = 0x7f0f0050;
        public: static const int settingList = 0x7f0f011b;
        public: static const int setting_check_box = 0x7f0f0108;
        public: static const int shadowRecoveryButton = 0x7f0f0009;
        public: static const int sharpenButton = 0x7f0f000b;
        public: static const int showImageStateButton = 0x7f0f016e;
        public: static const int showInfoPanel = 0x7f0f016d;
        public: static const int shutter = 0x7f0f0114;
        public: static const int shutter_button = 0x7f0f0040;
        public: static const int sizeAcceptButton = 0x7f0f00b3;
        public: static const int sizeSeekBar = 0x7f0f00b2;
        public: static const int sound_check_box = 0x7f0f0054;
        public: static const int start_trim = 0x7f0f0150;
        public: static const int state_panel_container = 0x7f0f006c;
        public: static const int status = 0x7f0f011f;
        public: static const int surface_view = 0x7f0f0129;
        public: static const int tableRow1 = 0x7f0f008c;
        public: static const int tableRow2 = 0x7f0f0092;
        public: static const int tableRow3 = 0x7f0f0098;
        public: static const int tableRow4 = 0x7f0f009e;
        public: static const int text = 0x7f0f005d;
        public: static const int textView = 0x7f0f0080;
        public: static const int textView1 = 0x7f0f008b;
        public: static const int thumbnail = 0x7f0f0131;
        public: static const int time_duration_picker = 0x7f0f004f;
        public: static const int time_interval_picker = 0x7f0f014b;
        public: static const int time_lapse_interval_set_button = 0x7f0f014f;
        public: static const int time_lapse_label = 0x7f0f015b;
        public: static const int time_lapse_switch = 0x7f0f014d;
        public: static const int timer_set_button = 0x7f0f0055;
        public: static const int timer_sound = 0x7f0f0052;
        public: static const int tinyPlanetEditor = 0x7f0f00f9;
        /**  Buttons ids for the filters 
         */
        public: static const int tinyplanetButton = 0x7f0f0000;
        public: static const int title = 0x7f0f0038;
        public: static const int toggleVersionsPanel = 0x7f0f00f8;
        public: static const int toggle_state = 0x7f0f00bd;
        public: static const int top = 0x7f0f006d;
        public: static const int trim_view_root = 0x7f0f0151;
        public: static const int undoButton = 0x7f0f016a;
        public: static const int undo_button = 0x7f0f0152;
        public: static const int vIStrengthKnob = 0x7f0f0034;
        public: static const int vibranceButton = 0x7f0f0002;
        public: static const int viewpager = 0x7f0f0022;
        public: static const int vignetteButton = 0x7f0f0001;
        public: static const int vignetteEditor = 0x7f0f0018;
        public: static const int wbalanceButton = 0x7f0f0006;
        public: static const int widget_type = 0x7f0f0047;
        public: static const int widget_type_album = 0x7f0f0048;
        public: static const int widget_type_photo = 0x7f0f0049;
        public: static const int widget_type_shuffle = 0x7f0f004a;
        public: static const int yellowSeekBar = 0x7f0f00e9;
        public: static const int yellowValue = 0x7f0f00e8;
    };
    public: class integer {
        public: static const int album_cols_land = 0x7f0d0007;
        public: static const int album_cols_port = 0x7f0d0008;
        /**  configuration for album page 
 configuration for album page 
         */
        public: static const int album_rows_land = 0x7f0d0005;
        public: static const int album_rows_port = 0x7f0d0006;
        public: static const int albumset_cols_land = 0x7f0d0003;
        public: static const int albumset_cols_port = 0x7f0d0004;
        /**  configuration for legacy album set page 
 configuration for album set page 
         */
        public: static const int albumset_rows_land = 0x7f0d0001;
        public: static const int albumset_rows_port = 0x7f0d0002;
        /**  Maximum recording length in milliseconds. 0 means unlimited. 
         */
        public: static const int max_video_recording_length = 0x7f0d0000;
    };
    public: class interpolator {
        public: static const int decelerate_cubic = 0x7f060000;
        public: static const int decelerate_quint = 0x7f060001;
    };
    public: class layout {
        public: static const int action_bar_text = 0x7f040000;
        public: static const int action_bar_two_line_text = 0x7f040001;
        public: static const int action_mode = 0x7f040002;
        public: static const int album_content = 0x7f040003;
        public: static const int album_header = 0x7f040004;
        public: static const int album_set_item = 0x7f040005;
        public: static const int appwidget_loading_item = 0x7f040006;
        public: static const int appwidget_main = 0x7f040007;
        public: static const int appwidget_photo_item = 0x7f040008;
        public: static const int audio_effects_dialog = 0x7f040009;
        public: static const int audio_effects_title = 0x7f04000a;
        public: static const int bg_replacement_training_message = 0x7f04000b;
        public: static const int bookmark = 0x7f04000c;
        public: static const int bookmark_edit_dialog = 0x7f04000d;
        public: static const int bookmark_item = 0x7f04000e;
        public: static const int camera = 0x7f04000f;
        public: static const int camera_controls = 0x7f040010;
        public: static const int camera_filmstrip = 0x7f040011;
        public: static const int choose_widget_type = 0x7f040012;
        public: static const int count_down_to_capture = 0x7f040013;
        public: static const int countdown_setting_popup = 0x7f040014;
        public: static const int crop_activity = 0x7f040015;
        public: static const int cropimage = 0x7f040016;
        public: static const int details = 0x7f040017;
        public: static const int details_list = 0x7f040018;
        public: static const int dialog_picker = 0x7f040019;
        public: static const int editor_grad_button = 0x7f04001a;
        public: static const int effect_setting_item = 0x7f04001b;
        public: static const int effect_setting_popup = 0x7f04001c;
        public: static const int face_view = 0x7f04001d;
        public: static const int filtershow_actionbar = 0x7f04001e;
        public: static const int filtershow_activity = 0x7f04001f;
        public: static const int filtershow_brightness = 0x7f040020;
        public: static const int filtershow_category_panel = 0x7f040021;
        public: static const int filtershow_category_panel_new = 0x7f040022;
        public: static const int filtershow_color_border_ui = 0x7f040023;
        public: static const int filtershow_color_gird = 0x7f040024;
        public: static const int filtershow_color_picker = 0x7f040025;
        public: static const int filtershow_control_action_slider = 0x7f040026;
        public: static const int filtershow_control_color_chooser = 0x7f040027;
        public: static const int filtershow_control_style_chooser = 0x7f040028;
        public: static const int filtershow_control_title_slider = 0x7f040029;
        public: static const int filtershow_cp_custom_title = 0x7f04002a;
        public: static const int filtershow_crop_button = 0x7f04002b;
        public: static const int filtershow_curves_button = 0x7f04002c;
        public: static const int filtershow_default_editor = 0x7f04002d;
        public: static const int filtershow_draw_button = 0x7f04002e;
        public: static const int filtershow_draw_size = 0x7f04002f;
        public: static const int filtershow_draw_ui = 0x7f040030;
        public: static const int filtershow_editor_panel = 0x7f040031;
        public: static const int filtershow_export_dialog = 0x7f040032;
        public: static const int filtershow_grad_editor = 0x7f040033;
        public: static const int filtershow_grad_ui = 0x7f040034;
        public: static const int filtershow_history_operation_row = 0x7f040035;
        public: static const int filtershow_history_panel = 0x7f040036;
        public: static const int filtershow_hue = 0x7f040037;
        public: static const int filtershow_info_panel = 0x7f040038;
        public: static const int filtershow_main_panel = 0x7f040039;
        public: static const int filtershow_opacity = 0x7f04003a;
        public: static const int filtershow_presets_management_dialog = 0x7f04003b;
        public: static const int filtershow_presets_management_row = 0x7f04003c;
        public: static const int filtershow_saturation = 0x7f04003d;
        public: static const int filtershow_saturation_controls = 0x7f04003e;
        public: static const int filtershow_seekbar = 0x7f04003f;
        public: static const int filtershow_splashscreen = 0x7f040040;
        public: static const int filtershow_state_panel = 0x7f040041;
        public: static const int filtershow_state_panel_new = 0x7f040042;
        public: static const int filtershow_tiny_planet_editor = 0x7f040043;
        public: static const int filtershow_vignette_controls = 0x7f040044;
        public: static const int filtershow_vignette_editor = 0x7f040045;
        public: static const int filtershow_zoom_editor = 0x7f040046;
        public: static const int gl_root_group = 0x7f040047;
        public: static const int in_line_setting_check_box = 0x7f040048;
        public: static const int in_line_setting_menu = 0x7f040049;
        public: static const int ingest_activity_item_list = 0x7f04004a;
        public: static const int ingest_date_tile = 0x7f04004b;
        public: static const int ingest_fullsize = 0x7f04004c;
        public: static const int ingest_thumbnail = 0x7f04004d;
        public: static const int keyguard_widget = 0x7f04004e;
        public: static const int knob = 0x7f04004f;
        public: static const int list_pref_setting_popup = 0x7f040050;
        public: static const int main = 0x7f040051;
        public: static const int manage_offline_bar = 0x7f040052;
        public: static const int menu_indicators = 0x7f040053;
        public: static const int menu_indicators_keyguard = 0x7f040054;
        public: static const int more_setting_popup = 0x7f040055;
        public: static const int movie_view = 0x7f040056;
        public: static const int multigrid_content = 0x7f040057;
        public: static const int on_screen_hint = 0x7f040058;
        public: static const int photo_frame = 0x7f040059;
        public: static const int photo_module = 0x7f04005a;
        public: static const int photo_set_item = 0x7f04005b;
        public: static const int photopage_bottom_controls = 0x7f04005c;
        public: static const int photopage_progress_bar = 0x7f04005d;
        public: static const int popup_list_item = 0x7f04005e;
        public: static const int review_module_control = 0x7f04005f;
        public: static const int rotate_dialog = 0x7f040060;
        public: static const int rotate_text_toast = 0x7f040061;
        public: static const int secure_album_placeholder = 0x7f040062;
        public: static const int setting_item = 0x7f040063;
        public: static const int setting_list = 0x7f040064;
        public: static const int switcher_popup = 0x7f040065;
        public: static const int time_interval_picker = 0x7f040066;
        public: static const int time_interval_popup = 0x7f040067;
        public: static const int trim_menu = 0x7f040068;
        public: static const int trim_view = 0x7f040069;
        public: static const int undo_bar = 0x7f04006a;
        public: static const int video_module = 0x7f04006b;
        public: static const int view_gif_image = 0x7f04006c;
        public: static const int viewfinder_labels_video = 0x7f04006d;
    };
    public: class menu {
        public: static const int album = 0x7f120000;
        public: static const int albumset = 0x7f120001;
        public: static const int crop = 0x7f120002;
        public: static const int filterby = 0x7f120003;
        public: static const int filtershow_activity_menu = 0x7f120004;
        public: static const int filtershow_menu_chan_sat = 0x7f120005;
        public: static const int filtershow_menu_color_border = 0x7f120006;
        public: static const int filtershow_menu_crop = 0x7f120007;
        public: static const int filtershow_menu_curves = 0x7f120008;
        public: static const int filtershow_menu_draw = 0x7f120009;
        public: static const int filtershow_menu_grad = 0x7f12000a;
        public: static const int filtershow_menu_vignette = 0x7f12000b;
        public: static const int gallery = 0x7f12000c;
        public: static const int gallery_multiselect = 0x7f12000d;
        public: static const int groupby = 0x7f12000e;
        public: static const int ingest_menu_item_list_selection = 0x7f12000f;
        public: static const int movie = 0x7f120010;
        public: static const int operation = 0x7f120011;
        public: static const int photo = 0x7f120012;
        public: static const int pickup = 0x7f120013;
        public: static const int settings = 0x7f120014;
    };
    public: class mipmap {
        public: static const int ic_launcher_camera = 0x7f030000;
        public: static const int ic_launcher_gallery = 0x7f030001;
    };
    public: class plurals {
        /**  String Delete the selected media item(s) [CHAR LIMIT=50] 
         */
        public: static const int delete_selection = 0x7f110000;
        /**  String indicating how many media items from the camera have been scanned 
         */
        public: static const int ingest_number_of_items_scanned = 0x7f110005;
        /**  String indicating how many media items from the camera have been selected 
         */
        public: static const int ingest_number_of_items_selected = 0x7f110006;
        /**  Toast message shown after we make some album(s) available offline [CHAR LIMIT=50] 
         */
        public: static const int make_albums_available_offline = 0x7f110004;
        /**  String indicating how many media album(s) is(are) selected
            eg. 1 selected [CHAR LIMIT=30] 
 String indicating how many media album(s) is(are) selected
            eg. 1 album selected [CHAR LIMIT=30] 
         */
        public: static const int number_of_albums_selected = 0x7f110002;
        /**  String indicating how many media group(s) is(are) selected
            eg. 1 selected [CHAR LIMIT=30] 
 String indicating how many media group(s) is(are) selected
            eg. 1 group selected [CHAR LIMIT=30] 
         */
        public: static const int number_of_groups_selected = 0x7f110003;
        /**  String indicating how many media item(s) is(are) selected
            eg. 1 selected [CHAR LIMIT=30] 
 String indicating how many media item(s) is(are) selected
            eg. 1 item selected [CHAR LIMIT=30] 
         */
        public: static const int number_of_items_selected = 0x7f110001;
        /**  String indicating how many photos are in an album [CHAR LIMIT=15] 
         */
        public: static const int number_of_photos = 0x7f110008;
        /**  Entry for countdown timer setting. e.g. 1 second, 10 seconds, etc. [CHAR LIMIT=30]
         */
        public: static const int pref_camera_timer_entry = 0x7f110007;
    };
    public: class raw {
        public: static const int backdropper = 0x7f080000;
        public: static const int beep_once = 0x7f080001;
        public: static const int beep_twice = 0x7f080002;
        public: static const int blank = 0x7f080003;
        public: static const int focus_complete = 0x7f080004;
        public: static const int goofy_face = 0x7f080005;
        public: static const int video_record = 0x7f080006;
    };
    public: class string {
        /**  Label for when the aspect ratio is fixed to a value [CHAR LIMIT=15] 
         */
        public: static const int Fixed = 0x7f0b005f;
        /**  A label shown on the action bar. It indicates that the operation
         to import media item(s) [CHAR LIMIT=20] 
         */
        public: static const int Import = 0x7f0b013c;
        /**  String indicating how camera shooting feature is used. [CHAR LIMIT=8] 
         */
        public: static const int _auto = 0x7f0b0125;
        /**  Details dialog "OK" button. Dismisses dialog. 
         */
        public: static const int _delete = 0x7f0b00dc;
        /**  alert to the user that the camera fails to read or write the SD card. 
         */
        public: static const int access_sd_fail = 0x7f0b0172;
        /**  The button to back to the first-level indicators of the camera settings. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_back_to_first_level = 0x7f0b01ff;
        /**  The front/back camera switch. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_camera_picker = 0x7f0b01fc;
        /**  The check box in camera settings, such as store location. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_check_box = 0x7f0b0203;
        /**  The decrement button in camera preference such as exposure, picture size. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_decrement = 0x7f0b0201;
        /**  The increment button in camera preference such as exposure, picture size. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_increment = 0x7f0b0202;
        /**  The menu button. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_menu_button = 0x7f0b01fa;
        /**  The mode picker to switch between camera, video and panorama. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_mode_picker = 0x7f0b01fd;
        /**  The button to pause the video. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_pause_video = 0x7f0b020d;
        /**  The button to play the video. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_play_video = 0x7f0b020c;
        /**  The button to reload the video. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_reload_video = 0x7f0b020e;
        /**  The button in review mode indicating that the photo taking, video recording, and panorama saving session should be canceled [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_review_cancel = 0x7f0b0209;
        /**  The button in review mode indicating that the taken photo/video is OK to be attached/uploaded [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_review_ok = 0x7f0b020a;
        /**  button in review mode indicate the user want to retake another photo/video for attachment [
CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_review_retake = 0x7f0b020b;
        /**  The button to review the thumbnail. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_review_thumbnail = 0x7f0b01fb;
        /**  The button to switch to the second-level indicators of the camera settings. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_second_level_indicators = 0x7f0b01fe;
        /**  The shutter button. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_shutter_button = 0x7f0b01f9;
        /**  The button to switch to Camera mode. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_switch_to_camera = 0x7f0b0204;
        /**  The button to switch to new Panorama mode. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_switch_to_new_panorama = 0x7f0b0207;
        /**  The button to switch to Panorama mode. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_switch_to_panorama = 0x7f0b0206;
        /**  The button to switch to the Re-Focus mode. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_switch_to_refocus = 0x7f0b0208;
        /**  The button to switch to Video mode. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_switch_to_video = 0x7f0b0205;
        /**  The time bar of the media player. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_time_bar = 0x7f0b020f;
        /**  The zoom control button. [CHAR LIMIT = NONE] 
         */
        public: static const int accessibility_zoom_control = 0x7f0b0200;
        /**  The title of menu item where user can add a new account 
         */
        public: static const int add_account = 0x7f0b014e;
        /**  Group by Albums tab on Action Bar. [CHAR LIMIT=12] 
         */
        public: static const int albums = 0x7f0b0147;
        /**  Text indicating aperture of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int aperture = 0x7f0b011e;
        public: static const int apn = 0x7f0b0012;
        public: static const int app_name = 0x7f0b00bb;
        /**   Label for the apply effect button [CHAR LIMIT=15] 
         */
        public: static const int apply_effect = 0x7f0b0053;
        /**  Text for the empty state of the StackView AppWidget [CHAR LIMIT=30] 
         */
        public: static const int appwidget_empty_text = 0x7f0b0107;
        /**  Title of the StackView AppWidget 
         */
        public: static const int appwidget_title = 0x7f0b0106;
        /**   Label for aspect [CHAR LIMIT=15] 
         */
        public: static const int aspect = 0x7f0b0055;
        /**   Label for the aspect 1:1 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect1to1_effect = 0x7f0b0056;
        /**   Label for the aspect 3:4 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect3to4_effect = 0x7f0b0058;
        /**   Label for the aspect 4:3 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect4to3_effect = 0x7f0b0057;
        /**   Label for the aspect 4:7 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect4to6_effect = 0x7f0b0059;
        /**   Label for the aspect 5:7 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect5to7_effect = 0x7f0b005a;
        /**   Label for the aspect 7:5 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect7to5_effect = 0x7f0b005b;
        /**   Label for the aspect 1:1 effect [CHAR LIMIT=15] 
         */
        public: static const int aspect9to16_effect = 0x7f0b005c;
        /**   Label for the aspect None effect [CHAR LIMIT=15] 
         */
        public: static const int aspectNone_effect = 0x7f0b005d;
        /**   Label for the aspect None effect [CHAR LIMIT=15] 
         */
        public: static const int aspectOriginal_effect = 0x7f0b005e;
        /**  The label for the audio effects menu. 
         */
        public: static const int audio_effects = 0x7f0b0030;
        /**  The title of the audio effects dialog. 
         */
        public: static const int audio_effects_dialog_title = 0x7f0b0032;
        /**  The label for the bass boost knob of the audio effects dialog. 
         */
        public: static const int bass_boost_strength = 0x7f0b002e;
        /**  Message displayed in overlay during background replacement training [CHAR LIMIT=180]
         */
        public: static const int bg_replacement_message = 0x7f0b01f1;
        public: static const int bookmark_add = 0x7f0b0020;
        public: static const int bookmark_add_success = 0x7f0b0024;
        public: static const int bookmark_display = 0x7f0b0021;
        public: static const int bookmark_empty = 0x7f0b0022;
        public: static const int bookmark_exist = 0x7f0b0023;
        public: static const int bookmark_list = 0x7f0b0025;
        public: static const int bookmark_location = 0x7f0b0027;
        public: static const int bookmark_title = 0x7f0b0026;
        /**   Text for filters that apply a border to a picture [CHAR LIMIT=20] 
         */
        public: static const int borders = 0x7f0b003b;
        public: static const int buffer_size = 0x7f0b0011;
        /**   Label for the image BW filter (makes black & white) button [CHAR LIMIT=10] 
         */
        public: static const int bwfilter = 0x7f0b0066;
        /**  String used as a small notification label above a Picasa album.
         It means the pictures of the Picasa album is currently being
         transferred to local storage, so the pictures can later be viewed
         offline. [CHAR LIMIT=15] 
         */
        public: static const int caching_label = 0x7f0b00f2;
        /**  A toast indicating a camera is connected to the device [CHAR LIMIT=30]
         */
        public: static const int camera_connected = 0x7f0b013f;
        /**  message for the dialog showing the camera is disabled because of security policies. Camera cannot be used. 
         */
        public: static const int camera_disabled = 0x7f0b016d;
        /**  A toast indicating a camera is disconnected [CHAR LIMIT=30] 
         */
        public: static const int camera_disconnected = 0x7f0b0140;
        /**  Camera resources below 
 General strings 
 title for the dialog showing the error of camera hardware 
         */
        public: static const int camera_error_title = 0x7f0b016b;
        /**  label for the icon meaning 'show me all the images that were taken with the camera' 
         */
        public: static const int camera_label = 0x7f0b016e;
        /**  Camera menu labels 
 more options label [CHAR LIMIT=50] 
         */
        public: static const int camera_menu_more_label = 0x7f0b024c;
        /**  settings label [CHAR LIMIT=50] 
         */
        public: static const int camera_menu_settings_label = 0x7f0b024d;
        public: static const int camera_setas_wallpaper = 0x7f0b00db;
        public: static const int cancel = 0x7f0b00de;
        /**  message for the dialog showing the error of camera hardware 
         */
        public: static const int cannot_connect_camera = 0x7f0b016c;
        /**   String shown when cannot load the original image. We will edit selected image [CHAR LIMIT=NONE] 
         */
        public: static const int cannot_edit_original = 0x7f0b0036;
        /**   String shown when we cannot load the image when starting the activity [CHAR LIMIT=NONE] 
         */
        public: static const int cannot_load_image = 0x7f0b0035;
        /**  Default text for a button that can be toggled on and off. 
         */
        public: static const int capital_off = 0x7f0b0212;
        /**  Default text for a button that can be toggled on and off. 
         */
        public: static const int capital_on = 0x7f0b0211;
        /**  A button in effect setting popup to clear the effect. [CHAR LIMIT=26] 
         */
        public: static const int clear_effects = 0x7f0b01f6;
        /**  A label shown on MTP albums thumbnail to instruct users to import
        [CHAR LIMIT=40] 
         */
        public: static const int click_import = 0x7f0b0141;
        /**  format error in translation for details_title (2611396603977441273) 
         */
        public: static const int close = 0x7f0b00e9;
        /**   Label for the removing borders [CHAR LIMIT=14] 
         */
        public: static const int color_border_clear = 0x7f0b009b;
        /**   Label for selecting the border color [CHAR LIMIT=14] 
         */
        public: static const int color_border_color = 0x7f0b009a;
        /**   Label for the border corner size (or rounding) [CHAR LIMIT=14] 
         */
        public: static const int color_border_corner_size = 0x7f0b0099;
        /**   Label for the with of the border[CHAR LIMIT=14] 
         */
        public: static const int color_border_size = 0x7f0b0098;
        /**   Label for the select the color [CHAR LIMIT=35] 
         */
        public: static const int color_pick_select = 0x7f0b009c;
        /**   The title for the color pick dialog [CHAR LIMIT=20] 
         */
        public: static const int color_pick_title = 0x7f0b009d;
        /**   Additional filters buttons  
  Label for the compare original image filter button [CHAR LIMIT=15] 
         */
        public: static const int compare_original = 0x7f0b0052;
        public: static const int confirm = 0x7f0b00dd;
        /**   Label for the image contrast (color difference) filter button [CHAR LIMIT=10] 
         */
        public: static const int contrast = 0x7f0b0063;
        /**  On-screen hint during timer countdown for taking a photo. [CHAR LIMIT = 60]
         */
        public: static const int count_down_title_text = 0x7f0b0243;
        /**   Label for the image crop effect [CHAR LIMIT=15] 
         */
        public: static const int crop = 0x7f0b0075;
        /**  The title of the menu item to let user crop the image. [CHAR LIMIT=15] 
         */
        public: static const int crop_action = 0x7f0b00f3;
        /**  menu pick: crop the currently selected image [CHAR LIMIT=30]
         */
        public: static const int crop_label = 0x7f0b00d1;
        /**  Title of a menu item to indicate performing the image crop operation
         [CHAR LIMIT=20] 
         */
        public: static const int crop_save_text = 0x7f0b00cb;
        /**  Toast message shown when the cropped image has been saved in the
         %s folder (string: folder_download) [CHAR LIMIT=50]
         */
        public: static const int crop_saved = 0x7f0b0108;
        /**   Label for the image curves filter button [CHAR LIMIT=10] 
         */
        public: static const int curvesRGB = 0x7f0b006b;
        /**   Label for the curves tool, Blue color channel [CHAR LIMIT=14] 
         */
        public: static const int curves_channel_blue = 0x7f0b008d;
        /**   Label for the curves tool, Green color channel [CHAR LIMIT=14] 
         */
        public: static const int curves_channel_green = 0x7f0b008c;
        /**   Label for the curves tool, Red color channel [CHAR LIMIT=14] 
         */
        public: static const int curves_channel_red = 0x7f0b008b;
        /**   Labels for the curves tool 
  Label for the curves tool, all channels (RGB) [CHAR LIMIT=3] 
         */
        public: static const int curves_channel_rgb = 0x7f0b008a;
        /**  Text for the custom border filter [CHAR LIMIT=20] 
         */
        public: static const int custom_border = 0x7f0b003c;
        public: static const int default_title = 0x7f0b0029;
        public: static const int delete_all = 0x7f0b0028;
        /**  The label shown after an image is deleted [CHAR LIMIT=16] 
         */
        public: static const int deleted = 0x7f0b00e2;
        /**  Text indicating the description of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int description = 0x7f0b0111;
        public: static const int deselect_all = 0x7f0b00e5;
        public: static const int details = 0x7f0b00e7;
        /**  Used to format video duration in Details dialog. hours:minutes:seconds e.g. 0:21:30 
         */
        public: static const int details_hms = 0x7f0b00be;
        /**  Used to format short video duration in Details dialog. minutes:seconds e.g. 00:30 
         */
        public: static const int details_ms = 0x7f0b00bd;
        public: static const int details_title = 0x7f0b00e8;
        /**  Dialog "OK" button. Dismisses dialog. 
         */
        public: static const int dialog_ok = 0x7f0b01d6;
        /**  Toast telling users video snapshot is disabled when the effects are on and a user tries to tap on the viewfinder [CHAR LIMIT=65] 
         */
        public: static const int disable_video_snapshot_hint = 0x7f0b01f5;
        /**  A label on a button. The user clicks this button after he has
         finished selection. [CHAR LIMIT=15] 
         */
        public: static const int done = 0x7f0b010e;
        /**   generic strings 
  Text for to display on a download failure [CHAR LIMIT=NONE] 
         */
        public: static const int download_failure = 0x7f0b0039;
        /**   Label for the image downsampling effect (makes image smaller) [CHAR LIMIT=15] 
         */
        public: static const int downsample = 0x7f0b007c;
        /**   Label for the removing drawing from screen [CHAR LIMIT=14] 
         */
        public: static const int draw_clear = 0x7f0b0097;
        /**   Label for the color to draw in [CHAR LIMIT=14] 
         */
        public: static const int draw_color = 0x7f0b0093;
        /**   Label for the Hue to draw in [CHAR LIMIT=14] 
         */
        public: static const int draw_hue = 0x7f0b0090;
        /**   Label for the color to draw in [CHAR LIMIT=14] 
         */
        public: static const int draw_saturation = 0x7f0b0091;
        /**   Label for the size to draw in in [CHAR LIMIT=14] 
         */
        public: static const int draw_size = 0x7f0b008f;
        /**   The accept the draw size [CHAR LIMIT=20] 
         */
        public: static const int draw_size_accept = 0x7f0b009f;
        /**   The title for draw size [CHAR LIMIT=50] 
         */
        public: static const int draw_size_title = 0x7f0b009e;
        /**   Label for the The style to draw in [CHAR LIMIT=14] 
         */
        public: static const int draw_style = 0x7f0b008e;
        /**   Label for the Spatter brush style of drawing in [CHAR LIMIT=14] 
         */
        public: static const int draw_style_brush_marker = 0x7f0b0096;
        /**   Label for the Marker brush style of drawing in [CHAR LIMIT=14] 
         */
        public: static const int draw_style_brush_spatter = 0x7f0b0095;
        /**   Label for the line style of drawing in [CHAR LIMIT=14] 
         */
        public: static const int draw_style_line = 0x7f0b0094;
        /**   Label for the Brightness to draw in [CHAR LIMIT=14] 
         */
        public: static const int draw_value = 0x7f0b0092;
        /**  Text indicating the duration of a video item in details window [CHAR LIMIT=14] 
         */
        public: static const int duration = 0x7f0b0118;
        /**   Label for the image edges effect (highlights edges in image) [CHAR LIMIT=10] 
         */
        public: static const int edge = 0x7f0b007a;
        /**  String used as a menu label. The user can choose to edit the image
         [CHAR_LIMIT=20]
         */
        public: static const int edit = 0x7f0b00ef;
        /**   Label for the blue control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_blue = 0x7f0b0086;
        /**   Label for the cyan control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_cyan = 0x7f0b0085;
        /**   Label for the green control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_green = 0x7f0b0084;
        /**   Label for the Magenta control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_magenta = 0x7f0b0087;
        /**   Label for the Main or Master control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_main = 0x7f0b0081;
        /**   Label for the red control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_red = 0x7f0b0082;
        /**   Label for the yellow control for per channel saturation effect [CHAR LIMIT=20] 
         */
        public: static const int editor_chan_sat_yellow = 0x7f0b0083;
        /**   Label for the Brightness effect  [CHAR LIMIT=20] 
         */
        public: static const int editor_grad_brightness = 0x7f0b007e;
        /**   Label for the Contrast filter effect  [CHAR LIMIT=20] 
         */
        public: static const int editor_grad_contrast = 0x7f0b007f;
        /**  new virtual graduated neutral density filter  [CHAR LIMIT=20] 
         */
        public: static const int editor_grad_new = 0x7f0b0089;
        /**   Label for the saturation effect  [CHAR LIMIT=20] 
         */
        public: static const int editor_grad_saturation = 0x7f0b0080;
        /**   Label for the image graduated filter effect  [CHAR LIMIT=20] 
         */
        public: static const int editor_grad_style = 0x7f0b0088;
        /**  Effect setting item that replaces background with video from gallery. [CHAR LIMIT=14] 
         */
        public: static const int effect_backdropper_gallery = 0x7f0b01f0;
        /**  Effect setting item that replaces background with Android in Space. [CHAR LIMIT=14] 
         */
        public: static const int effect_backdropper_space = 0x7f0b01ee;
        /**  Effect setting item that replaces background with a sunset. [CHAR LIMIT=14] 
         */
        public: static const int effect_backdropper_sunset = 0x7f0b01ef;
        /**  Title of category for background replacement effects. [CHAR LIMIT=26] 
         */
        public: static const int effect_background = 0x7f0b01f8;
        /**  Effect setting item that makes eyes big. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_big_eyes = 0x7f0b01e9;
        /**  Effect setting item that makes mouth big. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_big_mouth = 0x7f0b01ea;
        /**  Effect setting item that makes nose big. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_big_nose = 0x7f0b01ec;
        /**  Effect setting item that makes eyes small. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_small_eyes = 0x7f0b01ed;
        /**  Effect setting item that makes mouth small. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_small_mouth = 0x7f0b01eb;
        /**  Effect setting item that squeezes the face. [CHAR LIMIT=14] 
         */
        public: static const int effect_goofy_face_squeeze = 0x7f0b01e8;
        /**  Effect setting item that clear the effect. [CHAR LIMIT=14] 
         */
        public: static const int effect_none = 0x7f0b01e7;
        /**  Title of category for silly face effects. [CHAR LIMIT=26] 
         */
        public: static const int effect_silly_faces = 0x7f0b01f7;
        /**  TODO: remove the string as it is a work-around solution to bypass the default speak of the element type. 
         */
        public: static const int empty = 0x7f0b0210;
        /**  Toast message shown when we close the AlbumPage because it is empty
            [CHAR LIMIT=50] 
         */
        public: static const int empty_album = 0x7f0b010a;
        /**   String displayed when exiting editor[CHAR LIMIT=NONE] 
         */
        public: static const int exit = 0x7f0b004d;
        /**  Export Dialog
  Text for the dialog title to export a flattened photo[CHAR LIMIT=25] 
         */
        public: static const int export_flattened = 0x7f0b0043;
        /**   Text for the menu item to export a flattened photo[CHAR LIMIT=30] 
         */
        public: static const int export_image = 0x7f0b0041;
        /**   Filters buttons 
  Label for the image exposure (brightness) filter button [CHAR LIMIT=10] 
         */
        public: static const int exposure = 0x7f0b0061;
        /**  Text indicating the exposure time of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int exposure_time = 0x7f0b0121;
        /**  Displayed in the title of those pictures that fails to be loaded
         [CHAR LIMIT=50]
         */
        public: static const int fail_to_load = 0x7f0b00c7;
        /**  Used in a toast message when an image fails to be loaded
         [CHAR LIMIT=50]
         */
        public: static const int fail_to_load_image = 0x7f0b00c8;
        /**  The tips of trimming video 
         */
        public: static const int fail_trim = 0x7f0b0033;
        /**  String for filter that washes out colors (filtershow_fx_0002_bleach) [CHAR LIMIT=10] 
         */
        public: static const int ffx_bleach = 0x7f0b012c;
        /**  String for filter that makes colors a bluish (filtershow_fx_0003_blue_crush) [CHAR LIMIT=10] 
         */
        public: static const int ffx_blue_crush = 0x7f0b012d;
        /**  String for filter that makes image black & white (filtershow_fx_0004_bw_contrast) [CHAR LIMIT=10] 
         */
        public: static const int ffx_bw_contrast = 0x7f0b012e;
        /**  String for filter that brightens colors like instant cameras(filtershow_fx_0001_instant) [CHAR LIMIT=10] 
         */
        public: static const int ffx_instant = 0x7f0b012b;
        /**  String for the empty not filtered image [CHAR LIMIT=10] 
         */
        public: static const int ffx_original = 0x7f0b0129;
        /**  String for filter that makes colors a yellowish (filtershow_fx_0005_punch) [CHAR LIMIT=10] 
         */
        public: static const int ffx_punch = 0x7f0b012f;
        /**  String for brown-colored old-fashion looking filter (filtershow_fx_0000_vintage) [CHAR LIMIT=10] 
         */
        public: static const int ffx_vintage = 0x7f0b012a;
        /**  String for filter that makes image coffee-colored (filtershow_fx_0007_washout) [CHAR LIMIT=10] 
         */
        public: static const int ffx_washout = 0x7f0b0131;
        /**  String for filter that makes colors washed out and brownish
         (filtershow_fx_0008_washout_color) [CHAR LIMIT=10] 
         */
        public: static const int ffx_washout_color = 0x7f0b0132;
        /**  String for filter that mimics the cross-process technique in
         photography (makes colors bluish) (filtershow_fx_0006_x_process) [CHAR LIMIT=10] 
         */
        public: static const int ffx_x_process = 0x7f0b0130;
        /**  Text indicating the file size of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int file_size = 0x7f0b011a;
        /**  Label for the add button in the category panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_add_button_looks = 0x7f0b00ad;
        /**  Label for the add button in the versions panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_add_button_versions = 0x7f0b00ae;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_aperture = 0x7f0b00b2;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_copyright = 0x7f0b00b9;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_date = 0x7f0b00b6;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_exposure_time = 0x7f0b00b8;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_f_stop = 0x7f0b00b7;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_focal_length = 0x7f0b00b3;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_iso = 0x7f0b00b4;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_model = 0x7f0b00b1;
        /**  Label for exif tags in the information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_exif_subject_distance = 0x7f0b00b5;
        /**  Label for the manage preset menu [CHAR LIMIT=42] 
         */
        public: static const int filtershow_manage_preset = 0x7f0b00a5;
        /**  Label for newly created user preset [CHAR LIMIT=30] 
         */
        public: static const int filtershow_new_preset = 0x7f0b00a6;
        /**  Label for the notification [CHAR LIMIT=50] 
         */
        public: static const int filtershow_notification_label = 0x7f0b00a2;
        /**  Label for the notification message [CHAR LIMIT=50] 
         */
        public: static const int filtershow_notification_message = 0x7f0b00a3;
        /**  Label for preset name [CHAR LIMIT=30] 
         */
        public: static const int filtershow_preset_name = 0x7f0b00a7;
        /**   Text for redo menu item [CHAR LIMIT=20] 
         */
        public: static const int filtershow_redo = 0x7f0b003e;
        /**  Label for the save preset menu [CHAR LIMIT=30] 
         */
        public: static const int filtershow_save_preset = 0x7f0b00a4;
        /**  Toast/alert that the image is being saved after editing in filtershow [CHAR LIMIT=40]
         */
        public: static const int filtershow_saving_image = 0x7f0b00cf;
        /**  Label for showing the image information panel [CHAR LIMIT=50] 
         */
        public: static const int filtershow_show_info_panel = 0x7f0b00a8;
        /**  Label for the information panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_show_info_panel_exif = 0x7f0b00ac;
        /**  Label for the information panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_show_info_panel_histogram = 0x7f0b00ab;
        /**  Label for the information panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_show_info_panel_name = 0x7f0b00a9;
        /**  Label for the information panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_show_info_panel_size = 0x7f0b00aa;
        /**   actionbar menu 
  Text for the undo menu item [CHAR LIMIT=20] 
         */
        public: static const int filtershow_undo = 0x7f0b003d;
        /**  Label for the Current version in the versions panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_version_current = 0x7f0b00b0;
        /**  Label for the Original version in the versions panel [CHAR LIMIT=30] 
         */
        public: static const int filtershow_version_original = 0x7f0b00af;
        /**  Text indicating flash info of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int flash = 0x7f0b011d;
        /**  String indicating camera flash is not used. [CHAR LIMIT=14] 
         */
        public: static const int flash_off = 0x7f0b0127;
        /**  String indicating camera flash is fired. [CHAR LIMIT=14] 
         */
        public: static const int flash_on = 0x7f0b0126;
        /**  Text indicating the focal length of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int focal_length = 0x7f0b011f;
        /**  The label for the folder contains pictures taken by the camera. [CHAR LIMIT=20]
         */
        public: static const int folder_camera = 0x7f0b014f;
        /**  The label for the folder contains downloaded pictures. [CHAR LIMIT=20]
         */
        public: static const int folder_download = 0x7f0b0150;
        /**  The label for the folder contains edited online pictures. [CHAR LIMIT=40]
         */
        public: static const int folder_edited_online_photos = 0x7f0b0151;
        /**  The label for the folder contains pictures that was imported from an
         external camera. [CHAR LIMIT=20]
         */
        public: static const int folder_imported = 0x7f0b0152;
        /**  The label for the folder contains screenshot images. [CHAR LIMIT=20]
         */
        public: static const int folder_screenshot = 0x7f0b0153;
        /**  Label indicating the amount on free space on the device. The parameter
         is a string representation of the amount of free space, eg. "20MB".
         [CHAR LIMIT=20]
    
         */
        public: static const int free_space_format = 0x7f0b0138;
        /**  Title for picture frame gadget to show in list of all available gadgets 
         */
        public: static const int gadget_title = 0x7f0b00bc;
        /**   Label for the "neutral density graduated filter" filter effect  [CHAR LIMIT=15] 
         */
        public: static const int grad = 0x7f0b007d;
        /**  Group by menu item. [CHAR LIMIT=20] 
         */
        public: static const int group_by = 0x7f0b014c;
        /**  Title of a menu item to group photo by albums [CHAR LIMIT=30]
         */
        public: static const int group_by_album = 0x7f0b00fd;
        /**  Title of a menu item to group photo by faces [CHAR LIMIT=30]
         */
        public: static const int group_by_faces = 0x7f0b00fc;
        /**  Strings for grouping operations in the menu. The photos can be grouped
         by their location, taken time, or tags. 
 The title of the menu item to let user choose the grouping rule, when
         pressed, a submenu will shown and user can choose one grouping rule
         from the submenu. 
 Title of a menu item to group photo by location [CHAR LIMIT=30] 
         */
        public: static const int group_by_location = 0x7f0b00f9;
        /**  Title of a menu item to group photo by size [CHAR LIMIT=30]
         */
        public: static const int group_by_size = 0x7f0b00fe;
        /**  Title of a menu item to group photo by tags [CHAR LIMIT=30]
         */
        public: static const int group_by_tags = 0x7f0b00fb;
        /**  Title of a menu tiem to group photo by taken date [CHAR LIMIT=30]
         */
        public: static const int group_by_time = 0x7f0b00fa;
        /**  Toast if user attempts to control audio effects without headphones plugged in. 
         */
        public: static const int headset_plug = 0x7f0b0031;
        /**  Text indicating the height of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int height = 0x7f0b0116;
        /**  The title of the menu item which display online help in browser. [CHAR LIMIT=20]
         */
        public: static const int help = 0x7f0b0154;
        /**   Text for the image state panel menu item [CHAR LIMIT=30] 
         */
        public: static const int hide_imagestate_panel = 0x7f0b0040;
        /**   Label for the image highlights recovery (lightens/darkens bright regions) filter button [CHAR LIMIT=15] 
         */
        public: static const int highlight_recovery = 0x7f0b006a;
        /**   History Panel 
  Text for the history panel title [CHAR LIMIT=50] 
         */
        public: static const int history = 0x7f0b004e;
        /**   Text for the original image[CHAR LIMIT=20]
         */
        public: static const int history_original = 0x7f0b0050;
        /**   Label for the image Hue filter (color, shade, tinge, tone) button [CHAR LIMIT=10] 
         */
        public: static const int hue = 0x7f0b0068;
        /**   Label for the that allows drawing on Image [CHAR LIMIT=10] 
         */
        public: static const int imageDraw = 0x7f0b0073;
        /**   Image state panel 
  Text for the image state panel title [CHAR LIMIT=50] 
         */
        public: static const int imageState = 0x7f0b0051;
        /**  Camera format string for new image files. Passed to java.text.SimpleDateFormat. 
         */
        public: static const int image_file_name_format = 0x7f0b01d8;
        /**  A label shown on the action bar. It indicates whether the import
         operation succeeds or fails. [CHAR LIMIT=20] 
         */
        public: static const int import_complete = 0x7f0b013d;
        public: static const int import_fail = 0x7f0b013e;
        /**   Status message shown when there is no content available to be imported 
         */
        public: static const int ingest_empty_device = 0x7f0b0167;
        /**  A label representing the action of importing media item(s) [CHAR LIMIT=20] 
         */
        public: static const int ingest_import = 0x7f0b0161;
        /**  A label that indicates the media import operation completed [CHAR LIMIT=20] 
         */
        public: static const int ingest_import_complete = 0x7f0b0162;
        /**   Status message shown when content from an external camera is being imported 
         */
        public: static const int ingest_importing = 0x7f0b0166;
        /**   Status message shown when there is no MTP device connected  
         */
        public: static const int ingest_no_device = 0x7f0b0168;
        /**   Text of notification message which is shown when user attaches camera 
         */
        public: static const int ingest_scanning = 0x7f0b0163;
        /**   Status message shown when scanning the content from the camera has completed 
         */
        public: static const int ingest_scanning_done = 0x7f0b0165;
        /**   Status message shown when content from the camera is being sorted 
 String.format failed for translation 
 no translation found for ingest_number_of_items_scanned:zero (2623289390474007396) 
 String.format failed for translation 
 no translation found for ingest_number_of_items_scanned:one (4340019444460561648) 
 String.format failed for translation 
 no translation found for ingest_number_of_items_scanned:other (3138021473860555499) 
         */
        public: static const int ingest_sorting = 0x7f0b0164;
        /**  Label for fullscreen button. [CHAR LIMIT=20] 
         */
        public: static const int ingest_switch_photo_fullscreen = 0x7f0b016a;
        /**  Label for album grid button 
         */
        public: static const int ingest_switch_photo_grid = 0x7f0b0169;
        public: static const int input_url = 0x7f0b000c;
        /**  Text indicating the ISO speed rating of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int iso = 0x7f0b0122;
        /**   Label for an image effect that replicates the "pop art" style of segmenting
          images into solid colors, as popularized by Andy Warhol [CHAR LIMIT=15] 
         */
        public: static const int kmeans = 0x7f0b007b;
        /**  Displayed in the title of those albums that are being loaded 
         */
        public: static const int loading = 0x7f0b00c6;
        /**  Message shown on the progress dialog to indicate we're loading the
            account info [CHAR LIMIT=30] 
         */
        public: static const int loading_account = 0x7f0b00c2;
        public: static const int loading_image = 0x7f0b00c1;
        /**  shown in the video player view while the video is being loaded, before it starts playing 
         */
        public: static const int loading_video = 0x7f0b00c0;
        /**  Text indicating the location of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int location = 0x7f0b0113;
        /**  Group by Locations tab on Action Bar. [CHAR LIMIT=12] 
         */
        public: static const int locations = 0x7f0b0149;
        public: static const int loop = 0x7f0b0005;
        /**  A label describing that the current screen is for the user to pick
         some albums to be viewable offline [CHAR LIMIT=30] 
         */
        public: static const int make_available_offline = 0x7f0b010c;
        /**  Text indicating the maker of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int maker = 0x7f0b011b;
        /**  String indicating how camera shooting feature is used. [CHAR LIMIT=8] 
         */
        public: static const int manual = 0x7f0b0124;
        /**  The message is shown in toast when click showOnMap Menu and there is no map app 
         */
        public: static const int map_activity_not_found_err = 0x7f0b002d;
        public: static const int media_controller_connecting = 0x7f0b001f;
        public: static const int media_controller_live = 0x7f0b001d;
        public: static const int media_controller_playing = 0x7f0b001e;
        /**  Menu item to launch the camera app [CHAR LIMIT=25] 
         */
        public: static const int menu_camera = 0x7f0b0248;
        /**  Menu item to search for photos [CHAR LIMIT=25] 
         */
        public: static const int menu_search = 0x7f0b0249;
        /**   Name for the overflow menu item for settings [CHAR LIMIT=20] 
         */
        public: static const int menu_settings = 0x7f0b0048;
        /**  Text indicating the mime type of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int mimetype = 0x7f0b0119;
        /**   Label for the image flip effect [CHAR LIMIT=15] 
         */
        public: static const int mirror = 0x7f0b0077;
        /**  Text indicating the model of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int model = 0x7f0b011c;
        /**  A label describing to link website [CHAR LIMIT=30] 
         */
        public: static const int more_image = 0x7f0b002a;
        /**  Activity label. This might show up in the activity-picker 
         */
        public: static const int movie_view_label = 0x7f0b00bf;
        /**  Button indicating that the cropped image should be reverted back to the original 
 Hint that appears when cropping an image with more than one face 
         */
        public: static const int multiface_crop_help = 0x7f0b00cd;
        /**  The title of the menu item to let user mute the video. [CHAR LIMIT=15] 
         */
        public: static const int mute_action = 0x7f0b00f5;
        /**  Toast if the muted video is not supported. [CHAR LIMIT=80] 
         */
        public: static const int mute_nosupport = 0x7f0b002c;
        /**  The tilte of a dialog showing muting in progress. [CHAR LIMIT=20] 
         */
        public: static const int muting = 0x7f0b015b;
        /**  Name for the photo effect that inverts photo to negative images. [CHAR LIMIT=10] 
         */
        public: static const int negative = 0x7f0b0078;
        public: static const int next = 0x7f0b000e;
        /**  Toast message shown when there is no albums available [CHAR LIMIT=50]
         */
        public: static const int no_albums_alert = 0x7f0b0109;
        /**  This toast message is shown when network connection is lost while doing clustering 
         */
        public: static const int no_connectivity = 0x7f0b0101;
        /**  The message of a dialog showing there is no external storage. [CHAR LIMIT=none] 
         */
        public: static const int no_external_storage = 0x7f0b0156;
        /**  The tilte of a dialog showing there is no external storage. [CHAR LIMIT=20] 
         */
        public: static const int no_external_storage_title = 0x7f0b0155;
        /**  When grouping photos by locations, the label used for photos that don't
         have location information in them [CHAR LIMIT=20]
         */
        public: static const int no_location = 0x7f0b0100;
        /**  alert to the user that an SD card must be installed before using the camera 
         */
        public: static const int no_storage = 0x7f0b0170;
        /**  Toast message prompted when the specified item is not found [CHAR LIMIT=40]
         */
        public: static const int no_such_item = 0x7f0b00ee;
        /**  Displayed in place of the picture when we fail to get the thumbnail of it.
         [CHAR LIMIT=50]
         */
        public: static const int no_thumbnail = 0x7f0b00c9;
        /**   Label for having no filters applied to the image [CHAR LIMIT=10] 
         */
        public: static const int none = 0x7f0b0079;
        /**  Toast after trying to select a setting that is not allowed to change in scene mode [CHAR LIMIT=NONE] 
         */
        public: static const int not_selectable_in_scene_mode = 0x7f0b01ce;
        /**  Title of a menu item to indicate performing the image crop operation
         [CHAR LIMIT=20] 
         */
        public: static const int ok = 0x7f0b00cc;
        /**  Text indicating the orientation of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int orientation = 0x7f0b0117;
        /**   Text to label an image as "original" [CHAR LIMIT=20] 
         */
        public: static const int original = 0x7f0b003a;
        /**   String displayed when showing the original image [CHAR LIMIT=NONE] 
         */
        public: static const int original_picture_text = 0x7f0b0037;
        /**  The text shown on the top-left corner of the screen to indicate the capturing is on going [CHAR LIMIT=27] 
         */
        public: static const int pano_capture_indication = 0x7f0b01e0;
        /**  The text shown in the dialog when panorama saving failed [CHAR LIMIT=40] 
         */
        public: static const int pano_dialog_panorama_failed = 0x7f0b01de;
        /**  The text shown in the progress dialog when panorama preview is generating in the background [CHAR LIMIT=30] 
         */
        public: static const int pano_dialog_prepare_preview = 0x7f0b01dd;
        /**  The text shown on the dialog title in the dialogs for Panorama [CHAR LIMIT=12] 
         */
        public: static const int pano_dialog_title = 0x7f0b01df;
        /**  The text shown in the progress dialog when waiting for previous panorama finishing [CHAR LIMIT=40] 
         */
        public: static const int pano_dialog_waiting_previous = 0x7f0b01e1;
        /**  Filename prefix for panorama output. 
         */
        public: static const int pano_file_name_format = 0x7f0b01da;
        /**  Text to show with progress bar while stitching in Gallery 
         */
        public: static const int pano_progress_text = 0x7f0b015f;
        /**  The text shown on the screen to indicate that the panorama is rendering [CHAR LIMIT=27] 
         */
        public: static const int pano_review_rendering = 0x7f0b01e3;
        /**  The text shown on the bottom-left corner of the screen to indicate that the saving is in process [CHAR LIMIT=13] 
         */
        public: static const int pano_review_saving_indication_str = 0x7f0b01e2;
        /**  The text shown when the panorama panning speed is to fast [CHAR LIMIT=12] 
         */
        public: static const int pano_too_fast_prompt = 0x7f0b01dc;
        /**  Text indicating the path of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int path = 0x7f0b0114;
        /**  Group by People tab on Action Bar. [CHAR LIMIT=12] 
         */
        public: static const int people = 0x7f0b014a;
        /**  Album label used to indicate the collection of PWA Buzz/Post photos 
         */
        public: static const int picasa_posts = 0x7f0b010b;
        /**  The content of a dialog showing trimming in progress. [CHAR LIMIT=30] 
         */
        public: static const int please_wait = 0x7f0b015c;
        /**  Settings screen, Camcorder setting category title 
         */
        public: static const int pref_camcorder_settings_category = 0x7f0b018f;
        /**  Settings menu countdown timer labels [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label = 0x7f0b01c8;
        /**  Settings menu countdown timer 15 seconds [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label_fifteen = 0x7f0b01cd;
        /**  Settings menu countdown timer off [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label_off = 0x7f0b01c9;
        /**  Settings menu countdown timer 1 second [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label_one = 0x7f0b01ca;
        /**  Settings menu countdown timer 10 seconds [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label_ten = 0x7f0b01cc;
        /**  Settings menu countdown timer 3 seconds [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_countdown_label_three = 0x7f0b01cb;
        /**  Default flash mode setting.
         */
        public: static const int pref_camera_flashmode_default = 0x7f0b01a3;
        /**  Settings screen, Flash mode dialog radio button choices 
         */
        public: static const int pref_camera_flashmode_entry_auto = 0x7f0b01a7;
        public: static const int pref_camera_flashmode_entry_off = 0x7f0b01a9;
        public: static const int pref_camera_flashmode_entry_on = 0x7f0b01a8;
        /**  flash label [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_flashmode_label = 0x7f0b01a6;
        /**  Menu, flash mode labels [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_flashmode_label_auto = 0x7f0b01aa;
        public: static const int pref_camera_flashmode_label_off = 0x7f0b01ac;
        public: static const int pref_camera_flashmode_label_on = 0x7f0b01ab;
        /**  Value for flash off setting
         */
        public: static const int pref_camera_flashmode_no_flash = 0x7f0b01a4;
        /**  Settings screen, Flash mode title 
         */
        public: static const int pref_camera_flashmode_title = 0x7f0b01a5;
        /**  Settings screen, Focus mode dialog radio button choices 
         */
        public: static const int pref_camera_focusmode_entry_auto = 0x7f0b019d;
        public: static const int pref_camera_focusmode_entry_infinity = 0x7f0b019e;
        public: static const int pref_camera_focusmode_entry_macro = 0x7f0b019f;
        /**  Menu, focus mode labels [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_focusmode_label_auto = 0x7f0b01a0;
        public: static const int pref_camera_focusmode_label_infinity = 0x7f0b01a1;
        public: static const int pref_camera_focusmode_label_macro = 0x7f0b01a2;
        /**  Settings screen, Focus mode title 
         */
        public: static const int pref_camera_focusmode_title = 0x7f0b019c;
        /**  Default HDR entry value 
         */
        public: static const int pref_camera_hdr_default = 0x7f0b01d2;
        /**  HDR label ON [CHAR LIMIT=60] 
         */
        public: static const int pref_camera_hdr_label = 0x7f0b01d3;
        public: static const int pref_camera_id_default = 0x7f0b0177;
        /**  In select camera setting, back facing camera. [CHAR LIMIT=14] 
         */
        public: static const int pref_camera_id_entry_back = 0x7f0b0178;
        /**  In select camera setting, front-facing camera. [CHAR LIMIT=14] 
         */
        public: static const int pref_camera_id_entry_front = 0x7f0b0179;
        /**  switch camera label back [CHAR LIMIT=60] 
         */
        public: static const int pref_camera_id_label_back = 0x7f0b01d4;
        /**  switch camera label front [CHAR LIMIT=60] 
         */
        public: static const int pref_camera_id_label_front = 0x7f0b01d5;
        /**  Settings screen, camera selection dialog title. Users can select a camera from the phone (front-facing or back-facing). [CHAR LIMIT=20] 
         */
        public: static const int pref_camera_id_title = 0x7f0b0176;
        /**   Label for record location preference [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_location_label = 0x7f0b017c;
        /**  Settings screen, dialog choice for 13 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_13mp = 0x7f0b0191;
        /**  Settings screen, dialog choice for 1.3 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_1_3mp = 0x7f0b0198;
        /**  Settings screen, dialog choice for 1 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_1mp = 0x7f0b0199;
        /**  Settings screen, dialog choice for 2 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_2mp = 0x7f0b0196;
        /**  Settings screen, dialog choice for 2 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_2mp_wide = 0x7f0b0197;
        /**  Settings screen, dialog choice for 3 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_3mp = 0x7f0b0195;
        /**  Settings screen, dialog choice for 4 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_4mp = 0x7f0b0194;
        /**  Settings screen, dialog choice for 5 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_5mp = 0x7f0b0193;
        /**  Settings screen, dialog choice for 8 megapixels picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_8mp = 0x7f0b0192;
        /**  Settings screen, dialog choice for QVGA picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_qvga = 0x7f0b019b;
        /**  Settings screen, dialog choice for VGA picture size [CHAR LIMIT=15] 
         */
        public: static const int pref_camera_picturesize_entry_vga = 0x7f0b019a;
        /**  Settings screen, Picture size title 
         */
        public: static const int pref_camera_picturesize_title = 0x7f0b0190;
        public: static const int pref_camera_recordlocation_default = 0x7f0b017b;
        /**  Settings screen, setting title text 
         */
        public: static const int pref_camera_recordlocation_title = 0x7f0b017a;
        /**  Default scene mode setting. 
         */
        public: static const int pref_camera_scenemode_default = 0x7f0b01bb;
        /**  Scene mode that takes an image quickly with little motion blur. [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_action = 0x7f0b01bf;
        /**  Settings menu, scene mode choices [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_auto = 0x7f0b01bd;
        /**  Scene mode that uses HDR (high dynamic range) [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_hdr = 0x7f0b01be;
        /**  Scene mode that takes long exposures to capture night scenes without flash. [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_night = 0x7f0b01c0;
        /**  Scene mode optimized for taking indoor low-lights pictures. [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_party = 0x7f0b01c2;
        /**  Scene mode optimized for taking images in the sunset. [CHAR LIMIT=16] 
         */
        public: static const int pref_camera_scenemode_entry_sunset = 0x7f0b01c1;
        /**  Scene mode that takes an image quickly with little motion blur. [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_scenemode_label_action = 0x7f0b01c4;
        /**  Settings menu, scene mode labels [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_scenemode_label_auto = 0x7f0b01c3;
        /**  Scene mode that takes long exposures to capture night scenes without flash. [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_scenemode_label_night = 0x7f0b01c5;
        /**  Scene mode optimized for taking indoor low-lights pictures. [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_scenemode_label_party = 0x7f0b01c7;
        /**  Scene mode optimized for taking images in the sunset. [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_scenemode_label_sunset = 0x7f0b01c6;
        /**  Settings screen, Select Scene mode 
         */
        public: static const int pref_camera_scenemode_title = 0x7f0b01bc;
        /**  Settings screen, Camera setting category title 
         */
        public: static const int pref_camera_settings_category = 0x7f0b018e;
        public: static const int pref_camera_timer_default = 0x7f0b017e;
        public: static const int pref_camera_timer_sound_default = 0x7f0b017f;
        /**  Text followed by a checkbox to turn on/off sound effects during the countdown. [CHAR LIMIT = 16]
         */
        public: static const int pref_camera_timer_sound_title = 0x7f0b0180;
        /**  Title for countdown timer on camera settings screen [CHAR LIMIT=30]
         */
        public: static const int pref_camera_timer_title = 0x7f0b017d;
        /**  Default videocamera flash mode setting.
         */
        public: static const int pref_camera_video_flashmode_default = 0x7f0b01ad;
        /**  Default white balance setting. 
         */
        public: static const int pref_camera_whitebalance_default = 0x7f0b01ae;
        /**  Settings screen, White balance dialog radio button choices 
         */
        public: static const int pref_camera_whitebalance_entry_auto = 0x7f0b01b1;
        public: static const int pref_camera_whitebalance_entry_cloudy = 0x7f0b01b5;
        public: static const int pref_camera_whitebalance_entry_daylight = 0x7f0b01b3;
        public: static const int pref_camera_whitebalance_entry_fluorescent = 0x7f0b01b4;
        public: static const int pref_camera_whitebalance_entry_incandescent = 0x7f0b01b2;
        /**  Menu, white balance label 
         */
        public: static const int pref_camera_whitebalance_label = 0x7f0b01b0;
        /**  Menu, White balance labels [CHAR LIMIT=50] 
         */
        public: static const int pref_camera_whitebalance_label_auto = 0x7f0b01b6;
        public: static const int pref_camera_whitebalance_label_cloudy = 0x7f0b01ba;
        public: static const int pref_camera_whitebalance_label_daylight = 0x7f0b01b8;
        public: static const int pref_camera_whitebalance_label_fluorescent = 0x7f0b01b9;
        public: static const int pref_camera_whitebalance_label_incandescent = 0x7f0b01b7;
        /**  Settings screen, white balance title 
         */
        public: static const int pref_camera_whitebalance_title = 0x7f0b01af;
        public: static const int pref_exposure_default = 0x7f0b01d0;
        /**   menu label exposure compensation [CHAR LIMIT=50] 
         */
        public: static const int pref_exposure_label = 0x7f0b01d1;
        /**  Exposure settings in preference 
         */
        public: static const int pref_exposure_title = 0x7f0b01cf;
        /**  Default effect setting that clears the effect. 
         */
        public: static const int pref_video_effect_default = 0x7f0b01e5;
        /**  Title of video effect setting popup window 
         */
        public: static const int pref_video_effect_title = 0x7f0b01e6;
        /**  The default quality value is 5 (720p) 
         */
        public: static const int pref_video_quality_default = 0x7f0b0186;
        /**  Video quality setting entry. Videos will be recorded in 1080p quality. [CHAR LIMIT=24] 
         */
        public: static const int pref_video_quality_entry_1080p = 0x7f0b0187;
        /**  Video quality setting entry. Videos will be recorded in 480p quality. [CHAR LIMIT=24] 
         */
        public: static const int pref_video_quality_entry_480p = 0x7f0b0189;
        /**  Video quality setting entry. Videos will be recorded in 720p quality. [CHAR LIMIT=24] 
         */
        public: static const int pref_video_quality_entry_720p = 0x7f0b0188;
        /**  Video quality setting entry. Videos will be recorded in the highest quality available on the device. [CHAR LIMIT=24] 
         */
        public: static const int pref_video_quality_entry_high = 0x7f0b018a;
        /**  Video quality setting entry. Videos will be recorded in the lowest quality available on the device. [CHAR LIMIT=24] 
         */
        public: static const int pref_video_quality_entry_low = 0x7f0b018b;
        /**  The Video quality settings in preference [CHAR LIMIT=21] 
         */
        public: static const int pref_video_quality_title = 0x7f0b0185;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_1000 = 0x7f0b0215;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_10000 = 0x7f0b021d;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_10800000 = 0x7f0b0233;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_12000 = 0x7f0b021e;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_120000 = 0x7f0b0224;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_1440000 = 0x7f0b022d;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_14400000 = 0x7f0b0234;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_1500 = 0x7f0b0216;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_15000 = 0x7f0b021f;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_150000 = 0x7f0b0225;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_180000 = 0x7f0b0226;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_1800000 = 0x7f0b022e;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_18000000 = 0x7f0b0235;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_2000 = 0x7f0b0217;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_21600000 = 0x7f0b0236;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_24000 = 0x7f0b0220;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_240000 = 0x7f0b0227;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_2500 = 0x7f0b0218;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_3000 = 0x7f0b0219;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_30000 = 0x7f0b0221;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_300000 = 0x7f0b0228;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_360000 = 0x7f0b0229;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_3600000 = 0x7f0b022f;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_36000000 = 0x7f0b0237;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_4000 = 0x7f0b021a;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_43200000 = 0x7f0b0238;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_500 = 0x7f0b0214;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_5000 = 0x7f0b021b;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_5400000 = 0x7f0b0230;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_54000000 = 0x7f0b0239;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_6000 = 0x7f0b021c;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_60000 = 0x7f0b0222;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_600000 = 0x7f0b022a;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_720000 = 0x7f0b022b;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_7200000 = 0x7f0b0231;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_86400000 = 0x7f0b023a;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_90000 = 0x7f0b0223;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_900000 = 0x7f0b022c;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_9000000 = 0x7f0b0232;
        public: static const int pref_video_time_lapse_frame_interval_default = 0x7f0b018d;
        /**  Text to indicate time lapse recording frame interval [CHAR LIMIT = 30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_off = 0x7f0b0213;
        /**  Describes the preference dialog for choosing interval between frame capture for
    time lapse recording. Appears at top of the dialog. [CHAR LIMIT=30] 
         */
        public: static const int pref_video_time_lapse_frame_interval_title = 0x7f0b018c;
        /**  alert to the user that the SD card is being disk-checked 
         */
        public: static const int preparing_sd = 0x7f0b0171;
        public: static const int previous = 0x7f0b000f;
        /**  Text for the print menu item [CHAR LIMIT=20] 
         */
        public: static const int print_image = 0x7f0b0042;
        /**  String used as a title of a progress dialog. The user can
         choose to cache some Picasa picture albums on device, so it can
         be viewed offline. This string is shown when the request is being
         processed. [CHAR LIMIT=50] 
         */
        public: static const int process_caching_requests = 0x7f0b00f1;
        /**   Text for quality value tag [CHAR LIMIT=30] 
         */
        public: static const int quality = 0x7f0b0045;
        /**  Text indicating the time a media item was recorded in details window [CHAR LIMIT=14] 
         */
        public: static const int record_time = 0x7f0b0000;
        /**   Label for the image effect that removes redeye. [CHAR LIMIT=10] 
         */
        public: static const int redeye = 0x7f0b0072;
        /**  Negative answer for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT = 20] 
         */
        public: static const int remember_location_no = 0x7f0b0246;
        /**  Message for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT = None] 
         */
        public: static const int remember_location_prompt = 0x7f0b0245;
        /**  Title for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT = 50] 
         */
        public: static const int remember_location_title = 0x7f0b0244;
        /**  Positive answer for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT = 20] 
         */
        public: static const int remember_location_yes = 0x7f0b0247;
        /**   Text for the history panel reset button [CHAR LIMIT=20]
         */
        public: static const int reset = 0x7f0b004f;
        /**   Label for the reset effect button [CHAR LIMIT=15] 
         */
        public: static const int reset_effect = 0x7f0b0054;
        /**  Movie View Start Playing dialog title 
         */
        public: static const int resume_playing_message = 0x7f0b00c4;
        /**  Movie View Start Playing button "Beginning" 
         */
        public: static const int resume_playing_restart = 0x7f0b00ca;
        /**  Movie View Start Playing button "Resume from bookmark" 
         */
        public: static const int resume_playing_resume = 0x7f0b00c5;
        /**  Movie View Resume Playing dialog title 
         */
        public: static const int resume_playing_title = 0x7f0b00c3;
        /**  button in review mode indicating that the photo taking, video recording, and panorama saving session should be canceled [CHAR LIMIT=10] 
         */
        public: static const int review_cancel = 0x7f0b0173;
        /**  button in review mode indicating that the taken photo/video is OK to be attached/uploaded [CHAR LIMIT=10] 
         */
        public: static const int review_ok = 0x7f0b0174;
        /**   Label for the image rotate effect [CHAR LIMIT=15] 
         */
        public: static const int rotate = 0x7f0b0076;
        public: static const int rotate_left = 0x7f0b00ec;
        public: static const int rotate_right = 0x7f0b00ed;
        public: static const int rtp_max_port = 0x7f0b0014;
        public: static const int rtp_min_port = 0x7f0b0013;
        public: static const int rtp_rtcp = 0x7f0b0010;
        /**   Label for the image saturation (brightens colors) filter button [CHAR LIMIT=10] 
         */
        public: static const int saturation = 0x7f0b0065;
        /**  The label on the button that will save an edited image 
         */
        public: static const int save = 0x7f0b0160;
        /**   String displayed when saving and exiting editor [CHAR LIMIT=NONE] 
         */
        public: static const int save_and_exit = 0x7f0b004b;
        /**   String displayed when saving and exiting editor [CHAR LIMIT=NONE] 
         */
        public: static const int save_and_processing = 0x7f0b004c;
        /**   String displayed when exiting with unsaved changes [CHAR LIMIT=NONE] 
         */
        public: static const int save_before_exit = 0x7f0b004a;
        /**  Eorror toast message that the image cannot be saved [CHAR LIMIT=40]
         */
        public: static const int save_error = 0x7f0b00d0;
        /**  Toast after the trimming / muting is done. [CHAR LIMIT=50] 
         */
        public: static const int save_into = 0x7f0b015d;
        public: static const int saved = 0x7f0b00ba;
        /**  Toast/alert that the image is being saved to the SD card 
         */
        public: static const int saving_image = 0x7f0b00ce;
        /**  Title prompted for user to choose an album [CHAR LIMIT=20] 
         */
        public: static const int select_album = 0x7f0b00d6;
        /**  String indicating more actions are available 
         */
        public: static const int select_all = 0x7f0b00e4;
        /**  Title prompted for user to choose a group [CHAR LIMIT=20] 
         */
        public: static const int select_group = 0x7f0b00d7;
        /**  Toast/alert that the face detection is being run 
 Title prompted for user to choose a photo item [CHAR LIMIT=20] 
         */
        public: static const int select_image = 0x7f0b00d3;
        /**  Title prompted for user to choose a media object [CHAR LIMIT=20] 
         */
        public: static const int select_item = 0x7f0b00d5;
        /**   Text for selecting export image quality [CHAR LIMIT=100] 
         */
        public: static const int select_output_settings = 0x7f0b0044;
        /**  Title prompted for user to choose a video item [CHAR LIMIT=20] 
         */
        public: static const int select_video = 0x7f0b00d4;
        /**  String indicating the sequence of currently selected item in the
            media set eg. 3 of 5 items [CHAR LIMIT=30] 
         */
        public: static const int sequence_in_set = 0x7f0b010f;
        public: static const int server_timeout_message = 0x7f0b001b;
        public: static const int server_timeout_title = 0x7f0b001a;
        public: static const int set_apn = 0x7f0b0018;
        /**  The title of the menu item to let user set the image as background etc. [CHAR LIMIT=15] 
         */
        public: static const int set_as = 0x7f0b00f6;
        public: static const int set_buffer_size = 0x7f0b0017;
        /**  Title in timer setting for setting the duration for the countdown timer. [CHAR LIMIT = 50]
         */
        public: static const int set_duration = 0x7f0b0242;
        /**  Displayed in the title of the dialog for things to do with a picture
             that is to be "set as" (e.g. set as contact photo or set as wallpaper) 
         */
        public: static const int set_image = 0x7f0b00d8;
        /**  A label shown on the action bar. It indicates that the user is
         viewing all available albums [CHAR LIMIT=20] 
         */
        public: static const int set_label_all_albums = 0x7f0b0134;
        /**  A label shown on the action bar. It indicates that the user is
         viewing albums stored locally on the device [CHAR LIMIT=20] 
         */
        public: static const int set_label_local_albums = 0x7f0b0135;
        /**  A label shown on the action bar. It indicates that the user is
         viewing MTP devices connected (like other digital cameras).
         [CHAR LIMIT=20] 
         */
        public: static const int set_label_mtp_devices = 0x7f0b0136;
        /**  A label shown on the action bar. It indicates that the user is
         viewing Picasa albums [CHAR LIMIT=20] 
         */
        public: static const int set_label_picasa_albums = 0x7f0b0137;
        public: static const int set_rtp_max_port = 0x7f0b0016;
        public: static const int set_rtp_min_port = 0x7f0b0015;
        /**  Title in time interval picker for setting time interval. [CHAR LIMIT = 30]
         */
        public: static const int set_time_interval = 0x7f0b023f;
        /**  Help text that is shown when the time lapse feature is turned off. [CHAR LIMIT = 180]
         */
        public: static const int set_time_interval_help = 0x7f0b0240;
        /**  Help text that is shown when the countdown timer is turned off. [CHAR LIMIT = 180]
         */
        public: static const int set_timer_help = 0x7f0b0241;
        /**  Activity title for cropping picture and setting it as wallpaper [CHAR LIMIT=20] 
         */
        public: static const int set_wallpaper = 0x7f0b00d9;
        /**  Strings for step option settins 
         */
        public: static const int setp_option_name = 0x7f0b0001;
        public: static const int setp_option_six_second = 0x7f0b0004;
        public: static const int setp_option_three_second = 0x7f0b0003;
        public: static const int setting = 0x7f0b0019;
        /**  Entry of a on/off setting. The setting is turned off. [CHAR LIMIT=15] 
         */
        public: static const int setting_off = 0x7f0b0181;
        /**  The value of a camera preference indicating the setting is off. 
         */
        public: static const int setting_off_value = 0x7f0b0183;
        /**  Entry of a on/off setting. The setting is turned on. [CHAR LIMIT=15] 
         */
        public: static const int setting_on = 0x7f0b0182;
        /**  The value of a camera preference indicating the setting is on. 
         */
        public: static const int setting_on_value = 0x7f0b0184;
        /**   String displayed when setting the homepage wallpaper in the background [CHAR LIMIT=NONE] 
         */
        public: static const int setting_wallpaper = 0x7f0b0038;
        /**  The title of the menu item which enable the settings [CHAR LIMIT=20] 
         */
        public: static const int settings = 0x7f0b014d;
        /**   Label for the image shadow recovery (lightens/darkens shadows) filter button [CHAR LIMIT=10] 
         */
        public: static const int shadow_recovery = 0x7f0b0069;
        public: static const int share = 0x7f0b00df;
        public: static const int share_as_photo = 0x7f0b00e1;
        public: static const int share_panorama = 0x7f0b00e0;
        /**   Label for the image sharpness (clarity, distinctness) filter button [CHAR LIMIT=10] 
         */
        public: static const int sharpness = 0x7f0b0062;
        /**  Title of a menu item to show all (both images and videos) [CHAR LIMIT=30]
         */
        public: static const int show_all = 0x7f0b0105;
        /**  The title of the menu item to let user choose the which portion of
         the media items the user wants to see. When pressed, a submenu will
         appear and user can choose one of "show images only",
         "show videos only", or "show all" from the submenu. 
 Title of a menu item to show images only [CHAR LIMIT=30]
         */
        public: static const int show_images_only = 0x7f0b0103;
        /**   Text for the image menu item showing the filters that have been applied [CHAR LIMIT=30] 
         */
        public: static const int show_imagestate_panel = 0x7f0b003f;
        /**  String indicating timestamp of photo or video 
 String.format failed for translation 
 no translation found for number_of_items_selected:zero (2142579311530586258) 
 String.format failed for translation 
 no translation found for number_of_items_selected:one (2478365152745637768) 
 String.format failed for translation 
 no translation found for number_of_items_selected:other (754722656147810487) 
 String.format failed for translation 
 no translation found for number_of_albums_selected:zero (749292746814788132) 
 String.format failed for translation 
 no translation found for number_of_albums_selected:one (6184377003099987825) 
 String.format failed for translation 
 no translation found for number_of_albums_selected:other (53105607141906130) 
 String.format failed for translation 
 no translation found for number_of_groups_selected:zero (3466388370310869238) 
 String.format failed for translation 
 no translation found for number_of_groups_selected:one (5030162638216034260) 
 String.format failed for translation 
 no translation found for number_of_groups_selected:other (3512041363942842738) 
 String.format failed for translation 
 no translation found for number_of_items_selected:zero (2142579311530586258) 
 String.format failed for translation 
 no translation found for number_of_items_selected:one (2478365152745637768) 
 String.format failed for translation 
 no translation found for number_of_albums_selected:one (6184377003099987825) 
 String.format failed for translation 
 no translation found for number_of_groups_selected:zero (3466388370310869238) 
 String.format failed for translation 
 no translation found for number_of_groups_selected:other (3512041363942842738) 
         */
        public: static const int show_on_map = 0x7f0b00eb;
        /**  Title of a menu item to show videos only [CHAR LIMIT=30]
         */
        public: static const int show_videos_only = 0x7f0b0104;
        /**  String used as a menu label. The user can choose to edit the image
         [CHAR_LIMIT=20]
         */
        public: static const int simple_edit = 0x7f0b00f0;
        public: static const int single = 0x7f0b0006;
        public: static const int single_track = 0x7f0b000b;
        /**   Text for size value tag [CHAR LIMIT=30] 
         */
        public: static const int size = 0x7f0b0046;
        /**  Label of a group of pictures. The size of each picture in this group is
         more than a certain amount. The parameter is a string representation
         of that amount, eg. "10MB".
         [CHAR LIMIT=20]
    
         */
        public: static const int size_above = 0x7f0b013a;
        /**  Label of a group of pictures. The size of each picture in this group is
         less than a certain amount. The parameter is a string representation
         of that amount, eg. "10MB".
         [CHAR LIMIT=20]
    
         */
        public: static const int size_below = 0x7f0b0139;
        /**  Label of a group of pictures. The size of each picture in this group is
         between two amounts. The parameters are string representations of the two
         amounts, eg. "10MB", "100MB".
         [CHAR LIMIT=20]
    
         */
        public: static const int size_between = 0x7f0b013b;
        public: static const int slideshow = 0x7f0b00e6;
        /**  Title of the Android Dreams slideshow screensaver. [CHAR LIMIT=20] 
         */
        public: static const int slideshow_dream_name = 0x7f0b0146;
        /**  Low-memory dialog message [CHAR LIMIT=NONE] 
         */
        public: static const int spaceIsLow_content = 0x7f0b01d7;
        public: static const int speaker_need_headset = 0x7f0b000a;
        public: static const int speaker_off = 0x7f0b0009;
        public: static const int speaker_on = 0x7f0b0008;
        /**   Name used to indicate the original image in the state panel [CHAR LIMIT=20] 
         */
        public: static const int state_panel_original = 0x7f0b00a0;
        /**   Name used to indicate the final image in the state panel [CHAR LIMIT=20] 
         */
        public: static const int state_panel_result = 0x7f0b00a1;
        public: static const int step_option_desc = 0x7f0b0002;
        public: static const int stereo = 0x7f0b0007;
        /**   Label for the image straighten effect [CHAR LIMIT=15] 
         */
        public: static const int straighten = 0x7f0b0074;
        public: static const int streaming_settings = 0x7f0b000d;
        /**  Label for album filmstrip button 
         */
        public: static const int switch_photo_filmstrip = 0x7f0b0157;
        /**  Label for fullscreen button. [CHAR LIMIT=20] 
         */
        public: static const int switch_photo_fullscreen = 0x7f0b0159;
        /**  Label for album grid button 
         */
        public: static const int switch_photo_grid = 0x7f0b0158;
        /**  Title of a menu item to switch from Gallery to Camera app [CHAR LIMIT=30] 
         */
        public: static const int switch_to_camera = 0x7f0b00ea;
        /**  This toast message is shown when failed to load the album data. [CHAR LIMIT=NONE] 
         */
        public: static const int sync_album_error = 0x7f0b0102;
        /**  A label of a menu item for user to sync the content [CHAR LIMIT=30] 
         */
        public: static const int sync_picasa_albums = 0x7f0b010d;
        /**  Title for the albums tab [CHAR LIMIT=25] 
         */
        public: static const int tab_albums = 0x7f0b024b;
        /**  Title for the all photos tab [CHAR LIMIT=25] 
         */
        public: static const int tab_photos = 0x7f0b024a;
        /**  Group by Tags tab on Action Bar. [CHAR LIMIT=12] 
         */
        public: static const int tags = 0x7f0b014b;
        /**  Toast telling users tapping on the viewfinder will trigger autofocus [CHAR LIMIT=28] 
         */
        public: static const int tap_to_focus = 0x7f0b01e4;
        /**  Text indicating the creation time of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int time = 0x7f0b0112;
        /**  Hours: a unit of time for time lapse intervals. [CHAR LIMIT = 20] 
         */
        public: static const int time_lapse_hours = 0x7f0b023d;
        /**  The button to confirm time-lapse setting changes. [CHAR LIMIT = 20] 
         */
        public: static const int time_lapse_interval_set = 0x7f0b023e;
        /**  Minutes: a unit of time for time lapse intervals. [CHAR LIMIT = 20] 
         */
        public: static const int time_lapse_minutes = 0x7f0b023c;
        /**  Seconds: a unit of time for time lapse intervals. [CHAR LIMIT = 20] 
         */
        public: static const int time_lapse_seconds = 0x7f0b023b;
        /**  A label that overlays on top of the preview frame to indicate the camcorder is in time lapse mode [CHAR LIMIT=35] 
         */
        public: static const int time_lapse_title = 0x7f0b0175;
        /**  Group by Times tab on Action Bar. [CHAR LIMIT=12] 
         */
        public: static const int times = 0x7f0b0148;
        /**   Label for the tuny planet effect [CHAR LIMIT=10] 
         */
        public: static const int tinyplanet = 0x7f0b0060;
        /**  Text indicating the title of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int title = 0x7f0b0110;
        /**   Title for the image editor activity [CHAR LIMIT=NONE]
         */
        public: static const int title_activity_filter_show = 0x7f0b0034;
        /**  The title of the menu item to let user trim the video. [CHAR LIMIT=15] 
         */
        public: static const int trim_action = 0x7f0b00f4;
        /**  menu pick: trim the currently selected video [CHAR LIMIT=30]
         */
        public: static const int trim_label = 0x7f0b00d2;
        /**  Toast if the trimmed video is too short to trim. [CHAR LIMIT=80] 
         */
        public: static const int trim_too_short = 0x7f0b015e;
        /**  The tilte of a dialog showing trimming in progress. [CHAR LIMIT=20] 
         */
        public: static const int trimming = 0x7f0b015a;
        /**  Toast message shown after we try to make a local album available offline
         [CHAR LIMIT=150] 
         */
        public: static const int try_to_set_local_album_available_offline = 0x7f0b0133;
        /**  The label on the button which when clicked will undo a deletion of image [CHAR LIMIT=16]
         */
        public: static const int undo = 0x7f0b00e3;
        /**  String indicating the time units in seconds. [CHAR LIMIT=8] 
 String indicating the length units in milli-meters. [CHAR LIMIT=8] 
         */
        public: static const int unit_mm = 0x7f0b0123;
        /**  String indicating image width or height is unknown. [CHAR LIMIT=14] 
         */
        public: static const int unknown = 0x7f0b0128;
        /**   Exit Dialog 
  String displayed when exiting with unsaved changes [CHAR LIMIT=NONE] 
         */
        public: static const int unsaved = 0x7f0b0049;
        /**  When grouping photos by tags, the label used for photos without tags
         [CHAR LIMIT=20]
         */
        public: static const int untagged = 0x7f0b00ff;
        /**   Label for the image vibrance (strengthens colors) filter button [CHAR LIMIT=10] 
         */
        public: static const int vibrance = 0x7f0b0064;
        /**  String indicating an error when playing the video. [CHAR LIMIT=30] 
         */
        public: static const int video_err = 0x7f0b00f8;
        /**  Video Camera format string for new video files. Passed to java.text.SimpleDateFormat. 
         */
        public: static const int video_file_name_format = 0x7f0b01d9;
        /**  String indicating an error when muting the video. [CHAR LIMIT=30] 
         */
        public: static const int video_mute_err = 0x7f0b00f7;
        /**  The message shown when video record reaches size limit. 
         */
        public: static const int video_reach_size_limit = 0x7f0b01db;
        /**  Announcement telling users video recording has just started [CHAR LIMIT=NONE] 
         */
        public: static const int video_recording_started = 0x7f0b01f3;
        /**  Announcement telling users video recording has just stopped [CHAR LIMIT=NONE] 
         */
        public: static const int video_recording_stopped = 0x7f0b01f4;
        /**  Toast telling users tapping on the viewfinder will take a picture [CHAR LIMIT=54] 
         */
        public: static const int video_snapshot_hint = 0x7f0b01f2;
        public: static const int videoview_error_text_cannot_connect_retry = 0x7f0b001c;
        /**   Label for the image vignette filter (darkens photo around edges) button [CHAR LIMIT=10] 
         */
        public: static const int vignette = 0x7f0b006c;
        /**   Label for the image vignette contrast fparameter ui [CHAR LIMIT=15] 
         */
        public: static const int vignette_contrast = 0x7f0b0070;
        /**   Label for the image vignette exposure parameter ui [CHAR LIMIT=15] 
         */
        public: static const int vignette_exposure = 0x7f0b006e;
        /**   Label for the rate of change in brightness as it goes to the edge [CHAR LIMIT=15] 
         */
        public: static const int vignette_falloff = 0x7f0b0071;
        /**   Label for the image vignette main parameter ui [CHAR LIMIT=15] 
         */
        public: static const int vignette_main = 0x7f0b006d;
        /**   Label for the image vignette saturation parameter ui [CHAR LIMIT=15] 
         */
        public: static const int vignette_saturation = 0x7f0b006f;
        /**  The label for the 3d effect knob of the audio effects dialog. 
         */
        public: static const int virtualizer_strength = 0x7f0b002f;
        /**  alert to the user to wait for some operation to complete 
         */
        public: static const int wait = 0x7f0b016f;
        /**  Toast/alert after saving wallpaper 
         */
        public: static const int wallpaper = 0x7f0b00da;
        /**   Label for the image Autocolor filter (makes off-white colors whiter) button [CHAR LIMIT=10] 
         */
        public: static const int wbalance = 0x7f0b0067;
        public: static const int website_for_more_image = 0x7f0b002b;
        /**  Text indicating the white balance of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int white_balance = 0x7f0b0120;
        /**  The title of the dialog for choosing the type of widget. [CHAR LIMIT=20] 
         */
        public: static const int widget_type = 0x7f0b0145;
        /**  The label on the radio button for the widget type that shows the images randomly. [CHAR LIMIT=30]
         */
        public: static const int widget_type_album = 0x7f0b0142;
        /**  The label on the radio button for the widget type that shows only one image. [CHAR LIMIT=30]
         */
        public: static const int widget_type_photo = 0x7f0b0144;
        /**  The label on the radio button for the widget type that shows the images in an album. [CHAR LIMIT=30]
         */
        public: static const int widget_type_shuffle = 0x7f0b0143;
        /**  Text indicating the width of a media item in details window [CHAR LIMIT=14] 
         */
        public: static const int width = 0x7f0b0115;
        /**   Text for size x [CHAR LIMIT=1] 
         */
        public: static const int x = 0x7f0b0047;
    };
    public: class style {
        public: static const int ActionBarTitle = 0x7f100036;
        public: static const int ActionBarTwoLineItem = 0x7f100011;
        /**  Spinner primary text is smaller than usual due to extra vertical padding in spinner asset 
         */
        public: static const int ActionBarTwoLinePrimary = 0x7f10000f;
        public: static const int ActionBarTwoLineSecondary = 0x7f100010;
        public: static const int Animation_OnScreenHint = 0x7f100016;
        public: static const int CameraControls = 0x7f10002e;
        public: static const int DialogPickerTheme = 0x7f10000d;
        public: static const int EffectSettingGrid = 0x7f10001f;
        public: static const int EffectSettingItem = 0x7f100020;
        public: static const int EffectSettingItemTitle = 0x7f100021;
        public: static const int EffectSettingTypeTitle = 0x7f100022;
        public: static const int EffectTitleSeparator = 0x7f100024;
        public: static const int EffectTypeSeparator = 0x7f100023;
        public: static const int FilterIconButton = 0x7f100005;
        public: static const int FilterShowBottomButton = 0x7f100002;
        public: static const int FilterShowHistoryButton = 0x7f100000;
        public: static const int FilterShowSlider = 0x7f100003;
        public: static const int FilterShowTopButton = 0x7f100001;
        public: static const int Holo_ActionBar = 0x7f10000b;
        public: static const int IconButton = 0x7f100004;
        public: static const int Material_ActionBar = 0x7f100035;
        public: static const int MediaButton_Play = 0x7f10000c;
        public: static const int MenuIndicator = 0x7f10002d;
        public: static const int OnScreenHintTextAppearance = 0x7f100014;
        public: static const int OnScreenHintTextAppearance_Small = 0x7f100015;
        public: static const int OnViewfinderLabel = 0x7f10001d;
        public: static const int PanoCustomDialogText = 0x7f10001e;
        public: static const int PanoCustomDialogText_xlarge = 0x7f10002a;
        public: static const int PanoViewHorizontalBar = 0x7f10003c;
        public: static const int PopupTitleSeparator = 0x7f100018;
        public: static const int PopupTitleText = 0x7f100038;
        public: static const int PopupTitleText_xlarge = 0x7f100029;
        /**  Camera resources below 
         */
        public: static const int ReviewControlIcon = 0x7f10003b;
        /**  Camera resources below 
         */
        public: static const int ReviewControlText = 0x7f100037;
        public: static const int ReviewControlText_xlarge = 0x7f100028;
        public: static const int ReviewPlayIcon = 0x7f100017;
        public: static const int SettingItemList = 0x7f100019;
        public: static const int SettingItemText = 0x7f10001b;
        public: static const int SettingItemTitle = 0x7f10001a;
        public: static const int SettingPopupWindow = 0x7f10003a;
        public: static const int SettingPopupWindow_xlarge = 0x7f10003d;
        public: static const int SettingRow = 0x7f10001c;
        public: static const int SwitcherButton = 0x7f10002c;
        public: static const int TextAppearance_DialogWindowTitle = 0x7f100025;
        public: static const int TextAppearance_Medium = 0x7f100026;
        /**  Camera resources below 
         */
        public: static const int Theme_Camera = 0x7f100012;
        /**  When an activity requests a theme with an action bar from its manifest,
         the activity preview window created by the system process while the
         real activity is loading will also contain an action bar. Set this to
         NoActionBar and change the theme in onCreate. 
         */
        public: static const int Theme_CameraBase = 0x7f100013;
        public: static const int Theme_Crop = 0x7f10000a;
        public: static const int Theme_FilterShow = 0x7f100009;
        public: static const int Theme_Gallery = 0x7f100008;
        public: static const int Theme_Gallery_Dialog = 0x7f100007;
        public: static const int Theme_GalleryBase = 0x7f100006;
        public: static const int Theme_Photos_Fullscreen = 0x7f100034;
        public: static const int Theme_Photos_Gallery = 0x7f100033;
        public: static const int Theme_ProxyLauncher = 0x7f10000e;
        public: static const int UndoBar = 0x7f10002f;
        public: static const int UndoBarSeparator = 0x7f100031;
        public: static const int UndoBarTextAppearance = 0x7f100030;
        public: static const int UndoButton = 0x7f100032;
        public: static const int ViewfinderLabelLayout = 0x7f100039;
        public: static const int ViewfinderLabelLayout_xlarge = 0x7f10002b;
        public: static const int Widget_Button_Borderless = 0x7f100027;
    };
    public: class xml {
        public: static const int camera_preferences = 0x7f070000;
        public: static const int device_filter = 0x7f070001;
        public: static const int rtsp_settings_preferences = 0x7f070002;
        public: static const int video_preferences = 0x7f070003;
        public: static const int wallpaper_picker_preview = 0x7f070004;
        public: static const int widget_info = 0x7f070005;
    };
    public: class styleable {
        /**  Camera resources below 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CameraPreference_title Elastos.DevSamples.Node.JSGallery3D:title}</code></td><td></td></tr>
           </table>
           @see #CameraPreference_title
         */
        public: static const int CameraPreference[1];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#title}
          attribute's value can be found in the {@link #CameraPreference} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:title
        */
        public: static const int CameraPreference_title = 0;
        /** Attributes that can be used with a CategoryTrack.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CategoryTrack_iconSize Elastos.DevSamples.Node.JSGallery3D:iconSize}</code></td><td></td></tr>
           </table>
           @see #CategoryTrack_iconSize
         */
        public: static const int CategoryTrack[1];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#iconSize}
          attribute's value can be found in the {@link #CategoryTrack} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:iconSize
        */
        public: static const int CategoryTrack_iconSize = 0;
        /** Attributes that can be used with a CenteredLinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CenteredLinearLayout_max_width Elastos.DevSamples.Node.JSGallery3D:max_width}</code></td><td></td></tr>
           </table>
           @see #CenteredLinearLayout_max_width
         */
        public: static const int CenteredLinearLayout[1];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#max_width}
          attribute's value can be found in the {@link #CenteredLinearLayout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:max_width
        */
        public: static const int CenteredLinearLayout_max_width = 0;
        /** Attributes that can be used with a IconIndicator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconIndicator_icons Elastos.DevSamples.Node.JSGallery3D:icons}</code></td><td></td></tr>
           <tr><td><code>{@link #IconIndicator_modes Elastos.DevSamples.Node.JSGallery3D:modes}</code></td><td></td></tr>
           </table>
           @see #IconIndicator_icons
           @see #IconIndicator_modes
         */
        public: static const int IconIndicator[2];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#icons}
          attribute's value can be found in the {@link #IconIndicator} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:icons
        */
        public: static const int IconIndicator_icons = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#modes}
          attribute's value can be found in the {@link #IconIndicator} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:modes
        */
        public: static const int IconIndicator_modes = 1;
        /** Attributes that can be used with a IconListPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconListPreference_icons Elastos.DevSamples.Node.JSGallery3D:icons}</code></td><td></td></tr>
           <tr><td><code>{@link #IconListPreference_images Elastos.DevSamples.Node.JSGallery3D:images}</code></td><td></td></tr>
           <tr><td><code>{@link #IconListPreference_largeIcons Elastos.DevSamples.Node.JSGallery3D:largeIcons}</code></td><td></td></tr>
           <tr><td><code>{@link #IconListPreference_singleIcon Elastos.DevSamples.Node.JSGallery3D:singleIcon}</code></td><td> If a preference does not have individual icons for each entry, it can has a single icon to represent it.</td></tr>
           </table>
           @see #IconListPreference_icons
           @see #IconListPreference_images
           @see #IconListPreference_largeIcons
           @see #IconListPreference_singleIcon
         */
        public: static const int IconListPreference[4];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#icons}
          attribute's value can be found in the {@link #IconListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:icons
        */
        public: static const int IconListPreference_icons = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#images}
          attribute's value can be found in the {@link #IconListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:images
        */
        public: static const int IconListPreference_images = 3;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#largeIcons}
          attribute's value can be found in the {@link #IconListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:largeIcons
        */
        public: static const int IconListPreference_largeIcons = 2;
        /**
          <p>
          @attr description
           If a preference does not have individual icons for each entry, it can has a single icon to represent it. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:singleIcon
        */
        public: static const int IconListPreference_singleIcon = 1;
        /** Attributes that can be used with a ImageButtonTitle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ImageButtonTitle_android_text Elastos.DevSamples.Node.JSGallery3D:android_text}</code></td><td></td></tr>
           <tr><td><code>{@link #ImageButtonTitle_android_textColor Elastos.DevSamples.Node.JSGallery3D:android_textColor}</code></td><td></td></tr>
           </table>
           @see #ImageButtonTitle_android_text
           @see #ImageButtonTitle_android_textColor
         */
        public: static const int ImageButtonTitle[2];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#android_text}
          attribute's value can be found in the {@link #ImageButtonTitle} array.
          @attr name android:android_text
        */
        public: static const int ImageButtonTitle_android_text = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#android_textColor}
          attribute's value can be found in the {@link #ImageButtonTitle} array.
          @attr name android:android_textColor
        */
        public: static const int ImageButtonTitle_android_textColor = 0;
        /** Attributes that can be used with a Knob.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Knob_background Elastos.DevSamples.Node.JSGallery3D:background}</code></td><td></td></tr>
           <tr><td><code>{@link #Knob_foreground Elastos.DevSamples.Node.JSGallery3D:foreground}</code></td><td></td></tr>
           <tr><td><code>{@link #Knob_label Elastos.DevSamples.Node.JSGallery3D:label}</code></td><td></td></tr>
           </table>
           @see #Knob_background
           @see #Knob_foreground
           @see #Knob_label
         */
        public: static const int Knob[3];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#background}
          attribute's value can be found in the {@link #Knob} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:background
        */
        public: static const int Knob_background = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#foreground}
          attribute's value can be found in the {@link #Knob} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:foreground
        */
        public: static const int Knob_foreground = 2;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#label}
          attribute's value can be found in the {@link #Knob} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:label
        */
        public: static const int Knob_label = 0;
        /** Attributes that can be used with a ListPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListPreference_defaultValue Elastos.DevSamples.Node.JSGallery3D:defaultValue}</code></td><td></td></tr>
           <tr><td><code>{@link #ListPreference_entries Elastos.DevSamples.Node.JSGallery3D:entries}</code></td><td></td></tr>
           <tr><td><code>{@link #ListPreference_entryValues Elastos.DevSamples.Node.JSGallery3D:entryValues}</code></td><td></td></tr>
           <tr><td><code>{@link #ListPreference_key Elastos.DevSamples.Node.JSGallery3D:key}</code></td><td></td></tr>
           <tr><td><code>{@link #ListPreference_labelList Elastos.DevSamples.Node.JSGallery3D:labelList}</code></td><td></td></tr>
           </table>
           @see #ListPreference_defaultValue
           @see #ListPreference_entries
           @see #ListPreference_entryValues
           @see #ListPreference_key
           @see #ListPreference_labelList
         */
        public: static const int ListPreference[5];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#defaultValue}
          attribute's value can be found in the {@link #ListPreference} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          @attr name android:defaultValue
        */
        public: static const int ListPreference_defaultValue = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#entries}
          attribute's value can be found in the {@link #ListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:entries
        */
        public: static const int ListPreference_entries = 3;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#entryValues}
          attribute's value can be found in the {@link #ListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:entryValues
        */
        public: static const int ListPreference_entryValues = 2;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#key}
          attribute's value can be found in the {@link #ListPreference} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key
        */
        public: static const int ListPreference_key = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#labelList}
          attribute's value can be found in the {@link #ListPreference} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:labelList
        */
        public: static const int ListPreference_labelList = 4;
        /** Attributes that can be used with a StatePanelTrack.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #StatePanelTrack_elemEndSize Elastos.DevSamples.Node.JSGallery3D:elemEndSize}</code></td><td></td></tr>
           <tr><td><code>{@link #StatePanelTrack_elemSize Elastos.DevSamples.Node.JSGallery3D:elemSize}</code></td><td></td></tr>
           </table>
           @see #StatePanelTrack_elemEndSize
           @see #StatePanelTrack_elemSize
         */
        public: static const int StatePanelTrack[2];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#elemEndSize}
          attribute's value can be found in the {@link #StatePanelTrack} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:elemEndSize
        */
        public: static const int StatePanelTrack_elemEndSize = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#elemSize}
          attribute's value can be found in the {@link #StatePanelTrack} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:elemSize
        */
        public: static const int StatePanelTrack_elemSize = 0;
        /** Attributes that can be used with a Theme_GalleryBase.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_GalleryBase_listPreferredItemHeightSmall Elastos.DevSamples.Node.JSGallery3D:listPreferredItemHeightSmall}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_GalleryBase_switchStyle Elastos.DevSamples.Node.JSGallery3D:switchStyle}</code></td><td></td></tr>
           </table>
           @see #Theme_GalleryBase_listPreferredItemHeightSmall
           @see #Theme_GalleryBase_switchStyle
         */
        public: static const int Theme_GalleryBase[2];
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#listPreferredItemHeightSmall}
          attribute's value can be found in the {@link #Theme_GalleryBase} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:listPreferredItemHeightSmall
        */
        public: static const int Theme_GalleryBase_listPreferredItemHeightSmall = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.DevSamples.Node.JSGallery3D.R.attr#switchStyle}
          attribute's value can be found in the {@link #Theme_GalleryBase} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:switchStyle
        */
        public: static const int Theme_GalleryBase_switchStyle = 1;
    };
};
};
};
};
};

#endif // __Elastos_DevSamples_Node_JSGallery3D_R_H__
