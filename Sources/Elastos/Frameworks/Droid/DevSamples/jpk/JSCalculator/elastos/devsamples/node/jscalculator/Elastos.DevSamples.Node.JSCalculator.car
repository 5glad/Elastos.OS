module
{
    importlib("Elastos.Droid.Core.eco");

    interface Elastos.Droid.Os.IMessage;
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Os.IBundle;

    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IIntent;

    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IContextMenu;
    interface Elastos.Droid.View.IContextMenuInfo;

    using interface Elastos.Droid.App.IActivity;
    using interface Elastos.Droid.Content.IContextWrapper;
    using interface Elastos.Droid.Content.IComponentCallbacks;
    using interface Elastos.Droid.Content.IComponentCallbacks2;
    using interface Elastos.Droid.View.IContextThemeWrapper;
    using interface Elastos.Droid.View.ILayoutInflaterFactory;
    using interface Elastos.Droid.View.ILayoutInflaterFactory2;
    using interface Elastos.Droid.View.IWindowCallback;
    using interface Elastos.Droid.View.IKeyEventCallback;
    using interface Elastos.Droid.View.IViewOnCreateContextMenuListener;
    using interface Elastos.Droid.View.IOnWindowDismissedCallback;

    using interface Elastos.Droid.Widget.ITextView;
    using interface Elastos.Droid.Utility.IAttributeSet;
    using interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource;
    using interface Elastos.Droid.Graphics.Drawable.IDrawableCallback;
    using interface Elastos.Droid.View.IOnPreDrawListener;
    using interface Elastos.Droid.Widget.IEditText;

    using interface Elastos.Droid.View.IMotionEvent;
    using interface Elastos.Core.ICharSequence;

    namespace Elastos {
    namespace DevSamples {
    namespace Node {
    namespace JSCalculator {

    [deprecated]
    interface IMessageListener {
        OnHandleMessage(
            [in] IContext* ctx,
            [in] IMessage* msg);
    }

    [deprecated]
    interface IActivityListener {
        OnCreate(
            [in] IContext* ctx,
            [in] IBundle* savedInstanceState);
        OnStart(
            [in] IContext* context);
        OnResume(
            [in] IContext* context);
        OnPause(
            [in] IContext* context);
        OnStop(
            [in] IContext* context);
        OnDestroy(
            [in] IContext* context);

        OnBackPressed(
            [in] IContext* context);

        OnNewIntent(
            [in] IContext* ctx,
            [in] IIntent *intent);

        OnCreateDialog(
            [in] IContext* ctx,
            [in] Int32 id,
            [out] IInterface** dlg);

        OnActivityResult(
            [in] IContext* ctx,
            [in] Int32 requestCode,
            [in] Int32 resultCode,
            [in] IIntent *data);

        OnCreateContextMenu(
            [in] IContext* ctx,
            [in] IContextMenu* menu,
            [in] IView* v,
            [in] IContextMenuInfo* menuInfo);
    }

    interface ICalculatorEditTextListener;

    [deprecated]
    interface INodeBridgeListener {
        OnRegistActivity(
            [in] String packageName,
            [in] String activityName,
            [in] IInterface* activityInstance,
            [in] Int32 activityListener,    //IActivityListener**
            [in] IHandler* activityHandler,
            [out] Boolean* result);
        OnRegistCustomControl(
            [in] IContext* context,
            [in] IInterface* control,
            [in] Int32 listener, //ICalculatorEditTextListener**
            [out] Boolean* result);
    }

    [deprecated]
    interface INodeListener {
        OnNodeEvent(
            [in] Int32 eventId);

        GetEnqueueUIMessagePtr(
            [out] Int32* outPtr);

        Sleep(
            [in] Int32 interval);

        Lock();

        Unlock();

        SetActivityListener(
            [in] Int32 activityListener,    //IActivityListener**
            [in] IActivityListener* jsActivityListener);

        SetCalculatorEditTextListener(
            [in] Int32 calculatorEditTextListener,    //ICalculatorEditTextListener**
            [in] ICalculatorEditTextListener* jsCalculatorEditTextListener);

        SetNodeBridgeListener(
            [in] INodeBridgeListener* nodeBridgeListener);

        SetNodeBridge(
            [in] Int32 from,
            [in] Int32 threadIndex);
    }

    [local]
    interface ICallbackRunnable {
        GetInstance(
            [out] IInterface** instance);
    }

    [local]
    interface IActivityOne {
        OnClickPopupWindow(
            [in] IView* v);
    }

    [local]
    interface IOnTextSizeChangeListener
    {
        OnTextSizeChanged(
            [in] ITextView* textView,
            [in] Float oldSize);
    }

    [local]
    interface ICalculatorEditText
    {
        SetOnTextSizeChangeListener(
            [in] IOnTextSizeChangeListener* listener);

        GetVariableTextSize(
            [in] String text,
            [out] Float* result);

        _constructor(
            [in] IContext* context,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyle);
    }

    [local]
    interface ICalculatorEditTextListener
    {
        OnXXXCreateXXX(   //constructor
            [in] IInterface* _this,
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyle);

        OnTouchEvent(
            [in] IMotionEvent* event,
            [out] Boolean* result);

        OnSaveInstanceState(
            [out] IParcelable** result);

        SetTextSize(
            [in] Int32 unit,
            [in] Float size);

        GetCompoundPaddingTop(
            [out] Int32* result);

        GetCompoundPaddingBottom(
            [out] Int32* result);

        OnMeasure(
            [in] Int32 widthMeasureSpec,
            [in] Int32 heightMeasureSpec);

        OnTextChanged(
            [in] ICharSequence* text,
            [in] Int32 start,
            [in] Int32 lengthBefore,
            [in] Int32 lengthAfter);
    }

    class CCalculator {
        constructor();

        interface IActivity;
        interface IContext;
        interface IContextThemeWrapper;
        interface ILayoutInflaterFactory;
        interface ILayoutInflaterFactory2;
        interface IWindowCallback;
        interface IKeyEventCallback;
        interface IViewOnCreateContextMenuListener;
        interface IComponentCallbacks;
        interface IComponentCallbacks2;
        interface IOnWindowDismissedCallback;
        interface IActivityOne;
    }

    [local]
    class CCalculatorEditText
    {
        constructor(
            [in] IContext* context);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs);

        constructor(
            [in] IContext* ctx,
            [in] IAttributeSet* attrs,
            [in] Int32 defStyle);

        interface IEditText;
        interface ITextView;
        interface IOnPreDrawListener;
        interface IView;
        interface IDrawableCallback;
        interface IKeyEventCallback;
        interface IAccessibilityEventSource;
        interface ICalculatorEditText;
    }

    class CNodeListener {
        constructor();

        interface INodeListener;
    }

    } // namespace JSCalculator
    } // namespace Node
    } // namespace DevSamples
    } // namespace Elastos
}