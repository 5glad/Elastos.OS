//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace DevSamples {
    namespace DFObserver {

    /**
     * The Door interface describing how a door looks on the AllJoyn bus.
     */
    [@Org.Alljoyn.Bus.Annotation.BusInterface(name = "com.elastos.Door", announced = "true")]
    interface IDoor {

        const String DOOR_INTF_NAME = "com.elastos.Door";
        const String PERSON_PASSED_THROUGH = "PersonPassedThrough";

        [@Org.Alljoyn.Bus.Annotation.BusProperty(annotation = "BusProperty.ANNOTATE_EMIT_CHANGED_SIGNAL")]
        GetIsOpen(
            [out] Boolean* value);

        [@Org.Alljoyn.Bus.Annotation.BusProperty(annotation = "BusProperty.ANNOTATE_EMIT_CHANGED_SIGNAL")]
        GetLocation(
            [out] String* value);

        [@Org.Alljoyn.Bus.Annotation.BusProperty(annotation = "BusProperty.ANNOTATE_EMIT_CHANGED_SIGNAL", signature = "s")]
        SetDisplayName(
            [in] String value);

        [@Org.Alljoyn.Bus.Annotation.BusProperty(annotation = "BusProperty.ANNOTATE_EMIT_CHANGED_SIGNAL_INVALIDATES", signature = "u")]
        GetKeyCode(
            [out] Int32* value);

        [@Org.Alljoyn.Bus.Annotation.BusMethod(name = "Open")]
        Open();

        [@Org.Alljoyn.Bus.Annotation.BusMethod(name = "Close")]
        Close();

        [@Org.Alljoyn.Bus.Annotation.BusMethod(name = "KnockAndRun", annotation = "BusMethod.ANNOTATE_NO_REPLY")]
        KnockAndRun();

        [@Org.Alljoyn.Bus.Annotation.BusSignal(name = "PersonPassedThrough", signature = "s")]
        PersonPassedThrough(
            [in] String person);
    }

    } // namespace DFObserver
    } // namespace DevSamples
    } // namespace Elastos
}
