//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Webkit.Webview.Chromium.Net.IRemoteElastosKeyStoreCallbacks;

    namespace Elastos {
    namespace Droid {
    namespace Webkit {
    namespace Webview {
    namespace Chromium {
    namespace Net {

    [local, deprecated]
    interface IRemoteElastosKeyStore {
        // Remote calls for SSlClientCertificateRequest - these allow retrieving
        // the alias of the certificate to be used, its encoded chain and a handle
        // for identifying a private key in the remote process.
        GetClientCertificateAlias(
            [out] String* result);

        GetEncodedCertificateChain(
            [in] String alias,
            [out, callee] ArrayOf<Byte>* result);

        GetPrivateKeyHandle(
            [in] String alias,
            [out] Int32* result);

        // Registers callbacks for service->client communication.
        SetClientCallbacks(
            [in] IRemoteElastosKeyStoreCallbacks* remotecallbacks);

        // Remote calls for AndroidKeyStore - these functions are performing operations
        // with a PrivateKey in the remote process using the handle provided by
        // |getPrivateKeyHandle|.
        GetRSAKeyModulus(
            [in] Int32 handle,
            [out, callee] ArrayOf<Byte>* result);

        GetPrivateKeyEncodedBytes(
            [in] Int32 handle,
            [out, callee] ArrayOf<Byte>* result);

        GetDSAKeyParamQ(
            [in] Int32 handle,
            [out, callee] ArrayOf<Byte>* result);

        GetECKeyOrder(
            [in] Int32 handle,
            [out, callee] ArrayOf<Byte>* result);

        RawSignDigestWithPrivateKey(
            [in] Int32 handle,
            [in] ArrayOf<Byte>* message,
            [out, callee] ArrayOf<Byte>* result);

        GetPrivateKeyType(
            [in] Int32 handle,
            [out] Int32* result);

        ReleaseKey(
            [in] Int32 handle);
    }

    } // namespace Net
    } // namespace Chromium
    } // namespace Webview
    } // namespace Webkit
    } // namespace Droid
    } // namespace Elastos
}

