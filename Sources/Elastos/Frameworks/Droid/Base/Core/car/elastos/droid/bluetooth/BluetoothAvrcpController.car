//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    namespace Elastos {
    namespace Droid {
    namespace Bluetooth {

    /**
     * This class provides the public APIs to control the Bluetooth AVRCP Controller
     * profile.
     *
     *<p>BluetoothAvrcpController is a proxy object for controlling the Bluetooth AVRCP
     * Service via IPC. Use {@link BluetoothAdapter#getProfileProxy} to get
     * the BluetoothAvrcpController proxy object.
     *
     * {@hide}
     */
    /**
     * @Involve
     * interface IBluetoothProfile
     */
    interface IBluetoothAvrcpController {
        /**
         * Intent used to broadcast the change in connection state of the AVRCP Controller
         * profile.
         *
         * <p>This intent will have 3 extras:
         * <ul>
         *   <li> {@link #EXTRA_STATE} - The current state of the profile. </li>
         *   <li> {@link #EXTRA_PREVIOUS_STATE}- The previous state of the profile.</li>
         *   <li> {@link BluetoothDevice#EXTRA_DEVICE} - The remote device. </li>
         * </ul>
         *
         * <p>{@link #EXTRA_STATE} or {@link #EXTRA_PREVIOUS_STATE} can be any of
         * {@link #STATE_DISCONNECTED}, {@link #STATE_CONNECTING},
         * {@link #STATE_CONNECTED}, {@link #STATE_DISCONNECTING}.
         *
         * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission to
         * receive.
        */
        const String ACTION_CONNECTION_STATE_CHANGED =
                "android.bluetooth.acrcp-controller.profile.action.CONNECTION_STATE_CHANGED";

        SendPassThroughCmd(
            [in] IBluetoothDevice* device,
            [in] Int32 keyCode,
            [in] Int32 keyState);
    }

    } // Bluetooth
    } // Droid
    } // Elastos
}
