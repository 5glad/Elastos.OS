//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    namespace Elastos {
    namespace Droid {
    namespace Bluetooth {

    /**
     * This class provides the public APIs to control the Bluetooth A2DP
     */
    /**
     * @Involve
     * interface IParcelable;
     */
    interface IBluetoothActivityEnergyInfo {
        const Int32 BT_STACK_STATE_INVALID = 0;
        const Int32 BT_STACK_STATE_STATE_ACTIVE = 1;
        const Int32 BT_STACK_STATE_STATE_SCANNING = 2;
        const Int32 BT_STACK_STATE_STATE_IDLE = 3;

        /**
         * @return bt stack reported state
         */
        GetBluetoothStackState(
            [out] Int32* stackState);

        /**
         * @return tx time in ms
         */
        GetControllerTxTimeMillis(
            [out] Int32* txTimeMillis);

        /**
         * @return rx time in ms
         */
        GetControllerRxTimeMillis(
            [out] Int32* rxTimeMillis);

        /**
         * @return idle time in ms
         */
        GetControllerIdleTimeMillis(
            [out] Int32* idelTimeMillis);

        /**
         * product of current(mA), voltage(V) and time(ms)
         * @return energy used
         */
        GetControllerEnergyUsed(
            [out] Int32* energyUsed);

        /**
         * @return timestamp(wall clock) of record creation
         */
        GetTimeStamp(
            [out] Int64* timeStamp);

        /**
         * @return if the record is valid
         */
        IsValid(
            [out] Boolean* isValid);
    }

    } // Bluetooth
    } // Droid
    } // Elastos
}
