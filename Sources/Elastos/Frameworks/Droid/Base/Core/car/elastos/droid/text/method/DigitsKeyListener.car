//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.View.IKeyEvent;
    interface Elastos.Droid.Text.ISpannable;
    interface Elastos.Droid.Text.IEditable;

    namespace Elastos {
    namespace Droid {
    namespace Text {
    namespace Method {

    /**
     * For digits-only text entry
     * <p></p>
     * As for all implementations of {@link KeyListener}, this class is only concerned
     * with hardware keyboards.  Software input methods have no obligation to trigger
     * the methods in this class.
     *
     * @Involve
     * interface IKeyListener
     * interface IMetaKeyKeyListener
     * interface IInputFilter
     * interface IBaseKeyListener
     * interface INumberKeyListener
     */
    interface IDigitsKeyListener {
        GetInputType(
            [out] Int32* ret);
    }

    /**
     * @Involve
     * interface IMetaKeyKeyListenerHelper
     * interface IBaseKeyListenerHelper
     * interface INumberKeyListenerHelper
     */
    [local]
    interface IDigitsKeyListenerHelper {
        /**
         * Returns a DigitsKeyListener that accepts the digits 0 through 9.
         */
        GetInstance(
            [out] IDigitsKeyListener** ret);

        /**
         * Returns a DigitsKeyListener that accepts the digits 0 through 9,
         * plus the minus sign (only at the beginning) and/or decimal point
         * (only one per field) if specified.
         */
        GetInstance(
            [in] Boolean sign,
            [in] Boolean decimal,
            [out] IDigitsKeyListener** ret);

        /**
         * Returns a DigitsKeyListener that accepts only the characters
         * that appear in the specified String.  Note that not all characters
         * may be available on every keyboard.
         */
        GetInstance(
            [in] String accepted,
            [out] IDigitsKeyListener** ret);
    }

    } // namespace Method
    } // namespace Text
    } // namespace Droid
    } // namespace Elastos
}
