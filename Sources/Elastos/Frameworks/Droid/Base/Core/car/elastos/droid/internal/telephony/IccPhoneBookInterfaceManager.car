
module
{
    interface Elastos.Droid.Content.IContentValues;
    interface Elastos.Droid.Internal.Telephony.Uicc.IUiccCard;

    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {

    interface IIccPhoneBookInterfaceManager {
        Dispose();

        SetIccCard(
            [in] IUiccCard* card);

        /**
         * Replace oldAdn with newAdn in ADN-like record in EF
         *
         * getAdnRecordsInEf must be called at least once before this function,
         * otherwise an error will be returned. Currently the email field
         * if set in the ADN record is ignored.
         * throws SecurityException if no WRITE_CONTACTS permission
         *
         * @param efid must be one among EF_ADN, EF_FDN, and EF_SDN
         * @param oldTag adn tag to be replaced
         * @param oldPhoneNumber adn number to be replaced
         *        Set both oldTag and oldPhoneNubmer to "" means to replace an
         *        empty record, aka, insert new record
         * @param newTag adn tag to be stored
         * @param newPhoneNumber adn number ot be stored
         *        Set both newTag and newPhoneNubmer to "" means to replace the old
         *        record with empty one, aka, delete old record
         * @param pin2 required to update EF_FDN, otherwise must be null
         * @return true for success
         */
        UpdateAdnRecordsInEfBySearch(
            [in] Int32 efid,
            [in] String oldTag,
            [in] String oldPhoneNumber,
            [in] String newTag,
            [in] String newPhoneNumber,
            [in] String pin2,
            [out] Boolean* result);

        UpdateAdnRecordsWithContentValuesInEfBySearch(
            [in] Int32 efid,
            [in] IContentValues* values,
            [in] String pin2,
            [out] Boolean* result);

        /**
         * Update an ADN-like EF record by record index
         *
         * This is useful for iteration the whole ADN file, such as write the whole
         * phone book or erase/format the whole phonebook. Currently the email field
         * if set in the ADN record is ignored.
         * throws SecurityException if no WRITE_CONTACTS permission
         *
         * @param efid must be one among EF_ADN, EF_FDN, and EF_SDN
         * @param newTag adn tag to be stored
         * @param newPhoneNumber adn number to be stored
         *        Set both newTag and newPhoneNubmer to "" means to replace the old
         *        record with empty one, aka, delete old record
         * @param index is 1-based adn record index to be updated
         * @param pin2 required to update EF_FDN, otherwise must be null
         * @return true for success
         */
        UpdateAdnRecordsInEfByIndex(
            [in] Int32 efid,
            [in] String newTag,
            [in] String newPhoneNumber,
            [in] Int32 index,
            [in] String pin2,
            [out] Boolean* result);

        /**
         * Get the capacity of records in efid
         *
         * @param efid the EF id of a ADN-like ICC
         * @return  int[3] array
         *            recordSizes[0]  is the single record length
         *            recordSizes[1]  is the total length of the EF file
         *            recordSizes[2]  is the number of records in the EF file
         */
        GetAdnRecordsSize(
            [in] Int32 efid,
            [out, callee] ArrayOf<Int32>* result);

        /**
         * Loads the AdnRecords in efid and returns them as a
         * List of AdnRecords
         *
         * throws SecurityException if no READ_CONTACTS permission
         *
         * @param efid the EF id of a ADN-like ICC
         * @return List of AdnRecord
         */
        GetAdnRecordsInEf(
            [in] Int32 efid,
            [out] IList** result);

        GetAdnCount(
            [out] Int32* result);

        GetAnrCount(
            [out] Int32* result);

        GetEmailCount(
            [out] Int32* result);

        GetSpareAnrCount(
            [out] Int32* result);

        GetSpareEmailCount(
            [out] Int32* result);
    }

    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
