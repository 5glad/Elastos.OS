//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================


module
{
    namespace Elastos {
    namespace Droid {
    namespace Wifi {
    namespace P2p {

    /**
     * A class representing Wifi Display information for a device
     * @hide
     */
    /**
     * @Involved
     * interface IParcelable;
     */
    interface IWifiP2pWfdInfo {
        const Int32 WFD_SOURCE = 0;

        const Int32 PRIMARY_SINK = 1;

        const Int32 SECONDARY_SINK = 2;

        const Int32 SOURCE_OR_PRIMARY_SINK = 3;

        IsWfdEnabled(
            [out] Boolean* result);

        SetWfdEnabled(
            [in] Boolean enabled);

        GetDeviceType(
            [out] Int32* result);

        SetDeviceType(
            [in] Int32 deviceType,
            [out] Boolean* result);

        IsCoupledSinkSupportedAtSource(
            [out] Boolean* result);

        SetCoupledSinkSupportAtSource(
            [in] Boolean enabled);

        IsCoupledSinkSupportedAtSink(
            [out] Boolean* result);

        SetCoupledSinkSupportAtSink(
            [in] Boolean enabled);

        IsSessionAvailable(
            [out] Boolean* result);

        SetSessionAvailable(
            [in] Boolean enabled);

        GetControlPort(
            [out] Int32* result);

        SetControlPort(
            [in] Int32 port);

        SetMaxThroughput(
            [in] Int32 maxThroughput);

        GetMaxThroughput(
            [out] Int32* result);

        GetDeviceInfoHex(
            [out] String* result);
    }

    } // namespace P2p
    } // namespace Wifi
    } // namespace Droid
    } // namespace Elastos
}
