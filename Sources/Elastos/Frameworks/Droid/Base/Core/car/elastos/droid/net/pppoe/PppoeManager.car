//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Net.IDhcpInfo;
    interface Elastos.Droid.Net.Pppoe.IIPppoeManager;
    interface Elastos.Droid.Net.Pppoe.IPppoeDevInfo;
    interface Elastos.Droid.Os.IHandler;

    namespace Elastos {
    namespace Droid {
    namespace Net {
    namespace Pppoe {

    interface IPppoeManager {
        const String TAG = "PppoeManager";

        const Int32 PPPOE_DEVICE_SCAN_RESULT_READY = 0;

        const String PPPOE_STATE_CHANGED_ACTION =
                "android.net.pppoe.PPPOE_STATE_CHANGED";

        const String NETWORK_STATE_CHANGED_ACTION =
                "android.net.pppoe.STATE_CHANGE";

    //  const String ACTION_PPPOE_NETWORK = "android.net.pppoe.PPPOE_NET_CHG";

        const String EXTRA_NETWORK_INFO = "networkInfo";

        const String EXTRA_PPPOE_STATE = "pppoe_state";

        const String EXTRA_PPPOE_ERRCODE = "pppoe_errcode";

        const String PROP_VAL_PPP_NOERR = "0:0";

        const String EXTRA_PREVIOUS_PPPOE_STATE = "previous_pppoe_state";

        const Int32 PPPOE_STATE_UNKNOWN = 0;

        const Int32 PPPOE_STATE_DISABLED = 1;

        const Int32 PPPOE_STATE_ENABLED = 2;

        GetIIPppoeManager(
            [out] IIPppoeManager** manager);

        SetIIPppoeManager(
            [in] IIPppoeManager* manager);

        GetHandler(
            [out] IHandler** handler);

        SetHandler(
            [in] IHandler* handler);

        IsPppoeConfigured(
            [out] Boolean* result);

        GetSavedPppoeConfig(
            [out] IPppoeDevInfo** info);

        UpdatePppoeDevInfo(
            [in] IPppoeDevInfo* info);

        GetDeviceNameList(
            [out, callee] ArrayOf<String>* list);

        SetPppoeEnabled(
            [in] Boolean ebl);

        GetPppoeState(
            [out] Int32* val);

        PppoeConfigured(
            [out] Boolean* result);

        GetDhcpInfo(
            [out] IDhcpInfo** info);

        GetTotalInterface(
            [out] Int32* val);

        PppoeSetDefaultConf();

        IsPppoeDeviceUp(
            [out] Boolean* result);
    }

    } // namespace Pppoe
    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
