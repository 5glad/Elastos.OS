//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Utility {

    /**
     * {@link CharSequence} utility methods.
     */
    [local, deprecated]
    interface ICharSequences {
        /**
         * Adapts {@link CharSequence} to an array of ASCII (7-bits per character)
         * bytes.
         *
         * @param bytes ASCII bytes
         */
        ForAsciiBytes(
            [in] ArrayOf<Byte>* bytes,
            [out] ICharSequence** cs);

        /**
         * Adapts {@link CharSequence} to an array of ASCII (7-bits per character)
         * bytes.
         *
         * @param bytes ASCII bytes
         * @param start index, inclusive
         * @param end index, exclusive
         *
         * @throws IndexOutOfBoundsException if start or end are negative, if end
         *  is greater than length(), or if start is greater than end
         */
        ForAsciiBytes(
            [in] ArrayOf<Byte>* bytes,
            [in] Int32 start,
            [in] Int32 end,
            [out] ICharSequence** cs);

        /**
         * Compares two character sequences for equality.
         */
        Equals(
            [in] ICharSequence* a,
            [in] ICharSequence* b,
            [out] Boolean* result);

        /**
         * Compares two character sequences with API like {@link Comparable#compareTo}.
         *
         * @param me The CharSequence that receives the compareTo call.
         * @param another The other CharSequence.
         * @return See {@link Comparable#compareTo}.
         */
        CompareToIgnoreCase(
            [in] ICharSequence* me,
            [in] ICharSequence* another,
            [out] Int32* result);
    }

    }//namespace Utility
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}
