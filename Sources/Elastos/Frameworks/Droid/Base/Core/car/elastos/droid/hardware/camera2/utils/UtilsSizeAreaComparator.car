//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Utility.IList;

    interface Elastos.Droid.Utility.ISize;

    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Camera2 {
    namespace Utils {

    /**
     * Comparator for {@link Size} objects by the area.
     *
     * <p>This comparator totally orders by rectangle area. Tie-breaks on width.</p>
     *
     * @invoke
     * interface IComparator
     */
    interface IUtilsSizeAreaComparator {
    }

    interface IUtilsSizeAreaComparatorHelper {
        /**
         * Get the largest {@code Size} from the list by comparing each size's area
         * by each other using {@link SizeAreaComparator}.
         *
         * @param sizes a non-{@code null} list of non-{@code null} sizes
         * @return a non-{@code null} size
         *
         * @throws NullPointerException if {@code sizes} or any elements in it were {@code null}
         */
        FindLargestByArea(
            [in] IList* sizes,
            [out] ISize** outsz);
    }

    } // namespace Utils
    } // namespace Camera2
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
