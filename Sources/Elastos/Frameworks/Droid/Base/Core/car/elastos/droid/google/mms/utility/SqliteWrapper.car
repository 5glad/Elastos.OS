//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IContentResolver;
    interface Elastos.Droid.Content.IContentValues;
    interface Elastos.Droid.Database.ICursor;
    interface Elastos.Droid.Net.IUri;

    namespace Elastos {
    namespace Droid {
    namespace Google {
    namespace Mms {
    namespace Utility {

    [local, deprecated]
    interface ISqliteWrapper {
        // CheckSQLiteException(
        //     [in] IContext* context,
        //     [in] ISQLiteException* e);

        Query(
            [in] IContext* context,
            [in] IContentResolver* resolver,
            [in] IUri* uri,
            [in] ArrayOf<String>* projection,
            [in] String selection,
            [in] ArrayOf<String>* selectionArgs,
            [in] String sortOrder,
            [out] ICursor** result);

        Requery(
            [in] IContext* context,
            [in] ICursor* cursor,
            [out] Boolean* result);

        Update(
            [in] IContext* context,
            [in] IContentResolver* resolver,
            [in] IUri* uri,
            [in] IContentValues* values,
            [in] String where,
            [in] ArrayOf<String>* selectionArgs,
            [out] Int32* result);

        Delete(
            [in] IContext* context,
            [in] IContentResolver* resolver,
            [in] IUri* uri,
            [in] String where,
            [in] ArrayOf<String>* selectionArgs,
            [out] Int32* result);

        Insert(
            [in] IContext* context,
            [in] IContentResolver* resolver,
            [in] IUri* uri,
            [in] IContentValues* values,
            [out] IUri** result);

    }

    }//Utility
    }//Mms
    }//Google
    }//Droid
    }//Elastos

}
