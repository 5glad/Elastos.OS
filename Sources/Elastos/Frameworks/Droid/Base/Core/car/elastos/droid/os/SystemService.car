//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    enum SystemServiceState {
        SystemServiceState_NONE,
        SystemServiceState_RUNNING,
        SystemServiceState_STOPPING,
        SystemServiceState_STOPPED,
        SystemServiceState_RESTARTING,
    }

    [deprecated]
    interface ISystemService {
        /** Request that the init daemon start a named service. */
        Start(
            [in] String name);

        /** Request that the init daemon stop a named service. */
        Stop(
            [in] String name);

        /** Request that the init daemon restart a named service. */
        Restart(
            [in] String name);

        /**
         * Return current state of given service.
         */
        GetState(
            [in] String service,
            [out] SystemServiceState* state);

        /**
         * Check if given service is {@link State#STOPPED}.
         */
        IsStopped(
            [in] String service,
            [out] Boolean* isStopped);

        /**
         * Check if given service is {@link State#RUNNING}.
         */
        IsRunning(
            [in] String service,
            [out] Boolean* isRunning);

        /**
         * Wait until given service has entered specific state.
         */
        WaitForState(
            [in] String service,
            [in] SystemServiceState state,
            [in] Int64 timeoutMillis);

        /**
         * Wait until any of given services enters {@link State#STOPPED}.
         */
        WaitForAnyStopped(
            [in] ArrayOf<String>* services);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
