//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Net.IUri;
    interface Elastos.Droid.Telecom.IConnectionRequest;
    interface Elastos.Droid.Telecom.IParcelableConnection;
    interface Elastos.Droid.Telecom.IDisconnectCause;
    interface Elastos.Droid.Telecom.IParcelableConference;
    interface Elastos.Droid.Internal.Telecom.IRemoteServiceCallback;
    interface Elastos.Droid.Internal.Telecom.IIVideoProvider;
    interface Elastos.Droid.Telecom.IStatusHints;
    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telecom {

        /**
         * Internal remote callback interface for connection services.
         *
         * @see android.telecom.ConnectionServiceAdapter
         *
         * {@hide}
        */
        interface IIConnectionServiceAdapter {
            HandleCreateConnectionComplete(
                [in] String callId,
                [in] IConnectionRequest* request,
                [in] IParcelableConnection* connection);

            SetActive(
                [in] String callId);

            SetRinging(
                [in] String callId);

            SetDialing(
                [in] String callId);

            SetDisconnected(
                [in] String callId,
                [in] IDisconnectCause* disconnectCause);

            SetOnHold(
                [in] String callId);

            SetRingbackRequested(
                [in] String callId,
                [in] Boolean ringing);

            SetCallCapabilities(
                [in] String callId,
                [in] Int32 callCapabilities);

            SetIsConferenced(
                [in] String callId,
                [in] String conferenceCallId);

            AddConferenceCall(
                [in] String callId,
                [in] IParcelableConference* conference);

            RemoveCall(
                [in] String callId);

            OnPostDialWait(
                [in] String callId,
                [in] String remaining);

            QueryRemoteConnectionServices(
                [in] IRemoteServiceCallback* cb);

            SetVideoProvider(
                [in] String callId,
                [in] IIVideoProvider* videoProvider);

            SetVideoState(
                [in] String callId,
                [in] Int32 videoState);

            SetIsVoipAudioMode(
                [in] String callId,
                [in] Boolean isVoip);

            SetStatusHints(
                [in] String callId,
                [in] IStatusHints* statusHints);

            SetAddress(
                [in] String callId,
                [in] IUri* address,
                [in] Int32 presentation);

            SetCallerDisplayName(
                [in] String callId,
                [in] String callerDisplayName,
                [in] Int32 presentation);

            SetConferenceableConnections(
                [in] String callId,
                [in] IList* conferenceableCallIds);
        }

    } // namespace Telecom
    } // namespace Internal
    } // namespace Droid
    } // namespace Elastos
}
