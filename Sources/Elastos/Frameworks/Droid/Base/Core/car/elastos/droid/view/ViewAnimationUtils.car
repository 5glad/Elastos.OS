//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Animation.IAnimator;
    interface Elastos.Droid.View.IView;

    namespace Elastos {
    namespace Droid {
    namespace View {


    /**
     * Interface definition for a callback to be invoked when the view hierarchy is
     * attached to and detached from its window.
     */
    [local]
    interface IViewAnimationUtilsHelper {
        /**
         * Returns an Animator which can animate a clipping circle.
         * <p>
         * Any shadow cast by the View will respect the circular clip from this animator.
         * <p>
         * Only a single non-rectangular clip can be applied on a View at any time.
         * Views clipped by a circular reveal animation take priority over
         * {@link View#setClipToOutline(boolean) View Outline clipping}.
         * <p>
         * Note that the animation returned here is a one-shot animation. It cannot
         * be re-used, and once started it cannot be paused or resumed.
         *
         * @param view The View will be clipped to the animating circle.
         * @param centerX The x coordinate of the center of the animating circle.
         * @param centerY The y coordinate of the center of the animating circle.
         * @param startRadius The starting radius of the animating circle.
         * @param endRadius The ending radius of the animating circle.
         */
        CreateCircularReveal(
        	[in] IView* view,
            [in] Int32 centerX,
            [in] Int32 centerY,
            [in] Float startRadius,
            [in] Float endRadius,
            [out] IAnimator** result);
    }

    }   //namespace View
    }   //namespace Droid
    }   //namespace Elastos
}
