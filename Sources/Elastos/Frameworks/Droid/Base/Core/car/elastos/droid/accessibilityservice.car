//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    merge("accessibilityservice/AccessibilityServiceInfo.car");
    merge("accessibilityservice/IAccessibilityServiceConnection.car");
    merge("accessibilityservice/IAccessibilityServiceClient.car");
    merge("accessibilityservice/AccessibilityService.car");

    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.Pm.IResolveInfo;
    interface Elastos.Droid.Os.IBinder;
    interface Elastos.Droid.Os.ILooper;
    interface Elastos.Droid.Internal.Os.IHandlerCallerCallback;

    namespace Elastos {
    namespace Droid {
    namespace AccessibilityService {

    [local]
    class CAccessibilityServiceClientWrapper {
        constructor(
            [in] IContext* ctx,
            [in] ILooper* looper,
            [in] IAccessibilityServiceCallbacks* cb);

        interface IIAccessibilityServiceClient;
        interface IBinder;
        interface IHandlerCallerCallback;
    }

    [local]
    class CAccessibilityServiceInfo {
        constructor();

        constructor(
            [in] IResolveInfo* resolveInfo,
            [in] IContext* ctx);

        interface IAccessibilityServiceInfo;
        interface IParcelable;
    }

    singleton class CAccessibilityServiceInfoHelper {
        interface IAccessibilityServiceInfoHelper;
    }

    class CAccessibilityServiceInfoCapabilityInfo {
        constructor(
            [in] Int32 capability,
            [in] Int32 titleResId,
            [in] Int32 descResId);

        interface IAccessibilityServiceInfoCapabilityInfo;
    }

    } //AccessibilityService
    } //Droid
    } //Elastos
}
