//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Os.IBundle;
    interface Elastos.Droid.View.IKeyEvent;
    interface Elastos.Droid.View.InputMethod.IExtractedTextRequest;
    interface Elastos.Droid.View.InputMethod.ICompletionInfo;
    interface Elastos.Droid.View.InputMethod.ICorrectionInfo;
    interface Elastos.Droid.Internal.View.IIInputContextCallback;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace View {

    /**
     * Interface from an input method to the application, allowing it to perform
     * edits on the current input field and other interactions with the application.
     * {@hide}
     */
    [oneway]
    interface IIInputContext {
        GetTextBeforeCursor(
            [in] Int32 length,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);

        GetTextAfterCursor(
            [in] Int32 length,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);

        GetCursorCapsMode(
            [in] Int32 reqModes,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);

        GetExtractedText(
            [in] IExtractedTextRequest* request,
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);

        DeleteSurroundingText(
            [in] Int32 leftLength,
            [in] Int32 rightLength);

        SetComposingText(
            [in] ICharSequence* text,
            [in] Int32 newCursorPosition);

        FinishComposingText();

        CommitText(
            [in] ICharSequence* text,
            [in] Int32 newCursorPosition);

        CommitCompletion(
            [in] ICompletionInfo* completion);

        CommitCorrection(
            [in] ICorrectionInfo* correction);

        SetSelection(
            [in] Int32 start,
            [in] Int32 end);

        PerformEditorAction(
            [in] Int32 actionCode);

        PerformContextMenuAction(
            [in] Int32 id);

        BeginBatchEdit();

        EndBatchEdit();

        ReportFullscreenMode(
            [in] Boolean enabled);

        SendKeyEvent(
            [in] IKeyEvent* event);

        ClearMetaKeyStates(
            [in] Int32 states);

        PerformPrivateCommand(
            [in] String action,
            [in] IBundle* data);

        SetComposingRegion(
            [in] Int32 start,
            [in] Int32 end);

        GetSelectedText(
            [in] Int32 flags,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);

        RequestUpdateCursorAnchorInfo(
            [in] Int32 cursorUpdateMode,
            [in] Int32 seq,
            [in] IIInputContextCallback* cb);
    }

    }//namespace View
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}
