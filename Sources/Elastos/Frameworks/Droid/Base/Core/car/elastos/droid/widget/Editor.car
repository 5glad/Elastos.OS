//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Text.ISpannable;
    interface Elastos.Droid.Text.Style.IEasyEditSpan;
    interface Elastos.Droid.Graphics.Drawable.IDrawable;
    interface Elastos.Droid.View.InputMethod.ICorrectionInfo;
    interface Elastos.Droid.Text.Method.IWordIterator;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    /**
     * @Involve
     * interface Elastos.Droid.Text.IInputFilter;
     */
    interface IUndoInputFilter {
    }

    /**
     * @Involve
     * interface Elastos.Droid.Content.IUndoOperation;
     */
    interface ITextModifyOperation {
    }

    interface ITextViewPositionListener {
        UpdatePosition(
            [in] Int32 parentPositionX,
            [in] Int32 parentPositionY,
            [in] Boolean parentPositionChanged,
            [in] Boolean parentScrolled);
    }

    interface IEasyEditDeleteListener {

        /**
         * Clicks the delete pop-up.
         */
        OnDeleteClick(
            [in] IEasyEditSpan* span);
    }

    interface IDragLocalState {
    }

    interface IEditor {

        SetError(
            [in] ICharSequence* error,
            [in] IDrawable* icon);

        GetWordIterator(
            [out] IWordIterator** wordIterator);

        PerformLongClick(
            [in] Boolean handled,
            [out] Boolean* res);

        BeginBatchEdit();

        EndBatchEdit();

        /**
         * Called by the framework in response to a text auto-correction (such as fixing a typo using a
         * a dictionnary) from the current input method, provided by it calling
         * {@link InputConnection#commitCorrection} InputConnection.commitCorrection()}. The default
         * implementation flashes the background of the corrected word to provide feedback to the user.
         *
         * @param info The auto correct info about the text that was corrected.
         */
        OnCommitCorrection(
            [in] ICorrectionInfo* info);

        AddSpanWatchers(
            [in] ISpannable* text);

    }

    }// namespace Widget
    }// namespace Droid
    }// namespace Elastos
}
