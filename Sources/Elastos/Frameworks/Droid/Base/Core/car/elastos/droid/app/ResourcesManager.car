//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.Pm.IIPackageManager;
    interface Elastos.Droid.Content.Res.IConfiguration;
    interface Elastos.Droid.Content.Res.ICompatibilityInfo;
    interface Elastos.Droid.Content.Res.IResources;
    interface Elastos.Droid.Os.IBinder;
    interface Elastos.Droid.View.IDisplayAdjustments;
    interface Elastos.Droid.Utility.IDisplayMetrics;

    namespace Elastos {
    namespace Droid {
    namespace App {

    /** @hide */
    [deprecated, local]
    interface IResourcesManager {
        GetConfiguration(
            [out] IConfiguration** config);

        FlushDisplayMetricsLocked();

        GetDisplayMetricsLocked(
            [in] Int32 displayId,
            [out] IDisplayMetrics** displayMetrics);

        GetDisplayMetricsLocked(
            [in] Int32 displayId,
            [in] IDisplayAdjustments* daj,
            [out] IDisplayMetrics** displayMetrics);

        ApplyCompatConfiguration(
            [in] Int32 displayDensity,
            [in] IConfiguration* compatConfiguration,
            [out] Boolean* result);

        GetTopLevelResources(
            [in] String resDir,
            [in] ArrayOf<String>* splitResDirs,
            [in] ArrayOf<String>* overlayDirs,
            [in] ArrayOf<String>* libDirs,
            [in] Int32 displayId,
            [in] String packageName,
            [in] IConfiguration* overrideConfiguration,
            [in] ICompatibilityInfo* compatInfo,
            [in] IBinder* token,
            [in] IContext* ctx,
            [out] IResources** res);

        /**
         * Creates the top level Resources for applications with the given compatibility info.
         *
         * @param resDir the resource directory.
         * @param compatInfo the compability info. Must not be null.
         * @param token the application token for determining stack bounds.
         *
         * @hide
         */
        GetTopLevelThemedResources(
            [in] String resDir,
            [in] Int32 displayId,
            [in] String packageName,
            [in] String themePackageName,
            [in] ICompatibilityInfo* compatInfo,
            [in] IBinder* token,
            [out] IResources** res);

        ApplyConfigurationToResourcesLocked(
            [in] IConfiguration* config,
            [in] ICompatibilityInfo* compat,
            [out] Boolean* result);
    }

    interface IResourcesManagerHelper {
        GetPackageManager(
            [out] IIPackageManager** pm);
    }

    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}