//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    interface Elastos.Droid.Telecom.IConference;
    interface Elastos.Droid.Telecom.IConnection;
    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Telecom {

    interface IConferenceListener {
        OnStateChanged(
            [in] IConference* conference,
            [in] Int32 oldState,
            [in] Int32 newState);

        OnDisconnected(
            [in] IConference* conference,
            [in] IDisconnectCause* disconnectCause);

        OnConnectionAdded(
            [in] IConference* conference,
            [in] IConnection* connection);

        OnConnectionRemoved(
            [in] IConference* conference,
            [in] IConnection* connection);

        OnConferenceableConnectionsChanged(
            [in] IConference* conference,
            [in] IList* conferenceableConnections);

        OnDestroyed(
            [in] IConference* conference);

        OnCapabilitiesChanged(
            [in] IConference* conference,
            [in] Int32 capabilities);
    }

    /**
     *  Encapsulates all audio states during a call.
     *  @hide
     */
    interface IConference {
        GetPhoneAccountHandle(
            [out] IPhoneAccountHandle** res);

        GetConnections(
            [out] IList** res);

        GetState(
            [out] Int32* res);

        GetCapabilities(
            [out] Int32* res);

        GetAudioState(
            [out] IAudioState** res);

        OnDisconnect();

        OnSeparate(
            [in] IConnection* connection);

        OnMerge(
            [in] IConnection* connection);

        OnHold();

        OnUnhold();

        OnMerge();

        OnSwap();

        OnPlayDtmfTone(
            [in] Char32 c);

        OnStopDtmfTone();

        OnAudioStateChanged(
            [in] IAudioState* state);

        SetOnHold();

        SetActive();

        SetDisconnected(
            [in] IDisconnectCause* disconnectCause);

        SetCapabilities(
            [in] Int32 capabilities);

        AddConnection(
            [in] IConnection* connection,
            [out] Boolean* res);

        RemoveConnection(
            [in] IConnection* connection);

        SetConferenceableConnections(
            [in] IList* conferenceableConnections);

        GetConferenceableConnections(
            [out] IList** res);

        Destroy();

        AddListener(
            [in] IConferenceListener* listener);

        RemoveListener(
            [in] IConferenceListener* listener);

        SetAudioState(
            [in] IAudioState* state);
    }

    } // namespace Telecom
    } // namespace Droid
    } // namespace Elastos
}
