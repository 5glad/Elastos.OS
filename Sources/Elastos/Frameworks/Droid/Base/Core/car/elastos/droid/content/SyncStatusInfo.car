//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Content {

    /**
     * @Involve
     * interface IParcelable;
     */
    [deprecated]
    interface ISyncStatusInfo {
        GetAuthorityId(
            [out] Int32* authorityId);

        GetTotalElapsedTime(
            [out] Int64* totalElapsedTime);

        SetTotalElapsedTime(
            [in] Int64 totalElapsedTime);

        GetNumSyncs(
            [out] Int32* numSyncs);

        SetNumSyncs(
            [in] Int32 numSyncs);

        GetNumSourcePoll(
            [out] Int32* numSourcePoll);

        SetNumSourcePoll(
            [in] Int32 numSourcePoll);

        GetNumSourceServer(
            [out] Int32* numSourceServer);

        SetNumSourceServer(
            [in] Int32 numSourceServer);

        GetNumSourceLocal(
            [out] Int32* numSourceLocal);

        SetNumSourceLocal(
            [in] Int32 numSourceLocal);

        GetNumSourceUser(
            [out] Int32* numSourceUser);

        SetNumSourceUser(
            [in] Int32 numSourceUser);

        GetNumSourcePeriodic(
            [out] Int32* numSourcePeriodic);

        SetNumSourcePeriodic(
            [in] Int32 numSourcePeriodic);

        GetLastSuccessTime(
            [out] Int64* lastSuccessTime);

        SetLastSuccessTime(
            [in] Int64 lastSuccessTime);

        GetLastSuccessSource(
            [out] Int32* lastSuccessSource);

        SetLastSuccessSource(
            [in] Int32 lastSuccessSource);

        GetLastFailureTime(
            [out] Int64* lastFailureTime);

        SetLastFailureTime(
            [in] Int64 lastFailureTime);

        GetLastFailureSource(
            [out] Int32* lastFailureSource);

        SetLastFailureSource(
            [in] Int32 lastFailureSource);

        GetLastFailureMesg(
            [out] String* lastFailureMesg);

        SetLastFailureMesg(
            [in] String lastFailureMesg);

        GetInitialFailureTime(
            [out] Int64* initialFailureTime);

        SetInitialFailureTime(
            [in] Int64 initialFailureTime);

        GetPending(
            [out] Boolean* pending);

        SetPending(
            [in] Boolean pending);

        GetInitialize(
            [out] Boolean* initialize);

        SetInitialize(
            [in] Boolean initialize);

        GetLastFailureMesgAsInt(
            [in] Int32 def,
            [out] Int32* msg);

        SetPeriodicSyncTime(
            [in] Int32 index,
            [in] Int64 when);

        GetPeriodicSyncTime(
            [in] Int32 index,
            [out] Int64* time);

        RemovePeriodicSyncTime(
            [in] Int32 index);
    }

    } // namespace Content
    } // namespace Droid
    } // namespace Elastos
}