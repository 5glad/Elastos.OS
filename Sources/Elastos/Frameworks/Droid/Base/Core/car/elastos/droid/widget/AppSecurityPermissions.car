//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.Pm.IPackageInfo;
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.Content.IContext;
    using interface Elastos.Core.ICharSequence;

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    /**
     * @Involve
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     * extends Elastos.Droid.View.ILinearLayout
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    interface IPermissionItemView {
    }

    /**
     * This class contains the SecurityPermissions view implementation.
     * Initially the package's advanced or dangerous security permissions
     * are displayed under categorized
     * groups. Clicking on the additional permissions presents
     * extended information consisting of all groups and permissions.
     * To use this view define a LinearLayout or any ViewGroup and add this
     * view by instantiating AppSecurityPermissions and invoking getPermissionsView.
     *
     * {@hide}
     */
    [local]
    interface IAppSecurityPermissions {
        const Int32 WHICH_PERSONAL = 1 << 0;
        const Int32 WHICH_DEVICE = 1 << 1;
        const Int32 WHICH_NEW = 1 << 2;
        const Int32 WHICH_ALL = 0xffff;

        GetPermissionCount(
            [out] Int32* count);

        GetPermissionCount(
            [in] Int32 which,
            [out] Int32* count);

        GetPermissionsView(
            [out] IView** view);

        GetPermissionsViewWithRevokeButtons(
            [out] IView** view);

        GetPermissionsView(
            [in] Int32 which,
            [out] IView** view);
    }

    [local]
    interface IAppSecurityPermissionsHelper {
        /**
         * Utility to retrieve a view displaying a single permission.  This provides
         * the old UI layout for permissions; it is only here for the device admin
         * settings to continue to use.
         */
        GetPermissionItemView(
            [in] IContext* ctx,
            [in] ICharSequence* grpName,
            [in] ICharSequence* description,
            [in] Boolean dangerous,
            [out] IView** v);
    }

    }// namespace Widget
    }// namespace Droid
    }// namespace Elastos

}
