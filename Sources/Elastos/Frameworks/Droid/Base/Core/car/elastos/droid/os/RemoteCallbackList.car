//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Os {

    interface IRemoteCallbackList {
        Register(
            [in] IInterface* cb,
            [out] Boolean* result);

        Register(
            [in] IInterface* cb,
            [in] IInterface* cookie,
            [out] Boolean* result);

        Unregister(
            [in] IInterface* cb,
            [out] Boolean* result);

        Kill();

        OnCallbackDied(
            [in] IInterface* cb);

        OnCallbackDied(
            [in] IInterface* cb,
            [in] IInterface* cookie);

        BeginBroadcast(
            [out] Int32* number);

        GetBroadcastItem(
            [in] Int32 index,
            [out] IInterface** cb);

        GetBroadcastCookie(
            [in] Int32 index,
            [out] IInterface** cookie);

        FinishBroadcast();

         /**
         * Returns the number of registered callbacks. Note that the number of registered
         * callbacks may differ from the value returned by {@link #beginBroadcast()} since
         * the former returns the number of callbacks registered at the time of the call
         * and the second the number of callback to which the broadcast will be delivered.
         * <p>
         * This function is useful to decide whether to schedule a broadcast if this
         * requires doing some work which otherwise would not be performed.
         * </p>
         *
         * @return The size.
         */
        GetRegisteredCallbackCount(
            [out] Int32* count);
    }

    } // namespace Os
    } // namespace Droid
    } // namespace Elastos
}
