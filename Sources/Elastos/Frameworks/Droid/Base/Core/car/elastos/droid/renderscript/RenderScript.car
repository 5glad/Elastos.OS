//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    using interface Elastos.IO.IFile;

    interface Elastos.Droid.Content.IContext;

    namespace Elastos {
    namespace Droid {
    namespace Renderscript {

    enum RenderScriptContextType {
        RenderScriptContextType_NORMAL,
        RenderScriptContextType_DEBUG,
        RenderScriptContextType_PROFILE,
    }

    /**
     * RenderScript worker thread priority enumeration.  The default value is
     * NORMAL.  Applications wishing to do background processing should set
     * their priority to LOW to avoid starving forground processes.
     */
    enum RenderScriptPriority {
        RenderScriptPriority_LOW = 15, // (Process.THREAD_PRIORITY_BACKGROUND + (5 * Process.THREAD_PRIORITY_LESS_FAVORABLE)),
        RenderScriptPriority_NORMAL = -4, // (Process.THREAD_PRIORITY_DISPLAY);
    }

    /**
     * This class provides access to a RenderScript context, which controls RenderScript
     * initialization, resource management, and teardown. An instance of the RenderScript
     * class must be created before any other RS objects can be created.
     *
     * <div class="special reference">
     * <h3>Developer Guides</h3>
     * <p>For more information about creating an application that uses RenderScript, read the
     * <a href="{@docRoot}guide/topics/renderscript/index.html">RenderScript</a> developer guide.</p>
     * </div>
     **/
    interface IRenderScript {

        /*
         * Context creation flag that specifies a normal context.
        */
        const Int32 CREATE_FLAG_NONE = 0x0000;

        /*
         * Context creation flag which specifies a context optimized for low
         * latency over peak performance. This is a hint and may have no effect
         * on some implementations.
        */
        const Int32 CREATE_FLAG_LOW_LATENCY = 0x0002;

        /*
         * Context creation flag which specifies a context optimized for long
         * battery life over peak performance. This is a hint and may have no effect
         * on some implementations.
        */
        const Int32 CREATE_FLAG_LOW_POWER = 0x0004;

        /**
         * Change the priority of the worker threads for this context.
         *
         * @param p New priority to be set.
         */
        SetPriority(
            [in] RenderScriptPriority p);

        /**
         * Gets the application context associated with the RenderScript context.
         *
         * @return The application context.
         */
        GetApplicationContext(
            [out] IContext** ctx);

        /**
         * Print the currently available debugging information about the state of
         * the RS context to the log.
         *
         */
        ContextDump();

        /**
         * Wait for any pending asynchronous opeations (such as copies to a RS
         * allocation or RS script executions) to complete.
         *
         */
        Finish();

        /**
         * Destroys this RenderScript context.  Once this function is called,
         * using this context or any objects belonging to this context is
         * illegal.
         *
         */
        Destroy();

    }

    interface IRenderScriptHelper {

        /**
         * Returns an identifier that can be used to identify a particular
         * minor version of RS.
         *
         * @hide
         */
        GetMinorID(
            [out] Int64* id);

         /**
         * Sets the directory to use as a persistent storage for the
         * renderscript object file cache.
         *
         * @hide
         * @param cacheDir A directory the current process can write to
         */
        SetupDiskCache(
            [in] IFile* cacheDir);

        /**
         * @hide
         */
        Create(
            [in] IContext* ctx,
            [in] Int32 sdkVersion,
            [out] IRenderScript** rs);

        /**
         * Create a RenderScript context.
         *
         * @hide
         * @param ctx The context.
         * @return RenderScript
         */
        Create(
            [in] IContext* ctx,
            [in] Int32 sdkVersion,
            [in] RenderScriptContextType ct,
            [in] Int32 flags,
            [out] IRenderScript** rs);

        /**
         * Create a RenderScript context.
         *
         * @param ctx The context.
         * @return RenderScript
         */
        Create(
            [in] IContext* ctx,
            [out] IRenderScript** rs);

        /**
         * Create a RenderScript context.
         *
         *
         * @param ctx The context.
         * @param ct The type of context to be created.
         * @return RenderScript
         */
        Create(
            [in] IContext* ctx,
            [in] RenderScriptContextType ct,
            [out] IRenderScript** rs);

         /**
         * Create a RenderScript context.
         *
         *
         * @param ctx The context.
         * @param ct The type of context to be created.
         * @param flags The OR of the CREATE_FLAG_* options desired
         * @return RenderScript
         */
        Create(
            [in] IContext* ctx,
            [in] RenderScriptContextType ct,
            [in] Int32 flags,
            [out] IRenderScript** rs);

    }

    } // namespace Renderscript
    } // namepsace Droid
    } // namespace Elastos
}
