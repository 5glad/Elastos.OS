//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Os.IParcelFileDescriptor;
    interface Elastos.Droid.Bluetooth.IBluetoothDevice;
    interface Elastos.Droid.Bluetooth.IBluetoothHealthAppConfiguration;
    interface Elastos.Droid.Bluetooth.IIBluetoothHealthCallback;

    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Bluetooth {

    /**
     * API for Bluetooth Health service
     *
     * {@hide}
     */
    [deprecated]
    interface IIBluetoothHealth {
        RegisterAppConfiguration(
            [in] IBluetoothHealthAppConfiguration* config,
            [in] IIBluetoothHealthCallback* healthCallback,
            [out] Boolean* result);

        UnregisterAppConfiguration(
            [in] IBluetoothHealthAppConfiguration* config,
            [out] Boolean* result);

        ConnectChannelToSource(
            [in] IBluetoothDevice* device,
            [in] IBluetoothHealthAppConfiguration* config,
            [out] Boolean* result);

        ConnectChannelToSink(
            [in] IBluetoothDevice* device,
            [in] IBluetoothHealthAppConfiguration* config,
            [in] Int32 channelType,
            [out] Boolean* result);

        DisconnectChannel(
            [in] IBluetoothDevice* device,
            [in] IBluetoothHealthAppConfiguration* config,
            [in] Int32 id,
            [out] Boolean* result);

        GetMainChannelFd(
            [in] IBluetoothDevice* device,
            [in] IBluetoothHealthAppConfiguration* config,
            [out] IParcelFileDescriptor** fd);

        // Mike TODO: wait for List car interface
        GetConnectedHealthDevices(
            [in] IList** devices);

        GetHealthDevicesMatchingConnectionStates(
            [in] ArrayOf<Int32>* states,
            [in] IList** devices);

        GetHealthDeviceConnectionState(
            [in] IBluetoothDevice* device,
            [out] Int32* state);
    }

    } // Bluetooth
    } // Droid
    } // Elastos
}