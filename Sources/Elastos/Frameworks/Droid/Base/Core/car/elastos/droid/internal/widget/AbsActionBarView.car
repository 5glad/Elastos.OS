//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.View.IViewGroup;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Widget {

    /**
     * @Involve
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    [local]
    interface IAbsActionBarView {
        /**
         * Sets whether the bar should be split right now, no questions asked.
         * @param split true if the bar should split
         */
        SetSplitToolbar(
            [in] Boolean split);

        /**
         * Sets whether the bar should split if we enter a narrow screen configuration.
         * @param splitWhenNarrow true if the bar should check to split after a config change
         */
        SetSplitWhenNarrow(
            [in] Boolean splitWhenNarrow);

        SetContentHeight(
            [in] Int32 height);

        GetContentHeight(
            [out] Int32* height);

        SetSplitView(
            [in] IViewGroup* splitView);

        GetAnimatedVisibility(
            [out] Int32* visible);

        AnimateToVisibility(
            [in] Int32 visibility);

        ShowOverflowMenu(
            [out] Boolean* menu);

        PostShowOverflowMenu();

        HideOverflowMenu(
            [out] Boolean* menu);

        IsOverflowMenuShowing(
            [out] Boolean* showing);

        IsOverflowMenuShowPending(
            [out] Boolean* isOverflowMenuShowPending);

        IsOverflowReserved(
            [out] Boolean* reserved);

        CanShowOverflowMenu(
            [out] Boolean* canShowOverflowMenu);

        DismissPopupMenus();
    }

    } // namespace Widget
    } // namespace Internal
    } // namespace Droid
    } // namespace Elastos
}
