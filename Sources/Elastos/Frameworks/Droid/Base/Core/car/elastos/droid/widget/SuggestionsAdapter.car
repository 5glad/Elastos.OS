//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    namespace Elastos {
    namespace Droid {
    namespace Widget {

    /**
     * Provides the contents for the suggestion drop-down list.in {@link SearchDialog}.
     *
     * @hide
     */
    /**
     * @Involve
     * extends Elastos.Droid.Widget.IBaseAdapter
     * extends Elastos.Droid.Widget.ICursorAdapter
     * extends Elastos.Droid.Widget.IResourceCursorAdapter
     *
     * interface Elastos.Droid.Widget.IListAdapter
     * interface Elastos.Droid.Widget.ISpinnerAdapter
     * interface Elastos.Droid.Widget.IAdapter
     * interface Elastos.Droid.Widget.IFilterable
     * interface Elastos.Droid.Widget.ICursorFilterClient
     */
    interface ISuggestionsAdapter {
        const Int32 REFINE_NONE = 0;
        const Int32 REFINE_BY_ENTRY = 1;
        const Int32 REFINE_ALL = 2;


        /**
         * Enables query refinement for all suggestions. This means that an additional icon
         * will be shown for each entry. When clicked, the suggested text on that line will be
         * copied to the query text field.
         * <p>
         *
         * @param refine which queries to refine. Possible values are {@link #REFINE_NONE},
         * {@link #REFINE_BY_ENTRY}, and {@link #REFINE_ALL}.
         */
        SetQueryRefinement(
            [in] Int32 refineWhat);

        /**
         * Returns the current query refinement preference.
         * @return value of query refinement preference
         */
        GetQueryRefinement(
            [out] Int32* value);

        Close();


    }

    } // namespace Widget
    } // namespace Droid
    } // namespace Elastos
}
