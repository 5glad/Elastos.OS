//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Org.Xmlpull.V1.IXmlPullParser;
    using interface Org.Xmlpull.V1.IXmlSerializer;

    namespace Elastos {
    namespace Droid {
    namespace Os {

    /**
     * @Involve
     * interface IBaseBundle;
     * interface ICloneable;
     * interface IParcelable
     * interface IXmlUtilsWriteMapCallback;
     */
    [deprecated]
    interface IPersistableBundle {
        PutPersistableBundle(
            [in] String key,
            [in] IPersistableBundle* value);

        GetPersistableBundle(
            [in] String key,
            [out] IPersistableBundle** value);

        SaveToXml(
            [in] IXmlSerializer* outXml);
    }

    interface IPersistableBundleHelper {
        GetEMPTY(
            [out] IPersistableBundle** bundle);

        /**
         * Make a PersistableBundle for a single key/value pair.
         *
         * @hide
         */
        ForPair(
            [in] String key,
            [in] String value,
            [out] IPersistableBundle** pb);

        /** @hide */
        RestoreFromXml(
            [in] IXmlPullParser* inParser,
            [out] IPersistableBundle** pb);
    }


    } // namespace Os
    } // namespace Droid
    } // namespace Elastos

} // module
