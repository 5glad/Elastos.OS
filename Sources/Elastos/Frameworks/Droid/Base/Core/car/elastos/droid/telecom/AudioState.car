//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Telecom {

    /**
     *  Encapsulates all audio states during a call.
     *  @hide
     *
     * @Involve
     * interface IParcelable
     */
    interface IAudioState {

        /** Direct the audio stream through the device's earpiece. */
        const Int32 ROUTE_EARPIECE      = 0x00000001;

        /** Direct the audio stream through Bluetooth. */
        const Int32 ROUTE_BLUETOOTH     = 0x00000002;

        /** Direct the audio stream through a wired headset. */
        const Int32 ROUTE_WIRED_HEADSET = 0x00000004;

        /** Direct the audio stream through the device's speakerphone. */
        const Int32 ROUTE_SPEAKER       = 0x00000008;

        /**
         * Direct the audio stream through the device's earpiece or wired headset if one is
         * connected.
         */
        const Int32 ROUTE_WIRED_OR_EARPIECE = ROUTE_EARPIECE | ROUTE_WIRED_HEADSET;

        /** Bit mask of all possible audio routes.
         *
         * @hide
         */
        const Int32 ROUTE_ALL = ROUTE_EARPIECE | ROUTE_BLUETOOTH | ROUTE_WIRED_HEADSET |
                ROUTE_SPEAKER;

        /** True if the call is muted, false otherwise. */
        GetIsMuted(
            [out] Boolean* result);

        /** The route to use for the audio stream. */
        GetRoute(
            [out] Int32* result);

        /** Bit vector of all routes supported by this call. */
        GetSupportedRouteMask(
            [out] Int32* result);
    }

    interface IAudioStateHelper {
        AudioRouteToString(
            [in] Int32 route,
            [out] String* result);
    }

    } // namespace Telecom
    } // namespace Droid
    } // namespace Elastos
}
