
module
{
    interface Elastos.Droid.Net.IUri;

    namespace Elastos {
    namespace Droid {
    namespace Google {
    namespace Mms {
    namespace Pdu {

    [deprecated]
    interface IPduPart {
        /**
         * Well-Known Parameters.
         */
        const Int32 P_Q                  = 0x80;
        const Int32 P_CHARSET            = 0x81;
        const Int32 P_LEVEL              = 0x82;
        const Int32 P_TYPE               = 0x83;
        const Int32 P_DEP_NAME           = 0x85;
        const Int32 P_DEP_FILENAME       = 0x86;
        const Int32 P_DIFFERENCES        = 0x87;
        const Int32 P_PADDING            = 0x88;
        // This value of "TYPE" s used with Content-Type: multipart/related
        const Int32 P_CT_MR_TYPE         = 0x89;
        const Int32 P_DEP_START          = 0x8A;
        const Int32 P_DEP_START_INFO     = 0x8B;
        const Int32 P_DEP_COMMENT        = 0x8C;
        const Int32 P_DEP_DOMAIN         = 0x8D;
        const Int32 P_MAX_AGE            = 0x8E;
        const Int32 P_DEP_PATH           = 0x8F;
        const Int32 P_SECURE             = 0x90;
        const Int32 P_SEC                = 0x91;
        const Int32 P_MAC                = 0x92;
        const Int32 P_CREATION_DATE      = 0x93;
        const Int32 P_MODIFICATION_DATE  = 0x94;
        const Int32 P_READ_DATE          = 0x95;
        const Int32 P_SIZE               = 0x96;
        const Int32 P_NAME               = 0x97;
        const Int32 P_FILENAME           = 0x98;
        const Int32 P_START              = 0x99;
        const Int32 P_START_INFO         = 0x9A;
        const Int32 P_COMMENT            = 0x9B;
        const Int32 P_DOMAIN             = 0x9C;
        const Int32 P_PATH               = 0x9D;

        /**
         *  Header field names.
         */
        const Int32 P_CONTENT_TYPE       = 0x91;
        const Int32 P_CONTENT_LOCATION   = 0x8E;
        const Int32 P_CONTENT_ID         = 0xC0;
        const Int32 P_DEP_CONTENT_DISPOSITION = 0xAE;
        const Int32 P_CONTENT_DISPOSITION = 0xC5;
        // The next header is unassigned header, use reserved header(0x48) value.
        const Int32 P_CONTENT_TRANSFER_ENCODING = 0xC8;

        /**
         * Content=Transfer-Encoding string.
         */
        const String CONTENT_TRANSFER_ENCODING =
                "Content-Transfer-Encoding";

        /**
         * Value of Content-Transfer-Encoding.
         */
        const String P_BINARY = "binary";
        const String P_7BIT = "7bit";
        const String P_8BIT = "8bit";
        const String P_BASE64 = "base64";
        const String P_QUOTED_PRINTABLE = "quoted-printable";

        /**
         * Content-Disposition value.
         */
        const Int32 P_DISPOSITION_FROM_DATA  = 0x80;
        const Int32 P_DISPOSITION_ATTACHMENT = 0x81;
        const Int32 P_DISPOSITION_INLINE     = 0x82;

        /**
         * Set part data. The data are stored as byte array.
         *
         * @param data the data
         */
        SetData(
            [in] ArrayOf<Byte>* data);

        GetData(
            [out, callee] ArrayOf<Byte>* result);

        GetDataLength(
            [out] Int32* result);

        SetDataUri(
            [in] IUri* uri);

        GetDataUri(
            [out] IUri** result);

        /**
         * Set Content-id value
         *
         * @param contentId the content-id value
         * @throws NullPointerException if the value is null.
         */
        SetContentId(
            [in] ArrayOf<Byte>* contentId);

        GetContentId(
            [out, callee] ArrayOf<Byte>* result);

        SetCharset(
            [in] Int32 charset);

        GetCharset(
            [out] Int32* result);

        /**
         * Set Content-Location value.
         *
         * @param contentLocation the value
         * @throws NullPointerException if the value is null.
         */
        SetContentLocation(
            [in] ArrayOf<Byte>* contentLocation);

        GetContentLocation(
            [out, callee] ArrayOf<Byte>* result);

        /**
         * Set Content-Disposition value.
         * Use PduPart.disposition[0] instead of <Octet 128> (Form-data).
         * Use PduPart.disposition[1] instead of <Octet 129> (Attachment).
         * Use PduPart.disposition[2] instead of <Octet 130> (Inline).
         *
         * @param contentDisposition the value
         * @throws NullPointerException if the value is null.
         */
        SetContentDisposition(
            [in] ArrayOf<Byte>* contentDisposition);

        GetContentDisposition(
            [out, callee] ArrayOf<Byte>* result);

        /**
         *  Set Content-Type value.
         *
         *  @param value the value
         *  @throws NullPointerException if the value is null.
         */
        SetContentType(
            [in] ArrayOf<Byte>* contentType);

        GetContentType(
            [out, callee] ArrayOf<Byte>* result);

        /**
         * Set Content-Transfer-Encoding value
         *
         * @param contentId the content-id value
         * @throws NullPointerException if the value is null.
         */
        SetContentTransferEncoding(
            [in] ArrayOf<Byte>* contentTransferEncoding);

        GetContentTransferEncoding(
            [out, callee] ArrayOf<Byte>* result);

        /**
         * Set Content-type parameter: name.
         *
         * @param name the name value
         * @throws NullPointerException if the value is null.
         */
        SetName(
            [in] ArrayOf<Byte>* name);

        GetName(
            [out, callee] ArrayOf<Byte>* result);

        /**
         * Get Content-disposition parameter: filename
         *
         * @param fileName the filename value
         * @throws NullPointerException if the value is null.
         */
        SetFilename(
            [in] ArrayOf<Byte>* fileName);

        GetFilename(
            [out, callee] ArrayOf<Byte>* result);

        GenerateLocation(
            [out] String* result);

    }

    }//Pdu
    }//Mms
    }//Google
    }//Droid
    }//Elastos

}
