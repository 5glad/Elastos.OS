
module
{
    interface Elastos.Droid.Internal.Telephony.Cat.ICatResponseMessage;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace Cat {

    /*
     * Enumeration for representing "Type of Command" of proactive commands.
     * Those are the only commands which are supported by the Telephony. Any app
     * implementation should support those.
     * Refer to ETSI TS 102.223 section 9.4
     */
    enum CommandType {
        DISPLAY_TEXT = 0x21,
        GET_INKEY = 0x22,
        GET_INPUT = 0x23,
        LAUNCH_BROWSER = 0x15,
        PLAY_TONE = 0x20,
        REFRESH = 0x01,
        SELECT_ITEM = 0x24,
        SEND_SS = 0x11,
        SEND_USSD = 0x12,
        SEND_SMS = 0x13,
        SEND_DTMF = 0x14,
        SET_UP_EVENT_LIST = 0x05,
        SET_UP_IDLE_MODE_TEXT = 0x28,
        SET_UP_MENU = 0x25,
        SET_UP_CALL = 0x10,
        PROVIDE_LOCAL_INFORMATION = 0x26,
        OPEN_CHANNEL = 0x40,
        CLOSE_CHANNEL = 0x41,
        RECEIVE_DATA = 0x42,
        SEND_DATA = 0x43,
        GET_CHANNEL_STATUS = 0x44,
        ACTIVATE = 0x70

        // private int mValue;

        // CommandType(int value) {
        //     mValue = value;
        // }

        // public int value();

        /**
         * Create a CommandType object.
         *
         * @param value Integer value to be converted to a CommandType object.
         * @return CommandType object whose "Type of Command" value is {@code
         *         value}. If no CommandType object has that value, null is
         *         returned.
         */
        // public static CommandType fromInt(int value);
    }

    /**
     * Interface for communication between STK App and CAT Telephony
     *
     * {@hide}
     */
    interface IAppInterface {

        /*
         * Intent's actions which are broadcasted by the Telephony once a new CAT
         * proactive command, session end, ALPHA during STK CC arrive.
         */
        const String CAT_CMD_ACTION =
                                        "android.intent.action.stk.command";
        const String CAT_SESSION_END_ACTION =
                                        "android.intent.action.stk.session_end";
        const String CAT_ALPHA_NOTIFY_ACTION =
                                        "org.codeaurora.intent.action.stk.alpha_notify";

        //This is used to send ALPHA string from card to STK App.
        const String ALPHA_STRING = "alpha_string";

        // This is used to send refresh-result when MSG_ID_ICC_REFRESH is received.
        const String REFRESH_RESULT = "refresh_result";
        //This is used to send card status from card to STK App.
        const String CARD_STATUS = "card_status";
        //Intent's actions are broadcasted by Telephony once IccRefresh occurs.
        const String CAT_ICC_STATUS_CHANGE =
                                        "android.intent.action.stk.icc_status_change";

        // Permission required by STK command receiver
        const String STK_PERMISSION = "android.permission.RECEIVE_STK_COMMANDS";

        /*
         * This is broadcast from the ActivityManagerService when the screen
         * switches to idle or busy state
         */
        const String CAT_IDLE_SCREEN_ACTION =
                                        "org.codeaurora.intent.action.stk.idle_screen";

        /*
         * This is broadcast from the Stk Apps to ActivityManagerService when the screen
         * status is requested.
         */
        const String CHECK_SCREEN_IDLE_ACTION =
                                        "org.codeaurora.intent.action.stk.check_screen_idle";

        /*
         * Intent action broadcasted by StkAppService when the ACTIVATE proactive command
         * arrives.
         */
        const String CAT_ACTIVATE_NOTIFY_ACTION =
                                        "org.codeaurora.intent.action.stk.activate_notify";
        /*
         * Intent action broadcasted by NfcService when the HCI Connectivity event occurs.
         */
        const String CAT_HCI_CONNECTIVITY_ACTION =
                                        "org.codeaurora.intent.action.stk.hci_connectivity";

        /*
         * Callback function from app to telephony to pass a result code and user's
         * input back to the ICC.
         */
        OnCmdResponse(
            [in] ICatResponseMessage* resMsg);
    }

    }//Cat
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
