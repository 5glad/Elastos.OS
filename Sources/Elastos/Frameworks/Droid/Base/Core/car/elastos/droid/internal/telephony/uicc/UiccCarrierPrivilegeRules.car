//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.IIntent;
    interface Elastos.Droid.Content.Pm.IPackageManager;
    interface Elastos.Droid.Content.Pm.ISignature;

    using interface Elastos.Utility.IList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace Uicc {

    /**
     * interface IHandler
     */
    [local]
    interface IUiccCarrierPrivilegeRules {
        AreCarrierPriviligeRulesLoaded(
            [out] Boolean* result);

        GetCarrierPrivilegeStatus(
            [in] ISignature* signature,
            [in] String packageName,
            [out] Int32* result);

        GetCarrierPrivilegeStatus(
            [in] IPackageManager* packageManager,
            [in] String packageName,
            [out] Int32* result);

        GetCarrierPrivilegeStatusForCurrentTransaction(
            [in] IPackageManager* packageManager,
            [out] Int32* result);

        /**
         * Returns the package name of the carrier app that should handle the input intent.
         *
         * @param packageManager PackageManager for getting receivers.
         * @param intent Intent that will be sent.
         * @return list of carrier app package names that can handle the intent.
         *         Returns null if there is an error and an empty list if there
         *         are no matching packages.
         */
        GetCarrierPackageNamesForIntent(
            [in] IPackageManager* packageManager,
            [in] IIntent* intent,
            [out] IList** result);

    }

    }//Uicc
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
