//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Os.IBundle;
    interface Elastos.Droid.App.IPendingIntent;
    interface Elastos.Droid.View.IKeyEvent;
    interface Elastos.Droid.Content.IComponentName;
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Media.IMediaMetadata;

    namespace Elastos {
    namespace Droid {
    namespace Media {
    namespace Session {

    /**
     * Helper for connecting existing APIs up to the new session APIs. This can be
     * used by RCC, AudioFocus, etc. to create a single session that translates to
     * all those components.
     *
     * @hide
     */
    [local]
    interface IMediaSessionLegacyHelper {

        GetSession(
            [in] IPendingIntent * pi,
            [out] IMediaSession ** reseult);

        SendMediaButtonEvent(
            [in] IKeyEvent * keyEvent,
            [in] Boolean needWakeLock);

        SendVolumeKeyEvent(
            [in] IKeyEvent * keyEvent,
            [in] Boolean musicOnly);

        SendAdjustVolumeBy(
            [in] Int32 suggestedStream,
            [in] Int32 delta,
            [in] Int32 flags);

        IsGlobalPriorityActive(
            [out] Boolean * result);

        AddRccListener(
            [in] IPendingIntent * pi,
            [in] IMediaSessionCallback * listener);

        RemoveRccListener(
            [in] IPendingIntent * pi);

        AddMediaButtonListener(
            [in] IPendingIntent * pi,
            [in] IComponentName * mbrComponent,
            [in] IContext * context);

        RemoveMediaButtonListener(
            [in] IPendingIntent * pi);
    }

    [local]
    interface IMediaSessionLegacyHelperHelper {
        GetHelper(
            [in] IContext * context,
            [out] IMediaSessionLegacyHelper ** result);

        GetOldMetadata(
            [in] IMediaMetadata * metadata,
            [in] Int32 artworkWidth,
            [in] Int32 artworkHeight,
            [out] IBundle ** result);

    }
    } // namespace Session
    } // namespace media
    } // namepsace Droid
    } // namespace Elastos
}
