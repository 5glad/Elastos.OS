module
{
    merge("keystore/security/ElastosKeyPairGenerator.car");
    merge("keystore/security/ElastosKeyStore.car");
    merge("keystore/security/ElastosKeyStoreProvider.car");
    merge("keystore/security/Credentials.car");
    merge("keystore/security/IKeyChainAliasCallback.car");
    merge("keystore/security/IKeyChainService.car");
    merge("keystore/security/KeyChainAliasCallback.car");
    merge("keystore/security/KeyChain.car");
    merge("keystore/security/KeyPairGeneratorSpec.car");
    merge("keystore/security/KeyStore.car");
    merge("keystore/security/KeyStoreParameter.car");
    merge("keystore/security/SystemKeyStore.car");

    using interface Elastosx.Security.Auth.X500.IX500Principal;
    using interface Elastos.Security.IProvider;
    using interface Elastos.Security.IKeyStoreProtectionParameter;
    using interface Elastos.Security.IKeyStoreSpi;
    using interface Elastos.Security.IKeyPairGeneratorSpi;
    using interface Elastos.Security.Spec.IAlgorithmParameterSpec;
    using interface Elastos.Math.IBigInteger;
    using interface Elastos.Utility.IProperties;
    using interface Elastos.Utility.IDate;

    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Security.IIKeystoreService;

    namespace Elastos {
    namespace Droid {
    namespace KeyStore {
    namespace Security {

    class CCredentials {
        constructor();

        interface ICredentials;
    }

    singleton class CCredentialsHelper {
        interface ICredentialsHelper;
    }

    class CElastosKeyPairGenerator {
        constructor();

        interface IKeyPairGeneratorSpi;
        interface IElastosKeyPairGenerator;
    }

    class CElastosKeyStore {
        constructor();

        interface IElastosKeyStore;
        interface IKeyStoreSpi;
    }

    class CElastosKeyStoreProvider {
        constructor();

        interface IElastosKeyStoreProvider;
        interface IProvider;
        interface IProperties;
    }

    singleton class CKeyChain {
        interface IKeyChain;
    }

    [local]
    class CKeyPairGeneratorSpec {
        constructor(
            [in] IContext* ctx,
            [in] String keyStoreAlias,
            [in] String keyType,
            [in] Int32 keySize,
            [in] IAlgorithmParameterSpec* spec,
            [in] IX500Principal* subjectDN,
            [in] IBigInteger* serialNumber,
            [in] IDate* startDate,
            [in] IDate* endDate,
            [in] Int32 flags);

        interface IKeyPairGeneratorSpec;
        interface IAlgorithmParameterSpec;
    }

    [local]
    class CKeyPairGeneratorSpecBuilder {
        constructor(
            [in] IContext* ctx);

        interface IKeyPairGeneratorSpecBuilder;
    }

    class CKeyStore {
        constructor(
            [in] IIKeystoreService* binder);

        interface IKeyStore;
    }

    singleton class CKeyStoreHelper {
        interface IKeyStoreHelper;
    }

    class CKeyStoreParameter {
        constructor(
            [in] Int32 flags);

        interface IKeyStoreParameter;
        interface IKeyStoreProtectionParameter;
    }

    [local]
    class CKeyStoreParameterBuilder {
        constructor(
            [in] IContext* ctx);

        interface IKeyStoreParameterBuilder;
    }

    class CSystemKeyStore {
        constructor();

        interface ISystemKeyStore;
    }

    singleton class CSystemKeyStoreHelper {
        interface ISystemKeyStoreHelper;
    }

    } // Security
    } // KeyStore
    } // Droid
    } // Elastos
}
