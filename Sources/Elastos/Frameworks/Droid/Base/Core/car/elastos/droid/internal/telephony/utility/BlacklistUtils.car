
module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Provider.ISettingsSystem;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace Utility {

    [local]
    interface IBlacklistUtils {
        // Blacklist matching type
        const Int32 MATCH_NONE = 0;
        const Int32 MATCH_PRIVATE = 1;
        const Int32 MATCH_UNKNOWN = 2;
        const Int32 MATCH_LIST = 3;
        const Int32 MATCH_REGEX = 4;

        const Int32 BLOCK_CALLS = 1<<0;//TODO ((ISettingsSystem::BLACKLIST_BLOCK) << (ISettingsSystem::BLACKLIST_PHONE_SHIFT));
        const Int32 BLOCK_MESSAGES = 1<<4;//TODO(ISettingsSystem::BLACKLIST_BLOCK << ISettingsSystem::BLACKLIST_MESSAGE_SHIFT);

        AddOrUpdate(
            [in] IContext* context,
            [in] String number,
            [in] Int32 flags,
            [in] Int32 valid,
            [out] Boolean* result);

        IsListed(
            [in] IContext* context,
            [in] String number,
            [in] Int32 mode,
            [out] Int32* result);

        IsBlacklistEnabled(
            [in] IContext* context,
            [out] Boolean* result);

        IsBlacklistNotifyEnabled(
            [in] IContext* context,
            [out] Boolean* result);

        IsBlacklistPrivateNumberEnabled(
            [in] IContext* context,
            [in] Int32 mode,
            [out] Boolean* result);

        IsBlacklistUnknownNumberEnabled(
            [in] IContext* context,
            [in] Int32 mode,
            [out] Boolean* result);

        IsBlacklistRegexEnabled(
            [in] IContext* context,
            [out] Boolean* result);
    }

    }//Utility
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
