//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Utility.ILocale;
    using interface Elastos.Utility.IList;

    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Widget.IArrayAdapter;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace App {

    interface ILocaleSelectionListener {
        // You can add any argument if you really need it...
        OnLocaleSelected(
            [in] ILocale* locale);
    }

    /**
     * @Involve
     * interface IComparable
     */
    interface ILocaleInfo {
        GetLabel(
            [out] String* label);

        GetLocale(
            [out] ILocale** locale);
    }

    /**
     * @Involve
     * interface Elastos.Droid.Content.IComponentCallbacks
     * interface Elastos.Droid.Content.IComponentCallbacks2
     * interface Elastos.Droid.View.IViewOnCreateContextMenuListener
     * interface Elastos.Droid.App.IFragment
     * interface Elastos.Droid.App.IListFragment
     */
    [local]
    interface ILocalePicker {
        SetLocaleSelectionListener(
            [in] ILocaleSelectionListener* listener);
    }

    [local]
    interface ILocalePickerHelper {
        GetAllAssetLocales(
            [in] IContext* ctx,
            [in] Boolean isInDeveloperMode,
            [out] IList** result);

        /**
         * Constructs an Adapter object containing Locale information. Content is sorted by
         * {@link LocaleInfo#label}.
         */
        ConstructAdapter(
            [in] IContext* ctx,
            [out] IArrayAdapter** result);

        ConstructAdapter(
            [in] IContext* ctx,
            [in] Int32 layoutId,
            [in] Int32 fieldId,
            [out] IArrayAdapter** result);

        /**
         * Requests the system to update the system locale. Note that the system looks halted
         * for a while during the Locale migration, so the caller need to take care of it.
         */
        UpdateLocale(
            [in] ILocale* locale);
    }

    } // namespace App
    } // namespace Internal
    } // namespace Droid
    } // namespace Elastos
}
