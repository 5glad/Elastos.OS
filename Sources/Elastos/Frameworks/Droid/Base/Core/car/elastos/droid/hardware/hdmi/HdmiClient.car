//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Hardware.Hdmi.IHdmiDeviceInfo;
    interface Elastos.Droid.Hardware.Hdmi.IHdmiControlManagerVendorCommandListener;

    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Hdmi {

    /**
     * Parent for classes of various HDMI-CEC device type used to access
     * {@link HdmiControlService}. Contains methods and data used in common.
     *
     * @hide
     */
    //@SystemApi
    [deprecated]
    interface IHdmiClient {
        /**
         * Returns the active source information.
         *
         * @return {@link HdmiDeviceInfo} object that describes the active source
         *         or active routing path
         */
        GetActiveSource(
            [out] IHdmiDeviceInfo** source);

        /**
         * Send a key event to other logical device.
         *
         * @param keyCode key code to send. Defined in {@link android.view.KeyEvent}.
         * @param isPressed true if this is key press event
         */
        SendKeyEvent(
            [in] Int32 keyCode,
            [in] Boolean isPressed);

        /**
         * Send vendor-specific command.
         *
         * @param targetAddress address of the target device
         * @param params vendor-specific parameter. For &lt;Vendor Command With ID&gt; do not
         *               include the first 3 bytes (vendor ID).
         * @param hasVendorId {@code true} if the command type will be &lt;Vendor Command With ID&gt;.
         *                    {@code false} if the command will be &lt;Vendor Command&gt;
         */
        SendVendorCommand(
            [in] Int32 targetAddress,
            [in] ArrayOf<Byte>* params,
            [in] Boolean hasVendorId);

        /**
         * Add a listener used to receive incoming vendor-specific command.
         *
         * @param listener listener object
         */
        AddVendorCommandListener(
            [in] IHdmiControlManagerVendorCommandListener* listener);

        GetDeviceType(
            [out] Int32* type);
    }

    } // namespace Hdmi
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
