//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.AccessibilityService.IIAccessibilityServiceClient;
    interface Elastos.Droid.Graphics.IBitmap;
    interface Elastos.Droid.View.IInputEvent;
    interface Elastos.Droid.View.IWindowContentFrameStats;
    interface Elastos.Droid.View.IWindowAnimationFrameStats;
    interface Elastos.Droid.Os.IParcelFileDescriptor;

    /**
     * This interface contains privileged operations a shell program can perform
     * on behalf of an instrumentation that it runs. These operations require
     * special permissions which the shell user has but the instrumentation does
     * not. Running privileged operations by the shell user on behalf of an
     * instrumentation is needed for running UiTestCases.
     *
     * {@hide}
     */
    namespace Elastos {
    namespace Droid {
    namespace App {

    [local]
    interface IIUiAutomationConnection {
        Connect(
            [in] IIAccessibilityServiceClient* client);

        Disconnect();

        InjectInputEvent(
            [in] IInputEvent* event,
            [in] Boolean sync,
            [out] Boolean* result);

        SetRotation(
            [in] Int32 rotation,
            [out] Boolean* result);

        TakeScreenshot(
            [in] Int32 width,
            [in] Int32 height,
            [out] IBitmap** bitmap);

        Shutdown();

        ClearWindowContentFrameStats(
            [in] Int32 windowId,
            [out] Boolean* result);

        GetWindowContentFrameStats(
            [in] Int32 windowId,
            [out] IWindowContentFrameStats** stats);

        ClearWindowAnimationFrameStats();

        GetWindowAnimationFrameStats(
            [out] IWindowAnimationFrameStats** stats);

        ExecuteShellCommand(
            [in] String command,
            [in] IParcelFileDescriptor* fd);
    }

    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
