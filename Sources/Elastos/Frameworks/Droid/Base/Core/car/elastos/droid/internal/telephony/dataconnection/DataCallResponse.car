//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Net.ILinkProperties;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace DataConnection {

    /**
     * Class returned by onSetupConnectionCompleted.
     */
    enum EnumDataCallResponseSetupResult {
        DataCallResponse_SUCCESS,
        DataCallResponse_ERR_BadCommand,
        DataCallResponse_ERR_UnacceptableParameter,
        DataCallResponse_ERR_GetLastErrorFromRil,
        DataCallResponse_ERR_Stale,
        DataCallResponse_ERR_RilError

        // public DcFailCause mFailCause;

        // SetupResult() {
        //     mFailCause = DcFailCause.fromInt(0);
        // }

        // @Override
        // public String toString() {
        //     return name() + "  SetupResult.mFailCause=" + mFailCause;
        // }
    }

    interface IDataCallResponseSetupResult {
    }

    [deprecated]
    interface IDataCallResponse {
        SetLinkProperties(
            [in] ILinkProperties* linkProperties,
            [in] Boolean okToUseSystemPropertyDns,
            [out] IDataCallResponseSetupResult** result);

        GetVersion(
            [out] Int32* result);

        SetVersion(
            [in] Int32 ver);

        GetStatus(
            [out] Int32* result);

        SetStatus(
            [in] Int32 status);

        GetCid(
            [out] Int32* result);

        SetCid(
            [in] Int32 cid);

        GetActive(
            [out] Int32* result);

        SetActive(
            [in] Int32 active);

        GetType(
            [out] String* result);

        SetType(
            [in] String type);

        GetIfname(
            [out] String* result);

        SetIfname(
            [in] String ifname);

        GetAddresses(
            [out, callee] ArrayOf<String>* result);

        SetAddresses(
            [in] ArrayOf<String>* addresses);

        GetDnses(
            [out, callee] ArrayOf<String>* result);

        SetDnses(
            [in] ArrayOf<String>* dnses);

        GetGateways(
            [out, callee] ArrayOf<String>* result);

        SetGateways(
            [in] ArrayOf<String>* gateways);

        GetSuggestedRetryTime(
            [out] Int32* result);

        SetSuggestedRetryTime(
            [in] Int32 suggestedRetryTime);

        GetPcscf(
            [out, callee] ArrayOf<String>* result);

        SetPcscf(
            [in] ArrayOf<String>* pcscf);

        GetMtu(
            [out] Int32* result);

        SetMtu(
            [in] Int32 mtu);
    }

    }//DataConnection
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
