//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Internal.Telephony.ICommandsInterface;

    using interface Elastos.IO.IByteBuffer;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace Uicc {

    /**
     * interface IHandler
     */
    [local]
    interface IUiccController {
        const Int32 APP_FAM_UNKNOWN =  -1;
        const Int32 APP_FAM_3GPP =  1;
        const Int32 APP_FAM_3GPP2 = 2;
        const Int32 APP_FAM_IMS   = 3;

        GetUiccCard(
            [out] IUiccCard** result);

        GetUiccCard(
            [in] Int32 slotId,
            [out] IUiccCard** result);

        GetUiccCards(
            [out, callee] ArrayOf<IUiccCard*>* result);

        GetUiccCardApplication(
            [in] Int32 family,
            [out] IUiccCardApplication** result);

        GetIccRecords(
            [in] Int32 slotId,
            [in] Int32 family,
            [out] IIccRecords** result);

        GetIccFileHandler(
            [in] Int32 slotId,
            [in] Int32 family,
            [out] IIccFileHandler** result);

        RegisterForIccChanged(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        UnregisterForIccChanged(
            [in] IHandler* h);

        GetUiccCardApplication(
            [in] Int32 slotId,
            [in] Int32 family,
            [out] IUiccCardApplication** result);

    }

    [local, deprecated]
    interface IUiccControllerHelper {
        Make(
            [in] IContext* c,
            [in] ArrayOf<ICommandsInterface*>* ci,
            [out] IUiccController** result);

        GetInstance(
            [out] IUiccController** result);

        GetFamilyFromRadioTechnology(
            [in] Int32 radioTechnology,
            [out] Int32* result);

        ParseOemSimRefresh(
            [in] IByteBuffer* payload,
            [out] IIccRefreshResponse** result);
    }

    }//Uicc
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
