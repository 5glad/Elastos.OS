//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module {

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {

    [deprecated]
    interface IUUSInfo {
        /*
         * User-to-User signaling Info activation types derived from 3GPP 23.087
         * v8.0
         */

        const Int32 UUS_TYPE1_IMPLICIT = 0;

        const Int32 UUS_TYPE1_REQUIRED = 1;

        const Int32 UUS_TYPE1_NOT_REQUIRED = 2;

        const Int32 UUS_TYPE2_REQUIRED = 3;

        const Int32 UUS_TYPE2_NOT_REQUIRED = 4;

        const Int32 UUS_TYPE3_REQUIRED = 5;

        const Int32 UUS_TYPE3_NOT_REQUIRED = 6;

        /*
         * User-to-User Signaling Information data coding schemes. Possible values
         * for Octet 3 (Protocol Discriminator field) in the UUIE. The values have
         * been specified in section 10.5.4.25 of 3GPP TS 24.008
         */

        const Int32 UUS_DCS_USP = 0; /* User specified protocol */

        const Int32 UUS_DCS_OSIHLP = 1; /* OSI higher layer protocol */

        const Int32 UUS_DCS_X244 = 2; /* X.244 */

        const Int32 UUS_DCS_RMCF = 3; /*
                                                   * Reserved for system management
                                                   * convergence function
                                                   */

        const Int32 UUS_DCS_IA5c = 4; /* IA5 characters */

        GetDcs(
            [out] Int32* result);

        SetDcs(
            [in] Int32 uusDcs);

        GetType(
            [out] Int32* result);

        SetType(
            [in] Int32 uusType);

        GetUserData(
            [out, callee] ArrayOf<Byte>* result);

        SetUserData(
            [in] ArrayOf<Byte>* uusData);

    }

    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
