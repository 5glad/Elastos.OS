//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Content {

    /**
     * Value type that represents a SyncAdapterType. This object overrides {@link #equals} and
     * {@link #hashCode}, making it suitable for use as the key of a {@link java.util.Map}
     */
    /**
     * @Involve
     * interface IParcelable;
     */
    interface ISyncAdapterType {
        SetAuthority(
            [in] String authority);

        GetAuthority(
            [out] String* authority);

        SetAccountType(
            [in] String accountType);

        GetAccountType(
            [out] String* accountType);

        SetKey(
            [in] Boolean isKey);

        IsKey(
            [out] Boolean* isKey);

        SupportsUploading(
            [out] Boolean* isSupport);

        IsUserVisible(
            [out] Boolean* isUserVisible);

        /**
         * @return True if this SyncAdapter supports syncing multiple accounts simultaneously.
         * If false then the SyncManager will take care to only start one sync at a time
         * using this SyncAdapter.
         */
        AllowParallelSyncs(
            [out] Boolean* isAllow);

        /**
         * If true then the SyncManager will never issue an initialization sync to the SyncAdapter
         * and will instead automatically call
         * {@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with a
         * value of 1 for each account and provider that this sync adapter supports.
         * @return true if the SyncAdapter does not require initialization and if it is ok for the
         * SyncAdapter to treat it as syncable automatically.
         */
        IsAlwaysSyncable(
            [out] Boolean* isAlways);

        /**
         * @return The activity to use to invoke this SyncAdapter's settings activity.
         * May be null.
         */
        GetSettingsActivity(
            [out] String* settingsActivity);

        Equals(
            [in] IInterface* obj,
            [out] Boolean* isEqual);

        GetHashCode(
            [out] Int32* hashCode);

        ToString(
            [out] String* str);
    }

    interface ISyncAdapterTypeHelper {
        NewKey(
            [in] String authority,
            [in] String accountType,
            [out] ISyncAdapterType** syncAdapterType);
    }

    } // namespace Content
    } // namespace Droid
    } // namespace Elastos
}
