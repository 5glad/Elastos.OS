//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module {

    namespace Elastos {
    namespace Droid {
    namespace Google {
    namespace Mms {
    namespace Pdu {

    /**
     * @Involve
     * interface ICloneable
     */
    [deprecated]
    interface IEncodedStringValue {
        GetCharacterSet(
            [out] Int32* result);

        SetCharacterSet(
            [in] Int32 charset);

        GetTextString(
            [out, callee] ArrayOf<Byte>* result);

        /**
         * Set Text-string value.
         *
         * @param textString the Text-string value
         * @throws NullPointerException if Text-string value is null.
         */
        SetTextString(
            [in] ArrayOf<Byte>* textString);

        GetString(
            [out] String* result);

        /**
         * Append to Text-string.
         *
         * @param textString the textString to append
         * @throws NullPointerException if the text String is null
         *                      or an IOException occured.
         */
        AppendTextString(
            [in] ArrayOf<Byte>* textString);

        /**
         * Split this encoded string around matches of the given pattern.
         *
         * @param pattern the delimiting pattern
         * @return the array of encoded strings computed by splitting this encoded
         *         string around matches of the given pattern
         */
        Split(
            [in] String pattern,
            [out, callee] ArrayOf<IEncodedStringValue*>* result);
    }

    [deprecated]
    interface IEncodedStringValueHelper {
        Extract(
            [in] String src,
            [out, callee] ArrayOf<IEncodedStringValue*>* result);

        /**
         * Concatenate an EncodedStringValue[] into a single String.
         */
        Concat(
            [in] ArrayOf<IEncodedStringValue*>* addr,
            [out] String* result);

        Copy(
            [in] IEncodedStringValue* value,
            [out] IEncodedStringValue** result);

        EncodeStrings(
            [in] ArrayOf<String>* array,
            [out, callee] ArrayOf<IEncodedStringValue*>* result);
    }

    }//Pdu
    }//Mms
    }//Google
    }//Droid
    }//Elastos

}
