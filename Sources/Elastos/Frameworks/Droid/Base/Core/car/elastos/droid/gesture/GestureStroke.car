//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.IO.IDataOutputStream;
    using interface Elastos.IO.IDataInputStream;

    interface Elastos.Droid.Graphics.ICanvas;
    interface Elastos.Droid.Graphics.IPaint;
    interface Elastos.Droid.Graphics.IPath;
    interface Elastos.Droid.Graphics.IRectF;
    interface Elastos.Droid.Gesture.IOrientedBoundingBox;

    namespace Elastos {
    namespace Droid {
    namespace Gesture {

    /**
     * A gesture stroke started on a touch down and ended on a touch up. A stroke
     * consists of a sequence of timed points. One or multiple strokes form a gesture.
     */
    [local, deprecated]
    interface IGestureStroke {
        /**
         * Draws the stroke with a given canvas and paint.
         *
         * @param canvas
         */
        Draw(
            [in] ICanvas* canvas,
            [in] IPaint* paint);

        GetPath(
            [out] IPath** outPath);

        /**
         * Converts the stroke to a Path of a given number of points.
         *
         * @param width the width of the bounding box of the target path
         * @param height the height of the bounding box of the target path
         * @param numSample the number of points needed
         *
         * @return the path
         */
        ToPath(
            [in] Float width,
            [in] Float height,
            [in] Int32 numSample,
            [out] IPath** outPath);

        Serialize(
            [in] IDataOutputStream* outStream);

        /**
         * Invalidates the cached path that is used to render the stroke.
         */
        ClearPath();

        /**
         * Computes an oriented bounding box of the stroke.
         *
         * @return OrientedBoundingBox
         */
        ComputeOrientedBoundingBox(
            [out] IOrientedBoundingBox** boundingBox);

        GetBoundingBox(
            [out] IRectF** box);

        GetLength(
            [out] Float* length);

        GetPoints(
            [out, callee] ArrayOf<Float>* points);
    }

    [local]
    interface IGestureStrokeHelper {
        Deserialize(
            [in] IDataInputStream* inStream,
            [out] IGestureStroke** stroke);
    }

    } // namespace Gesture
    } // namespace Droid
    } // namespace Elastos
}
