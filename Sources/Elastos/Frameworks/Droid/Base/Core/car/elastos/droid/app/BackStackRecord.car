//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Utility.IArrayMap;
    interface Elastos.Droid.Utility.ISparseArray;
    interface Elastos.Droid.View.IView;
    interface Elastos.Droid.App.IFragmentManagerImpl;
    interface Elastos.Droid.App.IBackStackRecord;

    namespace Elastos {
    namespace Droid {
    namespace App {

    [local]
    interface IBackStackState {
        Instantiate(
            [in] IFragmentManagerImpl* fm,
            [out] IBackStackRecord** record);
    }

    [local]
    interface IBackStackRecordTransitionState {

        GetNameOverrides(
            [out] IArrayMap** map);

        SetNameOverrides(
            [in] IArrayMap* map);

        GetEnteringEpicenterView(
            [out] IView** result);

        SetEnteringEpicenterView(
            [in] IView* result);

        GetNonExistentView(
            [out] IView** result);

        SetNonExistentView(
            [in] IView* result);
    }

    /**
     * @Involve
     * interface IFragmentTransaction
     * interface IFragmentManagerBackStackEntry
     * interface IRunnable
     */
    [local, deprecated]
    interface IBackStackRecord {

        GetId(
            [out] Int32* id);

        GetBreadCrumbTitleRes(
            [out] Int32* titleRes);

        GetBreadCrumbShortTitleRes(
            [out] Int32* shortTitleRes);

        GetBreadCrumbTitle(
            [out] ICharSequence** title);

        GetBreadCrumbShortTitle(
            [out] ICharSequence** shortTitle);

        CalculateBackFragments(
            [in] ISparseArray* firstOutFragments,
            [in] ISparseArray* lastInFragments);

        PopFromBackStack(
            [in] Boolean doStateMove,
            [in] IBackStackRecordTransitionState* state,
            [in] ISparseArray* firstOutFragments,
            [in] ISparseArray* lastInFragments,
            [out] IBackStackRecordTransitionState** result);

        GetName(
            [out] String* name);

        GetTransition(
            [out] Int32* trans);

        GetTransitionStyle(
            [out] Int32* transStyle);
    }

    } // namespace App
    } // namespace Droid
    } // namespace Elastos
}
