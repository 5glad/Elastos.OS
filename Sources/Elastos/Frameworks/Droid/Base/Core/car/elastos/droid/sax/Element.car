//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Sax.IStartElementListener;
    interface Elastos.Droid.Sax.IEndElementListener;
    interface Elastos.Droid.Sax.IEndTextElementListener;

    using interface Org.Xml.Sax.ILocator;

    namespace Elastos {
    namespace Droid {
    namespace Sax {

    /**
     * An XML element. Provides access to child elements and hooks to listen
     * for events related to this element.
     *
     * @see RootElement
     */
    interface IElement {
        /**
         * Gets the child element with the given name. Uses an empty string as the
         * namespace.
         */
        GetChild(
            [in] String localName,
            [out] IElement** result);

        /**
         * Gets the child element with the given name.
         */
        GetChild(
            [in] String uri,
            [in] String localName,
            [out] IElement** result);

        /**
         * Gets the child element with the given name. Uses an empty string as the
         * namespace. We will throw a {@link org.xml.sax.SAXException} at parsing
         * time if the specified child is missing. This helps you ensure that your
         * listeners are called.
         */
        RequireChild(
            [in] String localName,
            [out] IElement** result);

        /**
         * Gets the child element with the given name. We will throw a
         * {@link org.xml.sax.SAXException} at parsing time if the specified child
         * is missing. This helps you ensure that your listeners are called.
         */
        RequireChild(
            [in] String uri,
            [in] String localName,
            [out] IElement** result);

        /**
         * Sets start and end element listeners at the same time.
         */
        SetElementListener(
            [in] IElementListener* elementListener);

        /**
         * Sets start and end text element listeners at the same time.
         */
        SetTextElementListener(
            [in] ITextElementListener* elementListener);

        /**
         * Sets a listener for the start of this element.
         */
        SetStartElementListener(
            [in] IStartElementListener* startElementListener);

        /**
         * Sets a listener for the end of this element.
         */
        SetEndElementListener(
            [in] IEndElementListener* endElementListener);

        /**
         * Sets a listener for the end of this text element.
         */
        SetEndTextElementListener(
            [in] IEndTextElementListener* endTextElementListener);

        /**
         * Clears flags on required children.
         */
        ResetRequiredChildren();

        /**
         * Throws an exception if a required child was not present.
         */
        CheckRequiredChildren(
            [in] ILocator* locator);
    }

    interface IElementHelper {
        ToString(
            [in] String uri,
            [in] String localName,
            [out] String* str);
    }

    } // namespace Sax
    } // namespace Droid
    } // namespace Elastos
}
