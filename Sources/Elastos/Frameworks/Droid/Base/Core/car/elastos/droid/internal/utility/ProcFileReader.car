//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Utility {

    /**
     * Reader that specializes in parsing {@code /proc/} files quickly. Walks
     * through the stream using a single space {@code ' '} as token separator, and
     * requires each line boundary to be explicitly acknowledged using
     * {@link #finishLine()}. Assumes {@link StandardCharsets#US_ASCII} encoding.
     * <p>
     * Currently doesn't support formats based on {@code \0}, tabs, or repeated
     * delimiters.
     */
    /**
     * @Involve
     * interface ICloseable;
     */
    [local]
    interface IProcFileReader {
        /**
         * Check if stream has more data to be parsed.
         */
        HasMoreData(
            [out] Boolean* result);
        /**
         * Finish current line, skipping any remaining data.
         */
        FinishLine();

        /**
         * Parse and return next token as {@link String}.
         */
        NextString(
            [out] String* result);

        /**
         * Parse and return next token as base-10 encoded {@code Int64}.
         */
        NextInt64(
            [out] Int64* result);

        /**
         * Parse and return next token as base-10 encoded {@code Int64}, or return
         * the given default value if no remaining tokens on current line.
         */
        NextOptionalInt64(
            [in] Int64 def,
            [out] Int64* result);

        /**
         * Parse and return next token as base-10 encoded {@code int}.
         */
        NextInt32(
            [out] Int32* result);
    }

    } // namespace Utility
    } // namespace Internal
    } // namepsace Droid
    } // namespace Elastos
}
