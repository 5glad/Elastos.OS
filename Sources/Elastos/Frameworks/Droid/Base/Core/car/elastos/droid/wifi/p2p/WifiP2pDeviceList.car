//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================


module
{
    interface Elastos.Droid.Wifi.P2p.IWifiP2pDevice;

    using interface Elastos.Utility.ICollection;

    namespace Elastos {
    namespace Droid {
    namespace Wifi {
    namespace P2p {

    /**
     * A class representing a Wi-Fi P2p device list.
     *
     * Note that the operations are not thread safe.
     * {@see WifiP2pManager}
     */
    /**
     * @Involved
     * interface IParcelable;
     */
    interface IWifiP2pDeviceList {
        /** Clear the list @hide */
        Clear(
            [out] Boolean* result);

        /**
         * Add/update a device to the list. If the device is not found, a new device entry
         * is created. If the device is already found, the device details are updated
         * @param device to be updated
         * @hide
         */
        Update(
            [in] IWifiP2pDevice* device);

        /** Only updates details fetched from the supplicant @hide */
        UpdateSupplicantDetails(
            [in] IWifiP2pDevice* device);

        /** @hide */
        UpdateGroupCapability(
            [in] String deviceAddress,
            [in] Int32 groupCapab);

        /** @hide */
        UpdateStatus(
            [in] String deviceAddress,
            [in] Int32 status);

        /**
         * Fetch a device from the list
         * @param deviceAddress is the address of the device
         * @return WifiP2pDevice device found, or null if none found
         */
        Get(
            [in] String deviceAddress,
            [out] IWifiP2pDevice** result);

        /** @hide */
        Remove(
            [in] IWifiP2pDevice* device,
            [out] Boolean* result);

        /**
         * Remove a device from the list
         * @param deviceAddress is the address of the device
         * @return WifiP2pDevice device removed, or null if none removed
         * @hide
         */
        Remove(
            [in] String deviceAddress,
            [out] IWifiP2pDevice** result);

        /** Returns true if any device the list was removed @hide */
        Remove(
            [in] IWifiP2pDeviceList* list,
            [out] Boolean* result);

        /** Get the list of devices */
        GetDeviceList(
            [out] ICollection** result);

        /** @hide */
        IsGroupOwner(
            [in] String deviceAddress,
            [out] Boolean* result);
    }

    } // namespace P2p
    } // namespace Wifi
    } // namespace Droid
    } // namespace Elastos
}

