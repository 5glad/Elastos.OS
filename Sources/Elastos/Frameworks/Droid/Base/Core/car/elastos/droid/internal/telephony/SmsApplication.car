//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Content.IContext;
    interface Elastos.Droid.Content.IComponentName;

    using interface Elastos.Utility.ICollection;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {

    interface ISmsApplicationData {
        IsComplete(
            [out] Boolean* result);

    }

    [local]
    interface ISmsApplication {

        GetApplicationCollection(
            [in] IContext* context,
            [out] ICollection** result);

        SetDefaultApplication(
            [in] String packageName,
            [in] IContext* context);

        InitSmsPackageMonitor(
            [in] IContext* context);

        GetSmsApplicationData(
            [in] String packageName,
            [in] IContext* context,
            [out] ISmsApplicationData** result);

        GetDefaultSmsApplication(
            [in] IContext* context,
            [in] Boolean updateIfNeeded,
            [out] IComponentName** result);

        GetDefaultMmsApplication(
            [in] IContext* context,
            [in] Boolean updateIfNeeded,
            [out] IComponentName** result);

        /**
         * Gets the default Respond Via Message application
         * @param context context from the calling app
         * @param updateIfNeeded update the default app if there is no valid default app configured.
         * @return component name of the app and class to direct Respond Via Message intent to
         */
        GetDefaultRespondViaMessageApplication(
            [in] IContext* context,
            [in] Boolean updateIfNeeded,
            [out] IComponentName** result);

        /**
         * Gets the default Send To (smsto) application.
         * <p>
         * Caller must pass in the correct user context if calling from a singleton service.
         * @param context context from the calling app
         * @param updateIfNeeded update the default app if there is no valid default app configured.
         * @return component name of the app and class to direct SEND_TO (smsto) intent to
         */
        GetDefaultSendToApplication(
            [in] IContext* context,
            [in] Boolean updateIfNeeded,
            [out] IComponentName** result);

        ShouldWriteMessageForPackage(
            [in] String packageName,
            [in] IContext* context,
            [out] Boolean* result);

    }

    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
