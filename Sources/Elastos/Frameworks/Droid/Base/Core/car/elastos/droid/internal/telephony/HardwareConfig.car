
module {

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {

    interface IHardwareConfig {

        /**
         * hardware configuration kind.
         */
        const Int32 DEV_HARDWARE_TYPE_MODEM = 0;
        const Int32 DEV_HARDWARE_TYPE_SIM   = 1;

        /**
         * ril attachment model.  if single, there is a one-to-one
         * relationship between a modem hardware and a ril daemon.
         * if multiple, there is a one-to-many relatioship between a
         * modem hardware and several ril simultaneous ril daemons.
         */
        const Int32 DEV_MODEM_RIL_MODEL_SINGLE   = 0;
        const Int32 DEV_MODEM_RIL_MODEL_MULTIPLE = 1;

        /**
         * hardware state of the resource.
         *
         *   enabled: the resource can be used by the msim-framework,
         *            call activity can be handled on it.
         *   standby: the resource can be used by the msim-framework but
         *            only for non call related activity.  as example:
         *            reading the address book from a sim device. attempt
         *            to use this resource for call activity leads to
         *            undetermined results.
         *   disabled: the resource  cannot be used and attempt to use
         *             it leads to undetermined results.
         *
         * by default, all resources are 'enabled', what causes a resource
         * to be marked otherwise is a property of the underlying hardware
         * knowledge and implementation and it is out of scope of the TDC.
         */
        const Int32 DEV_HARDWARE_STATE_ENABLED  = 0;
        const Int32 DEV_HARDWARE_STATE_STANDBY  = 1;
        const Int32 DEV_HARDWARE_STATE_DISABLED = 2;

        AssignModem(
            [in] String id,
            [in] Int32 state,
            [in] Int32 model,
            [in] Int32 ratBits,
            [in] Int32 maxV,
            [in] Int32 maxD,
            [in] Int32 maxS);

        AssignSim(
            [in] String id,
            [in] Int32 state,
            [in] String link);

        CompareTo(
            [in] IHardwareConfig* hw,
            [out] Int32* result);

    }

    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
