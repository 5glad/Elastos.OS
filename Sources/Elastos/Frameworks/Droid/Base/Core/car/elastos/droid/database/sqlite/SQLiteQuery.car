//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Database.ICursorWindow;

    namespace Elastos {
    namespace Droid {
    namespace Database {
    namespace Sqlite {

    /**
     * Represents a query that reads the resulting rows into a {@link SQLiteQuery}.
     * This class is used by {@link SQLiteCursor} and isn't useful itself.
     * <p>
     * This class is not thread-safe.
     * </p>
     *
     * @Involve
     * interface ICloseable;
     * interface ISQLiteClosable;
     * interface ISQLiteProgram
     */
    interface ISQLiteQuery {
        /**
         * Reads rows into a buffer.
         *
         * @param window The window to fill into
         * @param startPos The start position for filling the window.
         * @param requiredPos The position of a row that MUST be in the window.
         * If it won't fit, then the query should discard part of what it filled.
         * @param countAllRows True to count all rows that the query would
         * return regardless of whether they fit in the window.
         * @return Number of rows that were enumerated.  Might not be all rows
         * unless countAllRows is true.
         *
         * @throws SQLiteException if an error occurs.
         * @throws OperationCanceledException if the operation was canceled.
         */
        FillWindow(
            [in] ICursorWindow* window,
            [in] Int32 startPos,
            [in] Int32 requiredPos,
            [in] Boolean countAllRows,
            [out] Int32* result);

        ToString(
            [out] String* str);
    }

    } // namespace Sqlite
    } // namespace Database
    } // namespace Droid
    } // namespace Elastos
}
