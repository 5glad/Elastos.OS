//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Hardware {
    namespace Location {

    /**
     * Geofence Hardware Request used for internal location services communication.
     *
     * @hide
     *
     * @Involve
     * interface IParcelable;
     */
    interface IGeofenceHardwareRequestParcelable {
        /**
         * Returns the id of this request.
         */
        GetId(
            [out] Int32* id);

        /**
         * Returns the latitude of this geofence.
         */
        GetLatitude(
            [out] Double* latitude);

        /**
         * Returns the longitude of this geofence.
         */
        GetLongitude(
            [out] Double* longitude);

        /**
         * Returns the radius of this geofence.
         */
        GetRadius(
            [out] Double* radius);

        /**
         * Returns transitions monitored for this geofence.
         */
        GetMonitorTransitions(
            [out] Int32* transitions);

        /**
         * Returns the unknownTimer of this geofence.
         */
        GetUnknownTimer(
            [out] Int32* timer);

        /**
         * Returns the notification responsiveness of this geofence.
         */
        GetNotificationResponsiveness(
            [out] Int32* responsiveness);

        /**
         * Returns the last transition of this geofence.
         */
        GetLastTransition(
            [out] Int32* transition);

        /**
         * Returns the type of the geofence for the current request.
         */
        GetType(
            [out] Int32* type);

        /**
         * Returns the source technologies to track this geofence.
         */
        GetSourceTechnologies(
            [out] Int32* technologies);
    }

    } // namespace Location
    } // namespace Hardware
    } // namespace Droid
    } // namespace Elastos
}
