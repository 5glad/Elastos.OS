
module
{
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Internal.Telephony.IPhoneBase;
    enum Elastos.Droid.Internal.Telephony.ICallSrvccState;
    interface Elastos.Droid.Internal.Telephony.Gsm.ISuppServiceNotification;
    interface Elastos.Droid.Internal.Telephony.Uicc.IIccRecords;

    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace ImsPhone {

    /**
     * @Involve
     * interface IImsPhoneBase
     */
    [local]
    interface IImsPhone {

        const String CS_FALLBACK = "cs_fallback";

        UpdateParentPhone(
            [in] IPhoneBase* parentPhone);

        CanDial(
            [out] Boolean* result);

        NotifySuppSvcNotification(
            [in] ISuppServiceNotification* suppSvc);

        GetHandoverConnection(
            [out] IArrayList** result);

        NotifySrvccState(
            [in] ICallSrvccState state);

        RegisterForSilentRedial(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        UnregisterForSilentRedial(
            [in] IHandler* h);

        GetIccRecords(
            [out] IIccRecords** result);

        IsInEmergencyCall(
            [out] Boolean* result);

        IsInEcm(
            [out] Boolean* result);

        SetOnEcbModeExitResponse(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        UnsetOnEcbModeExitResponse(
            [in] IHandler* h);

        IsVolteEnabled(
            [out] Boolean* result);

        IsVtEnabled(
            [out] Boolean* result);

    }

    }//ImsPhone
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
