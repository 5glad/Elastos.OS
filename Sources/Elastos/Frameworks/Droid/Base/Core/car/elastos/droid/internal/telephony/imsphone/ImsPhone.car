//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Internal.Telephony.IPhoneBase;
    enum Elastos.Droid.Internal.Telephony.ICallSrvccState;
    interface Elastos.Droid.Internal.Telephony.Gsm.ISuppServiceNotification;
    interface Elastos.Droid.Internal.Telephony.Uicc.IIccRecords;

    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace ImsPhone {

    /**
     * @Involve
     * interface IPhone
     * interface IHandler
     * interface IPhoneBase
     */
    [local]
    interface IImsPhone {

        const String CS_FALLBACK = "cs_fallback";

        UpdateParentPhone(
            [in] IPhoneBase* parentPhone);

        CanDial(
            [out] Boolean* result);

        NotifySuppSvcNotification(
            [in] ISuppServiceNotification* suppSvc);

        GetHandoverConnection(
            [out] IArrayList** result);

        NotifySrvccState(
            [in] ICallSrvccState state);

        RegisterForSilentRedial(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        UnregisterForSilentRedial(
            [in] IHandler* h);

        GetIccRecords(
            [out] IIccRecords** result);

        IsInEmergencyCall(
            [out] Boolean* result);

        IsInEcm(
            [out] Boolean* result);

        SetOnEcbModeExitResponse(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        UnsetOnEcbModeExitResponse(
            [in] IHandler* h);

        IsVolteEnabled(
            [out] Boolean* result);

        IsVtEnabled(
            [out] Boolean* result);

    }

    }//ImsPhone
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
