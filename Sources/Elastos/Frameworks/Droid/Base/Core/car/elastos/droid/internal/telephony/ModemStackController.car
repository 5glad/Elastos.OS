//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Os.IMessage;
    interface Elastos.Droid.Os.IHandler;
    interface Elastos.Droid.Content.IContext;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {

    interface IModemStackControllerModemCapabilityInfo {
        GetSupportedRatBitMask(
            [out] Int32* result);

        GetStackId(
            [out] Int32* result);

        GetMaxDataCap(
            [out] Int32* result);
    }

    /**
     * @Involve
     * interface IHandler
     */
    [deprecated]
    interface IModemStackController {

        IsStackReady(
            [out] Boolean* result);

        GetMaxDataAllowed(
            [out] Int32* result);

        GetCurrentStackIdForPhoneId(
            [in] Int32 phoneId,
            [out] Int32* result);

        GetPrimarySub(
            [out] Int32* result);

        // GetModemRatCapsForPhoneId(
        //     [in] Int32 phoneId,
        //     [out] IModemCapabilityInfo** result);

        UpdateStackBinding(
            [in] ArrayOf<Int32>* prefStackIds,
            [in] Boolean isBootUp,
            [in] IMessage* msg,
            [out] Int32* result);

        RegisterForStackReady(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        RegisterForModemRatCapsAvailable(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

        RegisterForModemDataCapsUpdate(
            [in] IHandler* h,
            [in] Int32 what,
            [in] IInterface* obj);

    }

    interface IModemStackControllerHelper {
        // Make(
        //     [in] IContext* context,
        //     [in] IUiccController* uiccMgr,
        //     [in] ArrayOf<ICommandsInterface*>* ci,
        //     [out] IModemStackController** result);

        GetInstance(
            [out] IModemStackController** result);
    }

    }//Telephony
    }//Internal
    }//Droid
    }//Elastos

}
