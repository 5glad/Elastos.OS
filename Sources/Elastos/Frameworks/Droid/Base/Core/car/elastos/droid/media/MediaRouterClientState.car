//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace Media {

    /**
     * @Involve
     * interface IParcelable
     */
    interface IMediaRouterClientStateRouteInfo {
        GetId(
            [out] String* id);

        SetId(
            [in] String id);

        GetName(
            [out] String* name);

        SetName(
            [in] String name);

        GetDescription(
            [out] String* description);

        SetDescription(
            [in] String description);

        GetSupportedTypes(
            [out] Int32* supportedTypes);

        SetSupportedTypes(
            [in] Int32 supportedTypes);

        GetEnabled(
            [out] Boolean* enabled);

        SetEnabled(
            [in] Boolean enabled);

        GetStatusCode(
            [out] Int32* statusCode);

        SetStatusCode(
            [in] Int32 statusCode);

        GetPlaybackType(
            [out] Int32* playbackType);

        SetPlaybackType(
            [in] Int32 playbackType);

        GetPlaybackStream(
            [out] Int32* playbackStream);

        SetPlaybackStream(
            [in] Int32 playbackStream);

        GetVolume(
            [out] Int32* volume);

        SetVolume(
            [in] Int32 volume);

        GetVolumeMax(
            [out] Int32* volumeMax);

        SetVolumeMax(
            [in] Int32 volumeMax);

        GetVolumeHandling(
            [out] Int32* volumeHandling);

        SetVolumeHandling(
            [in] Int32 volumeHandling);

        GetPresentationDisplayId(
            [out] Int32* presentationDisplayId);

        SetPresentationDisplayId(
            [in] Int32 presentationDisplayId);
    }

    /**
     * Information available from MediaRouterService about the state perceived by
     * a particular client and the routes that are available to it.
     *
     * Clients must not modify the contents of this object.
     * @hide
     */
    /**
     * @Involve
     * interface IParcelable
     */
    interface IMediaRouterClientState {
        GetRoute(
            [in] String id,
            [out] IMediaRouterClientStateRouteInfo** result);

        GetGloballySelectedRouteId(
            [out] String* routeId);

        SetGloballySelectedRouteId(
            [in] String routeId);

        GetRoutes(
            [out] IArrayList** routes);

        SetRoutes(
            [in] IArrayList* routes);
    }

    } // namespace media
    } // namepsace Droid
    } // namespace Elastos
}
