//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    interface Elastos.Droid.Utility.ISparseArray;
    interface Elastos.Droid.View.IMenu;
    interface Elastos.Droid.View.IWindowCallback;
    interface Elastos.Droid.Graphics.Drawable.IDrawable;
    interface Elastos.Droid.Internal.View.Menu.IMenuPresenterCallback;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Widget {

    /**
     * Implemented by the top-level decor layout for a window. DecorContentParent offers
     * entry points for a number of title/window decor features.
     */
     [local]
    interface IDecorContentParent {
        SetWindowCallback(
            [in] IWindowCallback* cb);

        SetWindowTitle(
            [in] ICharSequence* title);

        GetTitle(
            [out] ICharSequence** title);

        InitFeature(
            [in] Int32 windowFeature);

        SetUiOptions(
            [in] Int32 uiOptions);

        HasIcon(
            [out] Boolean* hasIcon);

        HasLogo(
            [out] Boolean* hasLogo);

        SetIcon(
            [in] Int32 resId);

        SetIcon(
            [in] IDrawable* d);

        SetLogo(
            [in] Int32 resId);

        CanShowOverflowMenu(
            [out] Boolean* canShowOverflowMen);

        IsOverflowMenuShowing(
            [out] Boolean* isOverflowMenuShow);

        IsOverflowMenuShowPending(
            [out] Boolean* isOverflowMenuShow);

        ShowOverflowMenu(
            [out] Boolean* showOverflowMenu);

        HideOverflowMenu(
            [out] Boolean* hideOverflowMenu);

        SetMenuPrepared();

        SetMenu(
            [in] IMenu* menu,
            [in] IMenuPresenterCallback* cb);

        SaveToolbarHierarchyState(
            [in] ISparseArray* toolbarStates);

        RestoreToolbarHierarchyState(
            [in] ISparseArray* toolbarStates);

        DismissPopups();

    }


    }// namespace Widget
    }// namespace Internal
    }// namespace Droid
    }// namespace Elastos

}
