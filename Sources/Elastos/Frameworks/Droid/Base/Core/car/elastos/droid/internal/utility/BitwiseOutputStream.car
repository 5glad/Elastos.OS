//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Utility {

    /**
     * An object that provides bitwise incremental write access to a byte array.
     *
     * This is useful, for example, when writing a series of fields that
     * may not be aligned on byte boundaries.
     *
     * NOTE -- This class is not threadsafe.
     */
    [local, deprecated]
    interface IBitwiseOutputStream {
        /**
         * Return byte array containing accumulated data, sized to just fit.
         *
         * @return newly allocated byte array
         */
        ToByteArray(
            [out, callee] ArrayOf<Byte>* array);

        /**
         * Write some data and increment the current position.
         *
         * The 8-bit limit on access to bitwise streams is intentional to
         * avoid endianness issues.
         *
         * @param bits the amount of data to write (gte 0, lte 8)
         * @param data to write, will be masked to expose only bits param from lsb
         */
        Write(
            [in] Int32 bits,
            [in] Int32 data);

        /**
         * Write data in bulk from a byte array and increment the current position.
         *
         * @param bits the amount of data to write
         * @param arr the byte array containing data to be written
         */
        WriteByteArray(
            [in] Int32 bits,
            [in] ArrayOf<Byte>* arr);

        /**
         * Increment the current position, implicitly writing zeros.
         *
         * @param bits the amount by which to increment the position
         */
        Skip(
            [in] Int32 bits);
    }

    }//namespace Utility
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}
