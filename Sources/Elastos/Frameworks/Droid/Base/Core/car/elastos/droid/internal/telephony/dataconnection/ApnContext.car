//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.App.IPendingIntent;
    enum Elastos.Droid.Internal.Telephony.DctConstantsState;
    interface Elastos.Droid.Internal.Telephony.DataConnection.IDcAsyncChannel;
    interface Elastos.Droid.Internal.Telephony.DataConnection.IApnSetting;

    using interface Elastos.Utility.IArrayList;

    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Telephony {
    namespace DataConnection {

    interface IApnContext {
        GetApnType(
            [out] String* result);

        GetDcAc(
            [out] IDcAsyncChannel** result);

        SetDataConnectionAc(
            [in] IDcAsyncChannel* dcac);

        GetReconnectIntent(
            [out] IPendingIntent** result);

        SetReconnectIntent(
            [in] IPendingIntent* intent);

        GetApnSetting(
            [out] IApnSetting** result);

        SetApnSetting(
            [in] IApnSetting* apnSetting);

        SetWaitingApns(
            [in] IArrayList* waitingApns);

        GetWaitingApnsPermFailCount(
            [out] Int32* result);

        DecWaitingApnsPermFailCount();

        GetNextWaitingApn(
            [out] IApnSetting** result);

        RemoveWaitingApn(
            [in] IApnSetting* apn);

        GetWaitingApns(
            [out] IArrayList** result);

        SetState(
            [in] DctConstantsState s);

        GetState(
            [out] DctConstantsState* result);

        IsDisconnected(
            [out] Boolean* result);

        SetReason(
            [in] String reason);

        GetReason(
            [out] String* result);

        IsReady(
            [out] Boolean* result);

        IsConnectable(
            [out] Boolean* result);

        IsConnectedOrConnecting(
            [out] Boolean* result);

        SetEnabled(
            [in] Boolean enabled);

        IsEnabled(
            [out] Boolean* result);

        SetDependencyMet(
            [in] Boolean met);

        GetDependencyMet(
            [out] Boolean* result);

        IsProvisioningApn(
            [out] Boolean* result);

        IncRefCount();

        DecRefCount();

        GetPriority(
            [out] Int32* result);
    }

    }//DataConnection
    }//Telephony
    }//Internal
    }//Droid
    }//Elastos
}
