//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Internal {
    namespace Utility {

    /**
     * An object that provides bitwise incremental read access to a byte array.
     *
     * This is useful, for example, when accessing a series of fields that
     * may not be aligned on byte boundaries.
     *
     * NOTE -- This class is not threadsafe.
     */
    [local]
    interface IBitwiseInputStream {
        /**
         * Return the number of bit still available for reading.
         */
        Available(
            [out] Int32* result);

        /**
         * Read some data and increment the current position.
         *
         * The 8-bit limit on access to bitwise streams is intentional to
         * avoid endianness issues.
         *
         * @param bits the amount of data to read (gte 0, lte 8)
         * @return byte of read data (possibly partially filled, from lsb)
         */
        Read(
            [in] Int32 bits,
            [out] Int32* result);

        /**
         * Read data in bulk into a byte array and increment the current position.
         *
         * @param bits the amount of data to read
         * @return newly allocated byte array of read data
         */
        ReadByteArray(
            [in] Int32 bits,
            [out, callee] ArrayOf<Byte>* array);

        /**
         * Increment the current position and ignore contained data.
         *
         * @param bits the amount by which to increment the position
         */
        Skip(
            [in] Int32 bits);
    }

    }//namespace Utility
    }//namespace Internal
    }//namespace Droid
    }//namespace Elastos
}
