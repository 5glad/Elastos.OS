//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    using interface Elastos.Utility.IList;
    using interface Elastos.Net.IInetAddress;

    namespace Elastos {
    namespace Droid {
    namespace Net {

    /**
     * Performs a simple DNS "ping" by sending a "server status" query packet to the
     * DNS server. As long as the server replies, we consider it a success.
     * <p>
     * We do not use a simple hostname lookup because that could be cached and the
     * API may not differentiate between a time out and a failure lookup (which we
     * really care about).
     * <p>
     *
     * @hide
     */
    /**
     * @Involved
     * interface IHandler;
     */
    interface IDnsPinger {
        /**
         * Async response packet for dns pings.
         * arg1 is the ID of the ping, also returned by {@link #pingDnsAsync(InetAddress, int, int)}
         * arg2 is the delay, or is negative on error.
         */
        const Int32 DNS_PING_RESULT =  0x00050000;

        /** An error code for a {@link #DNS_PING_RESULT} packet */
        const Int32 TIMEOUT =  -1;

        /** An error code for a {@link #DNS_PING_RESULT} packet */
        const Int32 SOCKET_EXCEPTION =  -2;

        /**
         * Returns a list of DNS addresses, coming from either the link properties of the
         * specified connection or the default system DNS if the link properties has no dnses.
         * @return a non-empty non-null list
         */
        GetDnsList(
            [out] IList** result);

        /**
         * Send a ping.  The response will come via a {@link #DNS_PING_RESULT} to the handler
         * specified at creation.
         * @param dns address of dns server to ping
         * @param timeout timeout for ping
         * @return an ID field, which will also be included in the {@link #DNS_PING_RESULT} message.
         */
        PingDnsAsync(
            [in] IInetAddress* dns,
            [in] Int32 timeout,
            [in] Int32 delay,
            [out] Int32* result);

        CancelPings();
    }

    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
