//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.IRunnable;

    using interface Elastos.Droid.Animation.IAnimatorUpdateListener;
    using interface Elastos.Droid.Animation.IAnimatorListener;

    interface Elastos.Droid.SystemUI.Recents.Model.ITask;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Recents {
    namespace Views {

    interface ITaskView;

    /** The TaskView callbacks */
    interface ITaskViewCallbacks {

        OnTaskViewAppIconClicked(
            [in] ITaskView* tv);

        OnTaskViewAppInfoClicked(
            [in] ITaskView* tv);

        OnTaskViewClicked(
            [in] ITaskView* tv,
            [in] ITask* task,
            [in] Boolean lockToTask);

        OnTaskViewDismissed(
            [in] ITaskView* tv);

        OnTaskViewClipStateChanged(
            [in] ITaskView* tv);

        OnTaskViewFullScreenTransitionCompleted();

        OnTaskViewFocusChanged(
            [in] ITaskView* tv,
            [in] Boolean focused);
    }

    /* A task view */
    /**
     * @Involve
     * interface IFrameLayout
     * interface ITaskCallbacks
     * interface ITaskFooterViewCallbacks
     * interface IViewOnClickListener
     * interface IViewOnLongClickListener
     */
    [local]
    interface ITaskView {
        SetTaskProgress(
            [in] Float p);

        GetTaskProgress(
            [out] Float* p);

        SetDim(
            [in] Int32 dim);

        GetDim(
            [out] Int32* dim);
    }

    } // namespace Views
    } // namespace Recents
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
