//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.View.IViewGroup;

    interface Elastos.Droid.SystemUI.StatusBar.INotificationDataEntry;
    interface Elastos.Droid.SystemUI.StatusBar.Phone.IPhoneStatusBar;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {
    namespace Policy {

    /**
     * @Involve
     * interface Elastos.Droid.Widget.IFrameLayout
     * interface ISwipeHelperCallback
     * interface IExpandHelperCallback
     * interface IViewTreeObserverOnComputeInternalInsetsListener
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    [local]
    interface IHeadsUpNotificationView {
        UpdateResources();

        SetBar(
            [in] IPhoneStatusBar* bar);

        GetHolder(
            [out] IViewGroup** group);

        ShowNotification(
            [in] INotificationDataEntry* headsUp,
            [out] Boolean* result);

        IsShowing(
            [in] String key,
            [out] Boolean* showing);

        /** Discard the Heads Up notification. */
        Clear();

        /** Respond to dismissal of the Heads Up window. */
        Dismiss();

        /** Push any current Heads Up notification down into the shade. */
        ReleaseResources();

        ReleaseAndClose();

        GetEntry(
            [out] INotificationDataEntry** entry);

        IsClearable(
            [out] Boolean* result);

        Escalate();

        GetKey(
            [out] String* key);
    }

    } // namespace Policy
    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
