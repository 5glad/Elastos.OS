//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {
    namespace Stack {

    /**
     * A functor which can be queried for offset given the number of items before it.
     */
    interface IStackIndentationFunctor {
        SetPeekSize(
            [in] Int32 mPeekSize);

        SetDistanceToPeekStart(
            [in] Int32 distanceToPeekStart);

        /**
         * Gets the offset of this Functor given a the quantity of items before it
         *
         * @param itemsBefore how many items are already in the stack before this element
         * @return the offset
         */
        GetValue(
            [in] Float itemsBefore,
            [out] Float* result);
    }

    /**
     * A Functor which interpolates the stack distance linearly based on base values.
     * The base values are based on an interpolation between a linear function and a
     * quadratic function
     */
    /**
     * @Involve
     * interface IStackIndentationFunctor
     */
    interface IPiecewiseLinearIndentationFunctor {

    }

    } // namespace Stack
    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
