//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.View.IViewGroup;

    interface Elastos.Droid.SystemUI.StatusBar.IExpandableView;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {
    namespace Stack {

    /**
     * The Algorithm of the {@link com.android.systemui.statusbar.stack
     * .NotificationStackScrollLayout} which can be queried for {@link com.android.systemui.statusbar
     * .stack.StackScrollState}
     */
    [local]
    interface IStackScrollAlgorithm {
        const Float DIMMED_SCALE = 0.95;

        GetBottomStackSlowDownLength(
            [out] Int32* result);

        ShouldScaleDimmed(
            [out] Boolean* result);

        GetStackScrollState(
            [in] IAmbientState* ambientState,
            [in] IStackScrollState* resultState);

        SetLayoutHeight(
            [in] Int32 layoutHeight);

        SetTopPadding(
            [in] Int32 topPadding);

        /**
         * Update whether the device is very small, i.e. Notifications can be in both the top and the
         * bottom stack at the same time
         *
         * @param panelHeight The normal height of the panel when it's open
         */
        UpdateIsSmallScreen(
            [in] Int32 panelHeight);

        OnExpansionStarted(
            [in] IStackScrollState* currentState);

        OnExpansionStopped();

        SetIsExpanded(
            [in] Boolean isExpanded);

        NotifyChildrenChanged(
            [in] IViewGroup* hostView);

        SetDimmed(
            [in] Boolean dimmed);

        OnReset(
            [in] IExpandableView* view);
    }

    } // namespace Stack
    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
