//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.SystemUI.ISystemUI;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {

    /**
     * Application class for SystemUI.
     */
    /**
     * @Involve
     * interface Elastos.Droid.App.IApplication
     * interface Elastos.Droid.Content.IContextWrapper
     * interface Elastos.Droid.Content.IContext
     * interface Elastos.Droid.Content.IComponentCallbacks2;
     * interface Elastos.Droid.Content.IComponentCallbacks;
     */
    [local, deprecated]
    interface ISystemUIApplication {
        /**
         * Makes sure that all the SystemUI services are running. If they are already running, this is a
         * no-op. This is needed to conditinally start all the services, as we only need to have it in
         * the main process.
         *
         * <p>This method must only be called from the main thread.</p>
         */
        StartServicesIfNeeded();

        GetServices(
            [out, callee] ArrayOf<ISystemUI*>* services);

        GetComponent(
            [in] String interfaceType,
            [out] IInterface** obj);
    }

    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
