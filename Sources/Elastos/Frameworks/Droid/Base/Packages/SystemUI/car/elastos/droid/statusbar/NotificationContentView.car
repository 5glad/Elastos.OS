//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.View.IView;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {

    /**
     * A frame layout containing the actual payload of the notification, including the contracted and
     * expanded layout. This class is responsible for clipping the content and and switching between the
     * expanded and contracted view depending on its clipped size.
     */
    /**
     * @Involve
     * interface IFrameLayout
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    [local]
    interface INotificationContentView {
        Reset();

        GetContractedChild(
            [out] IView** view);

        GetExpandedChild(
            [out] IView** view);

        SetContractedChild(
            [in] IView* child);

        SetExpandedChild(
            [in] IView* child);

        SetActualHeight(
            [in] Int32 actualHeight);

        GetMaxHeight(
            [out] Int32* height);

        GetMinHeight(
            [out] Int32* height);

        SetClipTopAmount(
            [in] Int32 clipTopAmount);

        NotifyContentUpdated();

        IsContentExpandable(
            [out] Boolean* result);

        SetDark(
            [in] Boolean dark,
            [in] Boolean fade);
    }

    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
