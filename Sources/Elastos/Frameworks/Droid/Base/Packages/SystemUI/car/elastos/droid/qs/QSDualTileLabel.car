//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Core.ICharSequence;

    using interface Elastos.Droid.Graphics.Drawable.IDrawable;
    using interface Elastos.Droid.Graphics.ITypeface;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Qs {

    /**
     * Text displayed over one or two lines, centered horizontally.  A caret is always drawn at the end
     * of the first line, and considered part of the content for centering purposes.
     *
     * Text overflow rules:
     *   First line: break on a word, unless a single word takes up the entire line - in which case
     *               truncate.
     *   Second line: ellipsis if necessary
     *
     * @Involve
     * interface IAccessibilityEventSource
     * interface IKeyEventCallback
     * interface IDrawableCallback
     * interface IView
     * interface IViewParent;
     * interface IViewManager;
     * interface IViewGroup
     * interface ILinearLayout
     */
    interface IQSDualTileLabel {
        SetFirstLineCaret(
            [in] IDrawable* d);

        SetText(
            [in] ICharSequence* text);

        GetText(
            [out] String* text);

        SetTextSize(
            [in] Int32 unit,
            [in] Float size);

        SetTextColor(
            [in] Int32 color);

        SetTypeface(
            [in] ITypeface* tf);
    }

    } // namespace Qs
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}