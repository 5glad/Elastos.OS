//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Graphics.ICanvas;
    using interface Elastos.Droid.Os.IHandler;
    using interface Elastos.Droid.View.IView;
    using interface Elastos.Droid.View.IMotionEvent;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Keyguard {

    [local]
    interface IKeyguardWidgetFrame {
        SetIsHoveringOverDeleteDropTarget(
            [in] Boolean isHovering);

        /**
         * Because this view has fading outlines, it is essential that we enable hardware
         * layers on the content (child) so that updating the alpha of the outlines doesn't
         * result in the content layer being recreated.
         */
        EnableHardwareLayersForContent();

        /**
         * Because this view has fading outlines, it is essential that we enable hardware
         * layers on the content (child) so that updating the alpha of the outlines doesn't
         * result in the content layer being recreated.
         */
        DisableHardwareLayersForContent();

        GetContent(
            [out] IView** view);

        GetContentAppWidgetId(
            [out] Int32* id);

        GetBackgroundAlpha(
            [out] Float* res);

        SetBackgroundAlphaMultiplier(
            [in] Float multiplier);

        GetBackgroundAlphaMultiplier(
            [out] Float* res);

        SetBackgroundAlpha(
            [in] Float alpha);

        GetContentAlpha(
            [out] Float* res);

        SetContentAlpha(
            [in] Float alpha);

        SetMaxChallengeTop(
            [in] Int32 top);

        IsSmall(
            [out] Boolean* result);

        AdjustFrame(
            [in] Int32 challengeTop);

        ShrinkWidget(
            [in] Boolean alsoShrinkFrame);

        GetSmallFrameHeight(
            [out] Int32* height);

        SetWidgetLockedSmall(
            [in] Boolean locked);

        ResetSize();

        SetFrameHeight(
            [in] Int32 height);

        HideFrame(
            [in] IInterface* caller);

        ShowFrame(
            [in] IInterface* caller);

        FadeFrame(
            [in] IInterface* caller,
            [in] Boolean takeControl,
            [in] Float alpha,
            [in] Int32 duration);

        SetOverScrollAmount(
            [in] Float r,
            [in] Boolean left);

        OnActive(
            [in] Boolean isActive);

        OnUserInteraction(
            [in] IMotionEvent* event,
            [out] Boolean* result);

        OnBouncerShowing(
            [in] Boolean showing);

        SetWorkerHandler(
            [in] IHandler* workerHandler);

        GetWorkerHandler(
            [out] IHandler** handler);

        DrawBg(
            [in] ICanvas* canvas);
    }

    } // namespace Keyguard
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}