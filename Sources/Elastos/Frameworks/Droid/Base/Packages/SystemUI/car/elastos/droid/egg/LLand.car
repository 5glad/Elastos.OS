//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Widget.ITextView;
    using interface Elastos.Droid.View.IView;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Egg {

    /**
     * @Involve
     * interface Elastos.Droid.View.IView
     * interface Elastos.Droid.View.IViewGroup
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     * interface IFrameLayout
     */
    [local]
    interface ILLand {
        const String TAG = "LLand";

        //TODO: const Boolean DEBUG = Log.isLoggable(TAG, Log.DEBUG);
        const Boolean DEBUG_DRAW = FALSE; // DEBUG

        const Boolean AUTOSTART = TRUE;
        const Boolean HAVE_STARS = TRUE;

        const Float DEBUG_SPEED_MULTIPLIER = 1; // 0.1f;
        const Boolean DEBUG_IDDQD = FALSE;

        GetGameWidth(
            [out] Int32* witch);

        GetGameHeight(
            [out] Int32* height);

        GetGameTime(
            [out] Float* time);

        GetLastTimeStep(
            [out] Float* step);

        SetScoreField(
            [in] ITextView* tv);

        SetSplash(
            [in] IView* v);
    }

    [deprecated]
    interface ILLandHelper {
        L(
            [in] String s,
            [in] ArrayOf<IInterface*>* objects);

        Lerp(
            [in] Float x,
            [in] Float a,
            [in] Float b,
            [out] Float* ret);

        Rlerp(
            [in] Float v,
            [in] Float a,
            [in] Float b,
            [out] Float* ret);

        Clamp(
            [in] Float f,
            [out] Float* ret);

        Frand(
            [out] Float* ret);

        Frand(
            [in] Float a,
            [in] Float b,
            [out] Float* ret);

        Irand(
            [in] Int32 a,
            [in] Int32 b,
            [out] Int32* ret);
    }

    interface IGameView {
        Step(
            [in] Int64 t_ms,
            [in] Int64 dt_ms,
            [in] Float t,
            [in] Float dt);
    }

    interface IObstacle {
    }

    interface IScenery {
    }

    interface IPop {
    }

    } // namespace Egg
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}