//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Graphics.IRect;
    //interface Elastos.Droid.SystemUI.Recents.Misc.ISystemServicesProxy;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace Recents {

    /** A static Recents configuration for the current context
     * NOTE: We should not hold any references to a Context from a static instance */
    [local]
    interface IRecentsConfiguration {

        /** Updates the state, given the specified context */
        Update(
            [in] IContext* context);

        /** Updates the system insets */
        UpdateSystemInsets(
            [in] IRect* insets);

        /** Updates the search bar app widget */
        UpdateSearchBarAppWidgetId(
            [in] IContext* ctx,
            [in] Int32 appWidgetId);

        /** Updates the states that need to be re-read whenever we re-initialize. */
        // UpdateOnReinitialize(
        //     [in] IContext* ctx,
        //     [in] ISystemServicesProxy* ssp);

        /** Called when the configuration has changed, and we want to reset any configuration specific
         * members. */
        UpdateOnConfigurationChange();

        // /** Returns whether the search bar app widget exists. */
        // HasSearchBarAppWidget(
        //     [out] Boolean* result);

        // /** Returns whether the status bar scrim should be animated when shown for the first time. */
        // ShouldAnimateStatusBarScrim(
        //     [out] Boolean* result);

        // /** Returns whether the status bar scrim should be visible. */
        // HasStatusBarScrim(
        //     [out] Boolean* result);

        // /** Returns whether the nav bar scrim should be animated when shown for the first time. */
        // ShouldAnimateNavBarScrim(
        //     [out] Boolean* result);

        // /** Returns whether the nav bar scrim should be visible. */
        // HasNavBarScrim(
        //     [out] Boolean* result);

        // /** Returns whether the current layout is horizontal. */
        // HasHorizontalLayout(
        //     [out] Boolean* result);

        /**
         * Returns the task stack bounds in the current orientation. These bounds do not account for
         * the system insets.
         */
        GetTaskStackBounds(
            [in] Int32 windowWidth,
            [in] Int32 windowHeight,
            [in] Int32 topInset,
            [in] Int32 rightInset,
            [in] IRect* taskStackBounds);

        /**
         * Returns the search bar bounds in the current orientation.  These bounds do not account for
         * the system insets.
         */
        GetSearchBarBounds(
            [in] Int32 windowWidth,
            [in] Int32 windowHeight,
            [in] Int32 topInset,
            [in] IRect* searchBarSpaceBounds);
    }

    } // namespace Recents
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
