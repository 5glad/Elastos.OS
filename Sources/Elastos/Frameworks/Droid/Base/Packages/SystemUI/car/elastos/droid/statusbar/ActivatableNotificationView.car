//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {

    interface IActivatableNotificationView;

    interface IActivatableNotificationViewOnActivatedListener {
        OnActivated(
            [in] IActivatableNotificationView* view);

        OnActivationReset(
            [in] IActivatableNotificationView* view);
    }

    /**
     * Base class for both {@link ExpandableNotificationRow} and {@link NotificationOverflowContainer}
     * to implement dimming/activating on Keyguard for the double-tap gesture
     */
    /**
     * @Involve
     * interface Elastos.Droid.SystemUI.StatusBar.IExpandableOutlineView
     * interface IExpandableView
     * interface Elastos.Droid.Widget.IFrameLayout
     * extends Elastos.Droid.View.IView
     * extends Elastos.Droid.View.IViewGroup
     *
     * interface Elastos.Droid.View.IViewParent
     * interface Elastos.Droid.View.IViewManager
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    interface IActivatableNotificationView {

        /**
         * Cancels the hotspot and makes the notification inactive.
         */
        MakeInactive(
            [in] Boolean animate);

        SetDimmed(
            [in] Boolean dimmed,
            [in] Boolean fade);

        SetDark(
            [in] Boolean dark,
            [in] Boolean fade);

        SetShowingLegacyBackground(
            [in] Boolean showing);

        /**
         * Sets the tint color of the background
         */
        SetTintColor(
            [in] Int32 color);

        SetOnActivatedListener(
            [in] IActivatableNotificationViewOnActivatedListener* onActivatedListener);

        Reset();
    }

    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
