//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.View.Animation.IInterpolator;
    using interface Elastos.Droid.View.IView;
    using interface Elastos.Core.IRunnable;

    namespace Elastos {
    namespace Droid {
    namespace SystemUI {
    namespace StatusBar {

    /**
     * An ImageView which does not have overlapping renderings commands and therefore does not need a
     * layer when alpha is changed.
     */
    /**
     * @Involve
     * extends Elastos.Droid.View.IImageView
     * extends Elastos.Droid.View.IView
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     */
    [local]
    interface IKeyguardAffordanceView {
        SetPreviewView(
            [in] IView* v);

        FinishAnimation(
            [in] Float velocity,
            [in] IRunnable* mAnimationEndRunnable);

        SetCircleRadius(
            [in] Float circleRadius);

        SetCircleRadius(
            [in] Float circleRadius,
            [in] Boolean slowAnimation);

        SetCircleRadiusWithoutAnimation(
            [in] Float circleRadius);

        SetImageScale(
            [in] Float imageScale,
            [in] Boolean animate);

        SetImageScale(
            [in] Float imageScale,
            [in] Boolean animate,
            [in] Int64 duration,
            [in] IInterpolator* interpolator);

        SetImageAlpha(
            [in] Float alpha,
            [in] Boolean animate);

        /**
         * Sets the alpha of the containing image
         *
         * @param alpha The new alpha.
         * @param animate Should an animation be performed
         * @param duration If animate, whats the duration? When -1 we take the default duration
         * @param interpolator If animate, whats the interpolator? When null we take the default
         *                     interpolator.
         */
        SetImageAlpha(
            [in] Float alpha,
            [in] Boolean animate,
            [in] Int64 duration,
            [in] IInterpolator* interpolator,
            [in] IRunnable* runnable);

        GetCircleRadius(
            [out] Float* result);

        ShowArrow(
            [in] Boolean show);

        SetIsLeft(
            [in] Boolean left);
    }

    } // namespace StatusBar
    } // namespace SystemUI
    } // namespace Droid
    } // namespace Elastos
}
