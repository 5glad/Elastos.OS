//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    merge("framework/Errors.car");
    merge("framework/IProtectable.car");
    merge("framework/ITest.car");
    merge("framework/ITestAnnotation.car");
    merge("framework/ITestCase.car");
    merge("framework/ITestFailure.car");
    merge("framework/ITestListener.car");
    merge("framework/ITestResult.car");
    merge("framework/ITestSuite.car");

    namespace Eunit {
    namespace Framework {

    class CTestFailure {
        constructor(
            [in] ITest* failedTest,
            [in] ECode ecError,
            [in] String message,
            [in] String backtrace);

        interface ITestFailure;
    }

    class CTestResult {
        constructor();

        interface ITestResult;
    }

    [deprecated, local]
    class CTestSuite {
        constructor();

        /**
         * Constructs a TestSuite from the given class. Adds all the methods
         * starting with "test" as test cases to the suite.
         * Parts of this method were written at 2337 meters in the Hueffihuette,
         * Kanton Uri
         */
        constructor(
            [in] IClassInfo* theClass);

        /**
         * Constructs a TestSuite from the given class with the given name.
         * @see TestSuite#TestSuite(Class)
         */
        constructor(
            [in] IClassInfo* theClass,
            [in] String name);

        /**
         * Constructs an empty TestSuite.
         */
        constructor(
            [in] String name);

        /**
         * Constructs a TestSuite from the given array of classes.
         * @param classes {@link TestCase}s
         */
        constructor(
            [in] ArrayOf<IClassInfo*>* classes);

        /**
         * Constructs a TestSuite from the given array of classes with the given name.
         * @see TestSuite#TestSuite(Class[])
         */
        constructor(
            [in] ArrayOf<IClassInfo*>* classes,
            [in] String name);

        interface ITest;
        interface ITestSuite;
    }

    } // namespace Framework
    } // namespace Eunit
}
