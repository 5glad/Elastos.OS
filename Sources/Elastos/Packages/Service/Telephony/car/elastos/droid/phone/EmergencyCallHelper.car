module
{
    namespace Elastos {
    namespace Droid {
    namespace Phone {

    interface IEmergencyCallHelper {
        const Int32 MAX_NUM_RETRIES = 6;
        const Int64 TIME_BETWEEN_RETRIES = 5000;  // msec

        // Timeout used with our wake lock (just as a safety valve to make
        // sure we don't hold it forever).
        const Int64 WAKE_LOCK_TIMEOUT = 5 * 60 * 1000;  // 5 minutes in msec

        /**
         * Starts the "emergency call from airplane mode" sequence.
         *
         * This is the (single) external API of the EmergencyCallHelper class.
         * This method is called from the CallController placeCall() sequence
         * if the user dials a valid emergency number, but the radio is
         * powered-off (presumably due to airplane mode.)
         *
         * This method kicks off the following sequence:
         * - Power on the radio
         * - Listen for the service state change event telling us the radio has come up
         * - Then launch the emergency call
         * - Retry if the call fails with an OUT_OF_SERVICE error
         * - Retry if we've gone 5 seconds without any response from the radio
         * - Finally, clean up any leftover state (progress UI, wake locks, etc.)
         *
         * This method is safe to call from any thread, since it simply posts
         * a message to the EmergencyCallHelper's handler (thus ensuring that
         * the rest of the sequence is entirely serialized, and runs only on
         * the handler thread.)
         *
         * This method does *not* force the in-call UI to come up; our caller
         * is responsible for doing that (presumably by calling
         * PhoneApp.displayCallScreen().)
         */
        StartEmergencyCallFromAirplaneModeSequence(
            [in] String number);
    }

    } // namespace Phone
    } // namespace Droid
    } // namespace Elastos
}
