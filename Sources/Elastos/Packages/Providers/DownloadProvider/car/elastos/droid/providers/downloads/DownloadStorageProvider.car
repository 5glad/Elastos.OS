//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Content.Res.IAssetFileDescriptor;
    using interface Elastos.Droid.Database.ICursor;
    using interface Elastos.Droid.Graphics.IPoint;
    using interface Elastos.Droid.Os.ICancellationSignal;
    using interface Elastos.Droid.Os.IParcelFileDescriptor;

    namespace Elastos {
    namespace Droid {
    namespace Providers {
    namespace Downloads {

    /**
     * Presents a {@link DocumentsContract} view of {@link DownloadManager}
     * contents.
     */
    [deprecated]
    interface IDownloadStorageProvider
    {
        OnCreate(
            [out] Boolean* result);

        QueryRoots(
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        CreateDocument(
            [in] String docId,
            [in] String mimeType,
            [in] String displayName,
            [out] String* result);

        DeleteDocument(
            [in] String docId);

        QueryDocument(
            [in] String docId,
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        QueryChildDocuments(
            [in] String docId,
            [in] ArrayOf<String>* projection,
            [in] String sortOrder,
            [out] ICursor** result);

        QueryChildDocumentsForManage(
            [in] String parentDocumentId,
            [in] ArrayOf<String>* projection,
            [in] String sortOrder,
            [out] ICursor** result);

        QueryRecentDocuments(
            [in] String rootId,
            [in] ArrayOf<String>* projection,
            [out] ICursor** result);

        OpenDocument(
            [in] String docId,
            [in] String mode,
            [in] ICancellationSignal* signal,
            [out] IParcelFileDescriptor** result);

        OpenDocumentThumbnail(
            [in] String docId,
            [in] IPoint* sizeHint,
            [in] ICancellationSignal* signal,
            [out] IAssetFileDescriptor** result);
    }

    [local]
    interface IDownloadStorageProviderHelper
    {
        OnDownloadProviderDelete(
            [in] IContext* ctx,
            [in] Int64 id);
    }

    } // namespace Downloads
    } // namespace Providers
    } // namespace Droid
    } // namespace Elastos
}
