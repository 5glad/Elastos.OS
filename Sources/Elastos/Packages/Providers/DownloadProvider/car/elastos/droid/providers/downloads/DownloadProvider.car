//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Content.IContentValues;
    using interface Elastos.Droid.Database.ICursor;
    using interface Elastos.Droid.Net.IUri;
    using interface Elastos.Droid.Os.IParcelFileDescriptor;
    using interface Elastos.IO.IFileDescriptor;
    using interface Elastos.IO.IPrintWriter;

    namespace Elastos {
    namespace Droid {
    namespace Providers {
    namespace Downloads {

    /**
     * Receives system broadcasts (boot, network connectivity)
     */
    [deprecated]
    interface IDownloadProvider
    {
        /**
         * Initializes the content provider when it is created.
         */
        OnCreate(
            [out] Boolean* result);

        /**
         * Returns the content-provider-style MIME types of the various
         * types accessible through this content provider.
         */
        GetType(
            [in] IUri* uri,
            [out] String* result);

        /**
         * Inserts a row in the database
         */
        Insert(
            [in] IUri* uri,
            [in] IContentValues* values,
            [out] IUri** result);

        /**
         * Starts a database query
         */
        Query(
            [in] IUri* uri,
            [in] ArrayOf<String>* projection,
            [in] String selection,
            [in] ArrayOf<String>* selectionArgs,
            [in] String sort,
            [out] ICursor** result);

        /**
         * Updates a row in the database
         */
        Update(
            [in] IUri* uri,
            [in] IContentValues* values,
            [in] String where,
            [in] ArrayOf<String>* whereArgs,
            [out] Int32* result);

        /**
         * Deletes a row in the database
         */
        Delete(
            [in] IUri* uri,
            [in] String where,
            [in] ArrayOf<String>* whereArgs,
            [out] Int32* result);

        /**
         * Remotely opens a file
         */
        OpenFile(
            [in] IUri* uri,
            [in] String mode,
            [out] IParcelFileDescriptor** result);

        Dump(
            [in] IFileDescriptor* fd,
            [in] IPrintWriter* writer,
            [in] ArrayOf<String>* args);

    }

    } // namespace Downloads
    } // namespace Providers
    } // namespace Droid
    } // namespace Elastos
}
