//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Content.IIntent;
    using interface Elastos.Droid.Os.IBinder;
    using interface Elastos.IO.IFileDescriptor;
    using interface Elastos.IO.IPrintWriter;

    namespace Elastos {
    namespace Droid {
    namespace Providers {
    namespace Downloads {

    /**
     * Performs background downloads as requested by applications that use
     * {@link DownloadManager}. Multiple start commands can be issued at this
     * service, and it will continue running until no downloads are being actively
     * processed. It may schedule alarms to resume downloads in future.
     * <p>
     * Any database updates important enough to initiate tasks should always be
     * delivered through {@link Context#startService(Intent)}.
     */
    [deprecated]
    interface IDownloadService
    {
        /**
         * Returns an IBinder instance when someone wants to connect to this
         * service. Binding to this service is not allowed.
         *
         * @throws UnsupportedOperationException
         */
        OnBind(
            [in] IIntent* i,
            [out] IBinder** result);

        /**
         * Initializes the service when it is first created
         */
        OnCreate();

        OnStartCommand(
            [in] IIntent* intent,
            [in] Int32 flags,
            [in] Int32 startId,
            [out] Int32* result);

        OnDestroy();

        /**
         * Enqueue an {@link #updateLocked()} pass to occur in future.
         */
        EnqueueUpdate();

        Dump(
            [in] IFileDescriptor* fd,
            [in] IPrintWriter* writer,
            [in] ArrayOf<String>* args);
    }

    } // namespace Downloads
    } // namespace Providers
    } // namespace Droid
    } // namespace Elastos
}
