//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    importlib("Elastos.CoreLibrary.eco");
    importlib("Elastos.Droid.Core.eco");

    merge("car/elastos/droid/providers/downloads/DownloadDrmHelper.car");
    merge("car/elastos/droid/providers/downloads/DownloadIdleService.car");
    merge("car/elastos/droid/providers/downloads/SystemFacade.car");
    merge("car/elastos/droid/providers/downloads/DownloadInfo.car");
    merge("car/elastos/droid/providers/downloads/DownloadNotifier.car");
    merge("car/elastos/droid/providers/downloads/DownloadProvider.car");
    merge("car/elastos/droid/providers/downloads/DownloadReceiver.car");
    merge("car/elastos/droid/providers/downloads/DownloadScanner.car");
    merge("car/elastos/droid/providers/downloads/DownloadService.car");
    merge("car/elastos/droid/providers/downloads/DownloadStorageProvider.car");
    merge("car/elastos/droid/providers/downloads/DownloadThread.car");
    merge("car/elastos/droid/providers/downloads/Helpers.car");
    merge("car/elastos/droid/providers/downloads/OpenHelper.car");
    merge("car/elastos/droid/providers/downloads/SizeLimitActivity.car");
    merge("car/elastos/droid/providers/downloads/StorageUtils.car");

    using interface Elastos.Core.IRunnable;
    using interface Elastos.Droid.App.IService;
    using interface Elastos.Droid.App.IActivity;
    using interface Elastos.Droid.App.Job.IJobService;
    using interface Elastos.Droid.Content.IContextWrapper;
    using interface Elastos.Droid.Content.IComponentCallbacks;
    using interface Elastos.Droid.Content.IComponentCallbacks2;
    using interface Elastos.Droid.Content.IContentProvider;
    using interface Elastos.Droid.Content.IBroadcastReceiver;
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Media.IMediaScannerConnectionClient;
    using interface Elastos.Droid.Net.IINetworkPolicyListener;
    using interface Elastos.Droid.Os.IBinder;
    using interface Elastos.Droid.View.IContextThemeWrapper;
    using interface Elastos.Droid.View.ILayoutInflaterFactory;
    using interface Elastos.Droid.View.ILayoutInflaterFactory2;
    using interface Elastos.Droid.View.IWindowCallback;
    using interface Elastos.Droid.View.IKeyEventCallback;
    using interface Elastos.Droid.View.IViewOnCreateContextMenuListener;
    using interface Elastos.Droid.View.IOnWindowDismissedCallback;

    namespace Elastos {
    namespace Droid {
    namespace Providers {
    namespace Downloads {

    singleton class CDownloadDrmHelper {
        interface IDownloadDrmHelper;
    }

    class CDownloadIdleService {
        constructor();
        
        interface IService;
        interface IComponentCallbacks;
        interface IComponentCallbacks2;
        interface IJobService;
        interface IDownloadIdleService;
    }

    [local]
    class CDownloadInfo {
        constructor(
            [in] IContext* ctx,
            [in] ISystemFacade* systemFacade,
            [in] IDownloadNotifier* notifier);

        interface IDownloadInfo;
    }

    [local]
    class CDownloadNotifier {
        constructor(
            [in] IContext* context);

        interface IDownloadNotifier;
    }

    class CDownloadProvider {
        constructor();

        interface IContentProvider;
        interface IComponentCallbacks;
        interface IComponentCallbacks2;
        interface IDownloadProvider;
    }

    class CDownloadReceiver {
        constructor();

        interface IBroadcastReceiver;
        interface IDownloadReceiver;
    }

    [local]
    class CDownloadScanner {
        constructor(
            [in] IContext* context);

        interface IDownloadScanner;
        interface IMediaScannerConnectionClient;
    }

    class CDownloadService {
        constructor();

        interface IService;
        interface IDownloadService;
    }

    class CDownloadStorageProvider {
        constructor();

        interface IContentProvider;
        interface IDownloadStorageProvider;
    }

    [local]
    class CDownloadThread {
        constructor(
            [in] IContext* ctx,
            [in] ISystemFacade* systemFacade,
            [in] IDownloadNotifier* notifier,
            [in] IDownloadInfo* info);

        interface IRunnable;
        interface IDownloadThread;
    }

    class CNetworkPolicyListener {
        constructor(
            [in] IDownloadThread* host);

        interface IINetworkPolicyListener;
        interface IBinder;
    }

    singleton class CHelpers {
        interface IHelpers;
    }

    singleton class COpenHelper {
        interface IOpenHelper;
    }

    [local]
    class CSizeLimitActivity {
        constructor();

        interface ISizeLimitActivity;
        interface IActivity;
        interface ILayoutInflaterFactory;
        interface ILayoutInflaterFactory2;
        interface IWindowCallback;
        interface IKeyEventCallback;
        interface IViewOnCreateContextMenuListener;
        interface IComponentCallbacks;
        interface IComponentCallbacks2;
        interface IOnWindowDismissedCallback;
        interface IContextThemeWrapper;
        interface IContextWrapper;
        interface IContext;
    }

    singleton class CStorageUtils {
        interface IStorageUtils;
    }

    } // namespace Downloads
    } // namespace Providers
    } // namespace Droid
    } // namespace Elastos
}
