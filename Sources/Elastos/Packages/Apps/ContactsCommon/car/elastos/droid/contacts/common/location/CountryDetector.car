//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    namespace Elastos{
    namespace Apps {
    namespace Contacts {
    namespace Common {
    namespace Location {

    interface ICountryDetector {
        const String KEY_PREFERENCE_TIME_UPDATED = "preference_time_updated";
        const String KEY_PREFERENCE_CURRENT_COUNTRY = "preference_current_country";

        /**
         * Factory method for {@link CountryDetector} that allows the caller to provide mock objects.
         */
        // @NeededForTesting
        GetInstanceForTest(
            [in] IContext* ctx,
            [in] ITelephonyManager* telephonyManager,
            [in] ILocationManager* locationManager,
            [in] ILocaleProvider* localeProvider,
            [in] IGeocoder* geocoder,
            [out] ICountryDetector** detector);

        GetCurrentCountryIso(
            [out] String* iso);

    }

    interface ICountryDetectorHelper {
        RegisterForLocationUpdates(
            [in] IContext* ctx,
            [in] ILocationManager* locationManager);

         /**
         * Returns the instance of the country detector. {@link #initialize(Context)} must have been
         * called previously.
         *
         * @return the initialized country detector.
         */
        GetInstance(
            [in] IContext* ctx,
            [out] ICountryDetector** detector);
    }

    interface ICountryDetectorLocaleProvider {
        GetDefaultLocale(
            [out] ILocale** locale);
    }

    } // Location
    } // Common
    } // Contacts
    } // Apps
    } // Elastos

}
