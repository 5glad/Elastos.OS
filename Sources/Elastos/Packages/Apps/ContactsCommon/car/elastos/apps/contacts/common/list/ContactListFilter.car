
module
{

    namespace Elastos{
    namespace Apps {
    namespace Contacts {
    namespace Common {
    namespace List {

    interface IContactListFilter {
        const Int32 FILTER_TYPE_DEFAULT = -1;
        const Int32 FILTER_TYPE_ALL_ACCOUNTS = -2;
        const Int32 FILTER_TYPE_CUSTOM = -3;
        const Int32 FILTER_TYPE_STARRED = -4;
        const Int32 FILTER_TYPE_WITH_PHONE_NUMBERS_ONLY = -5;
        const Int32 FILTER_TYPE_SINGLE_CONTACT = -6;

        const Int32 FILTER_TYPE_ACCOUNT = 0;

        /**
         * Returns true if this filter is based on data and may become invalid over time.
         */
        IsValidationRequired(
            [out] Boolean result);

        /**
         * Returns a string that can be used as a stable persistent identifier for this filter.
         */
        GetId(
            [out] String* id);

        /**
         * Adds the account query parameters to the given {@code uriBuilder}.
         *
         * @throws IllegalStateException if the filter type is not {@link #FILTER_TYPE_ACCOUNT}.
         */
        AddAccountQueryParameterToUrl(
            [in] IUriBuilder* uriBuilder,
            [out] IUriBuilder** result);

        ToDebugString(
            [out] String* debugStr);
    }

    interface IContactListFilterHelper {
        CreateFilterWithType(
            [in] Int32 filterType,
            [out] IContactListFilter** filter);

        CreateAccountFilter(
            [in] String accountType,
            [in] String accountName,
            [in] String dataSet,
            [in] IDrawable* icon,
            [out] IContactListFilter** filter);

        /**
         * Store the given {@link ContactListFilter} to preferences. If the requested filter is
         * of type {@link #FILTER_TYPE_SINGLE_CONTACT} then do not save it to preferences because
         * it is a temporary state.
         */
        StoreToPreferences(
            [in] ISharedPreferences* prefs,
            [in] IContactListFilter* filter);

        /**
         * Try to obtain ContactListFilter object saved in SharedPreference.
         * If there's no info there, return ALL filter instead.
         */
        RestoreDefaultPreferences(
            [in] ISharedPreferences* prefs,
            [out] IContactListFilter** filter);

        FilterTypeToString(
            [in] Int filterType,
            [out] String* result);
    }

    } // List
    } // Common
    } // Contacts
    } // Apps
    } // Elastos

}
