//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Droid.Graphics.IBitmap;

    interface Elastos.Droid.Launcher2.IShortcutInfo;
    interface Elastos.Droid.Launcher2.IIconCache;

    namespace Elastos {
    namespace Droid {
    namespace Launcher2 {

    /**
     * TextView that draws a bubble behind the text. We cannot use a LineBackgroundSpan
     * because we want to make the bubble taller than the text and TextView's clip is
     * too aggressive.
     *
     * @invoke
     * interface Elastos.Droid.View.IView
     * interface Elastos.Droid.View.OnPreDrawListener
     * interface Elastos.Droid.View.IKeyEventCallback
     * interface Elastos.Droid.View.Accessibility.IAccessibilityEventSource
     * interface Elastos.Droid.Graphics.Drawable.IDrawableCallback
     * interface ITextView
    */
    interface IBubbleTextView {
        const Float CORNER_RADIUS = 4.0;
        const Float SHADOW_LARGE_RADIUS = 4.0;
        const Float SHADOW_SMALL_RADIUS = 1.75;
        const Float SHADOW_Y_OFFSET = 2.0;
        const Int32 SHADOW_LARGE_COLOUR = 0xDD000000;
        const Int32 SHADOW_SMALL_COLOUR = 0xCC000000;
        const Float PADDING_H = 8.0;
        const Float PADDING_V = 3.0;

        ApplyFromShortcutInfo(
            [in] IShortcutInfo* info,
            [in] IIconCache* iconCache);

        SetStayPressed(
            [in] Boolean stayPressed);

        SetCellLayoutPressedOrFocusedIcon();

        ClearPressedOrFocusedBackground();

        GetPressedOrFocusedBackground(
            [out] IBitmap** map);

        GetPressedOrFocusedBackgroundPadding(
            [out] Int32* res);
    }

    } // namespace Launcher2
    } // namespace Droid
    } // namespace Elastos
}
