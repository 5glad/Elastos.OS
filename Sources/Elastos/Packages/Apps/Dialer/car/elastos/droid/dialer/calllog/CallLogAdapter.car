//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Droid.Dialer.CallLog.ICallLogListItemView;
//    interface Elastos.Droid.Dialer.CallLog.ICallLogListItemViews;

    namespace Elastos {
    namespace Droid {
    namespace Dialer {
    namespace CallLog {

    /** The enumeration of {@link android.os.AsyncTask} objects used in this class. */
    enum CallLogAdapterTasks {

        CallLogAdapterTasks_REMOVE_CALL_LOG_ENTRIES = 0

    }

    /** Interface used to inform a parent UI element that a list item has been expanded. */
    interface ICallItemExpandedListener {

        /**
         * @param view The {@link CallLogListItemView} that represents the item that was clicked
         *         on.
         */
        OnItemExpanded(
            [in] ICallLogListItemView* view);

        /**
         * Retrieves the call log view for the specified call Id.  If the view is not currently
         * visible, returns null.
         *
         * @param callId The call Id.
         * @return The call log view.
         */
        GetViewForCallId(
            [in] Int64 callId,
            [out] ICallLogListItemView** view);

    }

    /** Interface used to initiate a refresh of the content. */
    interface ICallFetcher {

        FetchCalls();

    }

    /** Implements onClickListener for the report button. */
    interface ICallLogAdapterOnReportButtonClickListener {

        OnReportButtonClick(
            [in] String number);

    }

    interface INumberWithCountryIso {
    }

    interface IContactInfoRequest {
    }

    /**
     * @Involve
     * interface IGroupingListAdapter
     * interface IOnPreDrawListener
     * interface ICallLogGroupBuilderGroupCreator
     */
    interface ICallLogAdapter {

        SetLoading(
            [in] Boolean loading);

        /**
         * Stops the background thread that processes updates and cancels any
         * pending requests to start it.
         */
        StopRequestProcessing();

        InvalidateCache();

        /*
         * Get the number from the Contacts, if available, since sometimes
         * the number provided by caller id may not be formatted properly
         * depending on the carrier (roaming) in use at the time of the
         * incoming call.
         * Logic : If the caller-id number starts with a "+", use it
         *         Else if the number in the contacts starts with a "+", use that one
         *         Else if the number in the contacts is longer, use that one
         */
        GetBetterNumberFromContacts(
            [in] String number,
            [in] String countryIso,
            [out] String* result);

        OnBadDataReported(
            [in] String number);

    }

    } //CallLog
    } //Dialer
    } //Droid
    } //Elastos
}
