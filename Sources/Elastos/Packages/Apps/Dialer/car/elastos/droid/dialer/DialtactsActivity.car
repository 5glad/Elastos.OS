//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace Dialer {

    /**
     * @Involve
     * interface Elastos.Droid.Content.IContext
     * interface Elastos.Droid.Content.IContextWrapper
     * interface Elastos.Droid.View.IContextThemeWrapper
     * interface ILayoutInflaterFactory
     * interface ILayoutInflaterFactory2
     * interface IWindowCallback
     * interface IKeyEventCallback
     * interface IViewOnCreateContextMenuListener
     * interface IComponentCallbacks
     * interface IComponentCallbacks2
     * interface IOnWindowDismissedCallback
     * interface ITransactionSafeActivity
     * interface IOnDialpadQueryChangedListener
     * interface ISpeedDialFragmentHostInterface
     * interface IListsFragmentHostInterface
     * interface ISearchFragmentHostInterface
     * interface IOnDragDropListener
     * interface IActionBarControllerActivityUi
     */
    interface IDialtactsActivity {
        const String SHARED_PREFS_NAME = "com.android.dialer_preferences";

        /**
         * Callback from child DialpadFragment when the dialpad is shown.
         */
        OnDialpadShown();

        /**
         * Initiates animations and other visual updates to hide the dialpad. The fragment is hidden in
         * a callback after the hide animation ends.
         * @see #commitDialpadFragmentHide
         */
        HideDialpadFragment(
            [in] Boolean animate,
            [in] Boolean clearDialpad);

        /**
         * Returns an appropriate call origin for this Activity. May return null when no call origin
         * should be used (e.g. when some 3rd party application launched the screen. Call origin is
         * for remembering the tab in which the user made a phone call, so the external app's DIAL
         * request should not be counted.)
         */
        GetCallOrigin(
            [out] String* origin);

        IsDialpadShown(
            [out] Boolean* result);
    }

    } //Dialer
    } //Droid
    } //Elastos
}
