
module
{
    using interface Elastos.Droid.Content.IContext;
    using interface Elastos.Droid.Content.IContentResolver;
    interface Elastos.Apps.Dialer.CallLog.IDefaultVoicemailNotifierNewCallsQuery;
    interface Elastos.Apps.Dialer.CallLog.IPhoneNumberDisplayHelper;

    namespace Elastos {
    namespace Apps {
    namespace Dialer {
    namespace CallLog {

    interface IDefaultVoicemailNotifier {
    }

    [deprecated, local]
    interface IDefaultVoicemailNotifierHelper {
        /** Returns the singleton instance of the {@link DefaultVoicemailNotifier}. */
        GetInstance(
            [in] IContext* ctx,
            [out] IDefaultVoicemailNotifier** notifier);

        /** Create a new instance of {@link NewCallsQuery}. */
        CreateNewCallsQuery(
            [in] IContentResolver* contentResolver,
            [out] IDefaultVoicemailNotifierNewCallsQuery** query);

        /**
         * Create a new PhoneNumberHelper.
         * <p>
         * This will cause some Disk I/O, at least the first time it is created, so it should not be
         * called from the main thread.
         */
        CreatePhoneNumberHelper(
            [in] IContext* ctx,
            [out] IPhoneNumberDisplayHelper** helper);
    }

    interface IDefaultVoicemailNotifierNewCall {
    }

    /** Allows determining the new calls for which a notification should be generated. */
    interface IDefaultVoicemailNotifierNewCallsQuery {
        /**
         * Returns the new calls for which a notification should be generated.
         */
        Query(
            [out, callee] ArrayOf<IDefaultVoicemailNotifierNewCall*>* newCalls);
    }

    /** Allows determining the name associated with a given phone number. */
    interface IDefaultVoicemailNotifierNameLookupQuery {
        /**
         * Returns the name associated with the given number in the contacts database, or null if
         * the number does not correspond to any of the contacts.
         * <p>
         * If there are multiple contacts with the same phone number, it will return the name of one
         * of the matching contacts.
         */
        Query(
            [in] String number,
            [out] String* str);
    }

    } //CallLog
    } //Dialer
    } //Apps
    } //Elastos
}
