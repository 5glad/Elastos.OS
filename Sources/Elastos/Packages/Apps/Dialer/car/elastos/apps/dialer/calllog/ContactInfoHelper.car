
module
{
    interface Elastos.Apps.Dailer.CallLog.IContactInfo;

    namespace Elastos{
    namespace Apps {
    namespace Dailer {
    namespace CallLog {

    interface IContactInfoHelper {
        /**
         * Returns the contact information for the given number.
         * <p>
         * If the number does not match any contact, returns a contact info containing only the number
         * and the formatted number.
         * <p>
         * If an error occurs during the lookup, it returns null.
         *
         * @param number the number to look up
         * @param countryIso the country associated with this number
         */
        LookupNumber(
            [in] String number,
            [in] String countryIso,
            [out] IContactInfo** result);

        /**
         * Given a contact's sourceType, return true if the contact is a business
         *
         * @param sourceType sourceType of the contact. This is usually populated by
         *        {@link #mCachedNumberLookupService}.
         */
        IsBusiness(
            [in] Int32 sourceType,
            [out] Boolean* result);

         /**
         * This function looks at a contact's source and determines if the user can
         * mark caller ids from this source as invalid.
         *
         * @param sourceType The source type to be checked
         * @param objectId The ID of the Contact object.
         * @return true if contacts from this source can be marked with an invalid caller id
         */
        CanReportAsInvalid(
            [in] Int32 sourceType,
            [in] String objectId,
            [out] Boolean* result);
    }

    } //CallLog
    } //Dailer
    } //Apps
    } //Elastos
}
