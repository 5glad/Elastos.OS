module
{
    namespace Elastos{
    namespace Apps {
    namespace Dailer {
    namespace CallLog {

    interface ICallLogAdapterNumberWithCountryIso {

    }

    interface ICallLogAdapterContactInfoRequest {

    }

    /** Interface used to inform a parent UI element that a list item has been expanded. */
    interface ICallLogAdapterCallItemExpandedListener {
        /**
         * @param view The {@link CallLogListItemView} that represents the item that was clicked
         *         on.
         */
        OnItemExpanded(
            [in] ICallLogListItemView* view);

        /**
         * Retrieves the call log view for the specified call Id.  If the view is not currently
         * visible, returns null.
         *
         * @param callId The call Id.
         * @return The call log view.
         */
        GetViewForCallId(
            [in] Int64 callId,
            [out] ICallLogListItemView** view);
    }

    /** Interface used to initiate a refresh of the content. */
    interface ICallLogAdapterCallFetcher {
        FetchCalls();
    }

    /** Implements onClickListener for the report button. */
    interface ICallLogAdapterOnReportButtonClickListener {
        OnReportButtonClick(
            [in] String number);
    }

    /**
     * @Involve
     * interface IGroupingListAdapter
     */
    interface ICallLogAdapter {
        /** The enumeration of {@link android.os.AsyncTask} objects used in this class. */
        enum Tasks {
            REMOVE_CALL_LOG_ENTRIES,
        }

        SetLoading(
            [in] Boolean loading);

        /**
         * Stops the background thread that processes updates and cancels any
         * pending requests to start it.
         */
        StopRequestProcessing();

        InvalidateCache();

        /*
         * Get the number from the Contacts, if available, since sometimes
         * the number provided by caller id may not be formatted properly
         * depending on the carrier (roaming) in use at the time of the
         * incoming call.
         * Logic : If the caller-id number starts with a "+", use it
         *         Else if the number in the contacts starts with a "+", use that one
         *         Else if the number in the contacts is longer, use that one
         */
        GetBetterNumberFromContacts(
            [in] String number,
            [in] String countryIso,
            [out] String* number);

        OnBadDataReported(
            [in] String number);
    }

    interface ICallLogAdapterHelper {
        ExpandVoicemailTranscriptionView(
            [in] ICallLogListItemViews* views,
            [in] Boolean isExpanded);
    }

    } //CallLog
    } //Dailer
    } //Apps
    } //Elastos
}
