module
{
    namespace Elastos{
    namespace Apps {
    namespace Dailer {
    namespace List {

    /**
     * @Involve
     * interface Elastos.Apps.Contacts.Common.List.IPinnedHeaderListAdapter
     * interface Elastos.Apps.Contacts.Common.List.IIndexerListAdapter
     * interface Elastos.Apps.Contacts.Common.List.IContactEntryListAdapter
     * interface Elastos.Apps.Contacts.Common.List.IPhoneNumberListAdapter
     */
    interface IDialerPhoneNumberListAdapter {
        const Int32 SHORTCUT_INVALID = -1;
        const Int32 SHORTCUT_DIRECT_CALL = 0;
        const Int32 SHORTCUT_ADD_NUMBER_TO_CONTACTS = 1;
        const Int32 SHORTCUT_MAKE_VIDEO_CALL = 2;

        const Int32 SHORTCUT_COUNT = 3;

        /**
         * @return The number of enabled shortcuts. Ranges from 0 to a maximum of SHORTCUT_COUNT
         */
        GetShortcutCount(
            [out] Int32* count);

        /**
         * @param position The position of the item
         * @return The enabled shortcut type matching the given position if the item is a
         * shortcut, -1 otherwise
         */
        GetShortcutTypeFromPosition(
            [in] Int32 position,
            [out] Int32* type);

        /**
         * @return True if the shortcut state (disabled vs enabled) was changed by this operation
         */
        SetShortcutEnabled(
            [in] Int32 shortcutType,
            [in] Boolean visible,
            [out] Boolean* enabled);

        GetFormattedQueryString(
            [out] String* str);
    }

    } //List
    } //Dailer
    } //Apps
    } //Elastos
}
