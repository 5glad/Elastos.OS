/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

#ifndef __Elastos_Droid_Dialer_R_H__
#define __Elastos_Droid_Dialer_R_H__
#include <elatypes.h>
namespace Elastos {
namespace Droid {
namespace Dialer {
class ECO_PUBLIC R {
    public: class array {
        /**  Background colors for LetterTileDrawables. This set of colors is a subset of
        https://spec.googleplex.com/quantumpalette#extended which passes Google Accessibility
        Requirements for the color in question on white with >= 3.0 contrast. We used
        http://leaverou.github.io/contrast-ratio/#white-on-%23db4437 to double-check the contrast.

        These colors are also used by MaterialColorMapUtils to generate primary activity colors.
    
         */
        public: static const int letter_tile_colors = 0x7f0e0000;
        /**  Darker versions of letter_tile_colors, two shades darker. These colors are used
        for settings secondary activity colors. 
         */
        public: static const int letter_tile_colors_dark = 0x7f0e0001;
    };
    public: class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int activated_background = 0x7f01000b;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_header_color = 0x7f010004;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_primary_background_color = 0x7f010001;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_primary_text_color = 0x7f010000;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_secondary_background_color = 0x7f010003;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_secondary_text_color = 0x7f010002;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_voicemail_status_action_text_color = 0x7f010008;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_voicemail_status_background_color = 0x7f010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_voicemail_status_height = 0x7f010005;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int call_log_voicemail_status_text_color = 0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int contact_browser_background = 0x7f010025;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int contact_browser_list_padding_left = 0x7f010023;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int contact_browser_list_padding_right = 0x7f010024;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int direction = 0x7f010026;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int favorites_padding_bottom = 0x7f010028;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_background_color = 0x7f010018;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_data_width_weight = 0x7f010021;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_gap_between_image_and_text = 0x7f010011;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_gap_between_label_and_data = 0x7f010012;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_header_height = 0x7f01001c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_header_text_color = 0x7f01001a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_header_text_indent = 0x7f010019;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_header_text_size = 0x7f01001b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_height = 0x7f010009;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_label_width_weight = 0x7f010022;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_name_text_color = 0x7f01001d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_name_text_size = 0x7f01001e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_padding_bottom = 0x7f01000f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_padding_left = 0x7f010010;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_padding_right = 0x7f01000e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_padding_top = 0x7f01000d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_photo_size = 0x7f010015;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_prefix_highlight_color = 0x7f010017;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_presence_icon_margin = 0x7f010013;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_presence_icon_size = 0x7f010014;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_profile_photo_size = 0x7f010016;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_text_indent = 0x7f01001f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_item_text_offset_top = 0x7f010020;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int list_section_header_height = 0x7f01000a;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public: static const int ratio = 0x7f010027;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public: static const int section_header_background = 0x7f01000c;
    };
    public: class bool_ {
        /**  Flag indicating whether Contacts app is allowed to export contacts to SDCard 
         */
        public: static const int config_allow_export_to_sdcard = 0x7f09000b;
        /**  Flag indicating whether Contacts app is allowed to import contacts from SDCard 
         */
        public: static const int config_allow_import_from_sdcard = 0x7f090002;
        /**  Flag indicating whether Contacts app is allowed to share contacts with devices outside 
         */
        public: static const int config_allow_share_visible_contacts = 0x7f09000c;
        /**  If true, enable the "import contacts from SIM" feature if the device
         has an appropriate SIM or ICC card.
         Setting this flag to false in a resource overlay allows you to
         entirely disable SIM import on a per-product basis. 
         */
        public: static const int config_allow_sim_import = 0x7f09000a;
        /**  If true, vcard importer shows a dialog which asks the user whether the user wants
    to import all vcard files in SDCard or select one vcard file. If false, the dialog is
    skipped and the importer asks the user to choose one vcard file.
    If config_import_all_vcard_from_sdcard_automatically is set true, this configuration
    is ignored. 
         */
        public: static const int config_allow_users_select_all_vcard_import = 0x7f090004;
        /**  If true, the default sort order is primary (i.e. by given name) 
         */
        public: static const int config_default_display_order_primary = 0x7f090008;
        /**  If true, the default sort order is primary (i.e. by given name) 
         */
        public: static const int config_default_sort_order_primary = 0x7f090006;
        /**  If true, an option is shown in Display Options UI to choose a name display order 
         */
        public: static const int config_display_order_user_changeable = 0x7f090007;
        /**  If true, the order of name fields in the editor is primary (i.e. given name first) 
         */
        public: static const int config_editor_field_order_primary = 0x7f090009;
        /**  If true, enable vibration (haptic feedback) for dialer key presses.
         The pattern is set on a per-platform basis using config_virtualKeyVibePattern.
         TODO: If enough users are annoyed by this, we might eventually
         need to make it a user preference rather than a per-platform
          resource. 
         */
        public: static const int config_enable_dialer_key_vibration = 0x7f090000;
        /**  If true, all vcard files are imported from SDCard without asking a user.
    If not, dialog shows to let the user to select whether all vcard files are imported or not.
    If the user selects "not", then the application ask the user to select a file.
         */
        public: static const int config_import_all_vcard_from_sdcard_automatically = 0x7f090003;
        /**  If true, show an onscreen "Dial" button in the dialer.
         In practice this is used on all platforms even the ones with hard SEND/END
         keys, but for maximum flexibility it's controlled by a flag here
         (which can be overridden on a per-product basis.) 
         */
        public: static const int config_show_onscreen_dial_button = 0x7f090001;
        /**  If true, an option is shown in Display Options UI to choose a sort order 
         */
        public: static const int config_sort_order_user_changeable = 0x7f090005;
    };
    public: class color {
        /**  Background color of action bars. Ensure this stays in sync with packages/Telephony
         actionbar_background_color. 
         */
        public: static const int actionbar_background_color = 0x7f080036;
        /**  Darker version of the actionbar color. Used for the status bar and navigation bar colors. 
         */
        public: static const int actionbar_background_color_dark = 0x7f080037;
        /**  Color for icons in the actionbar 
 Color for icons in the actionbar 
         */
        public: static const int actionbar_icon_color = 0x7f08001f;
        /**  Color of action bar text. Ensure this stays in sync with packages/Telephony
    phone_settings_actionbar_text_color
         */
        public: static const int actionbar_text_color = 0x7f08003c;
        public: static const int actionbar_unselected_text_color = 0x7f08003d;
        /**  Color for answered or outgoing call icons. 
         */
        public: static const int answered_call = 0x7f08001e;
        public: static const int background_dialer_details_list_items = 0x7f080012;
        /**  Background color of new dialer activity 
         */
        public: static const int background_dialer_light = 0x7f08000f;
        /**  Background color of dialer list items (contacts, call log entries) 
         */
        public: static const int background_dialer_list_items = 0x7f080011;
        /**  Background color for search results and call details 
         */
        public: static const int background_dialer_results = 0x7f080010;
        /**  White background for dialer 
         */
        public: static const int background_dialer_white = 0x7f08000e;
        /**  Color of the background of the contact detail and editor pages 
         */
        public: static const int background_primary = 0x7f080043;
        public: static const int call_log_expanded_background_color = 0x7f08001c;
        public: static const int call_log_extras_text_color = 0x7f08000a;
        /**  Color of the text describing an unconsumed missed call. 
         */
        public: static const int call_log_missed_call_highlight_color = 0x7f080007;
        /**  Color of the text describing an unconsumed voicemail. 
         */
        public: static const int call_log_voicemail_highlight_color = 0x7f080008;
        public: static const int contact_all_list_background_color = 0x7f080044;
        public: static const int contact_list_name_text_color = 0x7f080016;
        /**  Color of the contact name in favorite tiles 
         */
        public: static const int contact_tile_name_color = 0x7f080015;
        /**   Color of the semi-transparent shadow box on contact tiles 
         */
        public: static const int contact_tile_shadow_box_color = 0x7f08002d;
        /**  Color of the bottom border below the contacts grid on the main dialer screen. 
         */
        public: static const int contacts_grid_bottom_border_color = 0x7f08001b;
        public: static const int dialer_dialpad_touch_tint = 0x7f080020;
        public: static const int dialer_green_highlight_color = 0x7f080003;
        public: static const int dialer_red_highlight_color = 0x7f080002;
        /**   Primary text color in the Dialer 
         */
        public: static const int dialtacts_primary_text_color = 0x7f080000;
        /**  Secondary text color in the Dialer 
 Secondary text color in the Phone app 
         */
        public: static const int dialtacts_secondary_text_color = 0x7f080001;
        /**  Color of the theme of the Dialer app 
         */
        public: static const int dialtacts_theme_color = 0x7f08002b;
        public: static const int empty_list_text_color = 0x7f080018;
        /**  Color of the 1dp divider that separates favorites 
         */
        public: static const int favorite_contacts_separator_color = 0x7f080013;
        public: static const int floating_action_button_touch_tint = 0x7f080021;
        public: static const int focus_color = 0x7f080023;
        /**  Color of the title to the Frequently Contacted section 
         */
        public: static const int frequently_contacted_title_color = 0x7f08003b;
        /**  Background color corresponding to the holo list 9-patch. 
         */
        public: static const int holo_list_background_color = 0x7f080022;
        /**  Color of image view placeholder. 
         */
        public: static const int image_placeholder = 0x7f08002c;
        /**  Standard color for selected items. 
         */
        public: static const int item_selected = 0x7f08000d;
        public: static const int letter_tile_default_color = 0x7f080034;
        public: static const int letter_tile_font_color = 0x7f080035;
        /**  Divider color for header separator 
         */
        public: static const int main_header_separator_color = 0x7f080028;
        /**  Color of actions in expanded call log entries.  This text color represents actions such
         as call back, play voicemail, etc. 
 <color name="call_log_action_text">@color/dialer_theme_color</color> 
 Color for missed call icons. 
         */
        public: static const int missed_call = 0x7f08001d;
        /**  Color of the theme of the People app 
         */
        public: static const int people_app_theme_color = 0x7f08002a;
        /**   Color of the status message for starred contacts in the People app 
         */
        public: static const int people_contact_tile_status_color = 0x7f08002e;
        public: static const int popup_menu_color = 0x7f080045;
        /**  Divider color for header separator 
         */
        public: static const int primary_text_color = 0x7f080025;
        /**  The default color used for tinting photos when no color can be extracted via Palette,
            this is Blue Grey 500 
         */
        public: static const int quickcontact_default_photo_tint_color = 0x7f080032;
        /**  The default secondary color when no color can be extracted via Palette,
            this is Blue Grey 700 
         */
        public: static const int quickcontact_default_photo_tint_color_dark = 0x7f080033;
        /**  Tint of the recent card phone icon 
         */
        public: static const int recent_call_log_item_phone_icon_tint = 0x7f080009;
        /**  Text color for the "Remove" text when a contact is dragged on top of the remove view 
         */
        public: static const int remove_highlighted_text_color = 0x7f08001a;
        public: static const int remove_text_color = 0x7f080019;
        /**  Color of ripples used by Theme.Material. Taken from res/values/colors_material.xml 
         */
        public: static const int ripple_material_dark = 0x7f080024;
        public: static const int search_shortcut_background_color = 0x7f080041;
        public: static const int search_shortcut_icon_color = 0x7f080042;
        /**  Background color of the search box 
         */
        public: static const int searchbox_background_color = 0x7f08003f;
        public: static const int searchbox_hint_text_color = 0x7f080040;
        public: static const int searchbox_icon_tint = 0x7f080014;
        /**  Text color of the search box text as entered by user  
         */
        public: static const int searchbox_text_color = 0x7f08003e;
        /**  Divider color for header separator 
         */
        public: static const int secondary_header_separator_color = 0x7f080029;
        public: static const int secondary_text_color = 0x7f080026;
        /**  Text color for section header. 
         */
        public: static const int section_header_text_color = 0x7f080027;
        public: static const int setting_background_color = 0x7f080006;
        /**  Color for the setting text. 
         */
        public: static const int setting_primary_color = 0x7f080004;
        /**  Color for the setting description text. 
         */
        public: static const int setting_secondary_color = 0x7f080005;
        public: static const int shortcut_overlay_text_background = 0x7f08002f;
        public: static const int tab_accent_color = 0x7f080039;
        public: static const int tab_ripple_color = 0x7f080038;
        public: static const int tab_selected_underline_color = 0x7f08003a;
        public: static const int tab_text_color = 0x7f080046;
        public: static const int textColorIconOverlay = 0x7f080030;
        public: static const int textColorIconOverlayShadow = 0x7f080031;
        /**  Undo dialogue color 
         */
        public: static const int undo_dialogue_text_color = 0x7f080017;
        /**  Colour of voicemail progress bar to the left of position indicator. 
         */
        public: static const int voicemail_playback_seek_bar_already_played = 0x7f08000c;
        /** 
         Colour of voicemail progress bar to the right of position indicator.
         Same as the background color of the dialer
    
         */
        public: static const int voicemail_playback_seek_bar_yet_to_play = 0x7f08000b;
    };
    public: class dimen {
        public: static const int action_bar_elevation = 0x7f070031;
        /**  Height of the actionBar - this is 8dps bigger than the platform standard to give more
    room to the search box
         */
        public: static const int action_bar_height = 0x7f07002f;
        public: static const int action_bar_height_large = 0x7f070030;
        /**  actionbar height + tab height 
         */
        public: static const int actionbar_and_tab_height = 0x7f070033;
        public: static const int actionbar_contentInsetStart = 0x7f070034;
        /**  Match call_button_height to Phone's dimens/in_call_end_button_height 
         */
        public: static const int call_button_height = 0x7f070018;
        public: static const int call_detail_bottom_margin = 0x7f070011;
        public: static const int call_detail_button_spacing = 0x7f07000e;
        public: static const int call_detail_header_bottom_margin = 0x7f070013;
        public: static const int call_detail_header_top_margin = 0x7f070012;
        public: static const int call_detail_horizontal_margin = 0x7f07000f;
        public: static const int call_detail_top_margin = 0x7f070010;
        public: static const int call_detail_translation_z = 0x7f070014;
        /**  Height of the call log actions section for each call log entry 
         */
        public: static const int call_log_action_height = 0x7f070045;
        /**  Padding to the left and right of call log action buttons. 
         */
        public: static const int call_log_action_horizontal_padding = 0x7f070040;
        /**  Left-padding for the call log action buttons - ensures the buttons align with the text
         to the right of the contact badge.  Adjust when any of the following change:
         call_log_action_horizontal_padding
         call_log_list_contact_photo_size  
         */
        public: static const int call_log_actions_left_padding = 0x7f070041;
        /**  Call Log 
         */
        public: static const int call_log_call_action_size = 0x7f070004;
        public: static const int call_log_call_action_width = 0x7f070005;
        public: static const int call_log_day_group_padding_bottom = 0x7f070048;
        public: static const int call_log_day_group_padding_top = 0x7f070047;
        /**  Z Translation of expanded call log items. 
         */
        public: static const int call_log_expanded_translation_z = 0x7f070046;
        public: static const int call_log_icon_margin = 0x7f070006;
        public: static const int call_log_indent_margin = 0x7f07000a;
        public: static const int call_log_inner_margin = 0x7f070007;
        public: static const int call_log_item_extra_padding_vertical = 0x7f07002b;
        public: static const int call_log_list_item_actions_text_size = 0x7f070044;
        public: static const int call_log_list_item_height = 0x7f07000c;
        public: static const int call_log_name_margin_bottom = 0x7f07000b;
        public: static const int call_log_outer_margin = 0x7f070008;
        public: static const int call_log_primary_text_size = 0x7f070042;
        public: static const int call_log_secondary_text_size = 0x7f070043;
        public: static const int call_log_start_margin = 0x7f070009;
        /**  Size of call provider icon width and height 
         */
        public: static const int call_provider_small_icon_size = 0x7f070017;
        public: static const int contact_browser_list_header_left_margin = 0x7f07005d;
        public: static const int contact_browser_list_header_right_margin = 0x7f07005e;
        public: static const int contact_browser_list_item_gap_between_image_and_text = 0x7f070068;
        public: static const int contact_browser_list_item_photo_size = 0x7f070067;
        public: static const int contact_browser_list_item_text_indent = 0x7f07005f;
        /**  contact browser list margins 
         */
        public: static const int contact_browser_list_item_text_size = 0x7f070066;
        public: static const int contact_browser_list_top_margin = 0x7f070069;
        public: static const int contact_filter_icon_size = 0x7f07005b;
        public: static const int contact_filter_item_min_height = 0x7f07005a;
        /**  For contact filter setting screens 
         */
        public: static const int contact_filter_left_margin = 0x7f070058;
        public: static const int contact_filter_right_margin = 0x7f070059;
        public: static const int contact_list_card_elevation = 0x7f070085;
        /**  Width of a contact list item section header. 
         */
        public: static const int contact_list_section_header_width = 0x7f070060;
        public: static const int contact_phone_list_empty_description_padding = 0x7f07006b;
        /**  Dimensions for "No contacts" string in PhoneFavoriteFragment for the All contacts
         with phone numbers section
    
         */
        public: static const int contact_phone_list_empty_description_size = 0x7f07006a;
        /**  Size of contact photos in the call log and call details. 
         */
        public: static const int contact_photo_size = 0x7f07000d;
        /**   Horizontal padding in between contact tiles 
         */
        public: static const int contact_tile_divider_padding = 0x7f070053;
        /**  Dimensions for speed dial tiles 
         */
        public: static const int contact_tile_divider_width = 0x7f070019;
        public: static const int contact_tile_height_to_width_ratio = 0x7f07001b;
        public: static const int contact_tile_info_button_height_and_width = 0x7f07001a;
        /**  Top padding of the ListView in the contact tile list 
         */
        public: static const int contact_tile_list_padding_top = 0x7f070057;
        /**  ContactTile Layouts 

      Use sp instead of dip so that the shadowbox heights can all scale uniformly
      when the font size is scaled for accessibility purposes
    
         */
        public: static const int contact_tile_shadowbox_height = 0x7f070056;
        /**   Horizontal whitespace (both padding and margin) before the first tile and after the last tile 
         */
        public: static const int contact_tile_start_end_whitespace = 0x7f070054;
        public: static const int contact_tile_text_bottom_padding = 0x7f07001d;
        public: static const int contact_tile_text_side_padding = 0x7f07001c;
        /**  Left and right padding for a contact detail item 
         */
        public: static const int detail_item_side_margin = 0x7f070055;
        /**  Width of height of an icon from a third-party app in the networks section of the contact card. 
         */
        public: static const int detail_network_icon_size = 0x7f070064;
        public: static const int directory_header_extra_bottom_padding = 0x7f070052;
        public: static const int directory_header_extra_top_padding = 0x7f070051;
        public: static const int dismiss_button_padding_end = 0x7f07002e;
        /**  Padding for the tooltip 
         */
        public: static const int dismiss_button_padding_start = 0x7f07002d;
        public: static const int empty_list_message_text_size = 0x7f07004a;
        /**  Empty message margins 
         */
        public: static const int empty_message_top_margin = 0x7f070065;
        public: static const int favorites_row_bottom_padding = 0x7f07001f;
        /**  Padding from the last contact tile will provide the end padding. 
         */
        public: static const int favorites_row_end_padding = 0x7f070021;
        public: static const int favorites_row_start_padding = 0x7f070020;
        public: static const int favorites_row_top_padding = 0x7f07001e;
        public: static const int favorites_row_undo_text_side_padding = 0x7f070022;
        /**  Size of the star icon on the favorites tile. 
         */
        public: static const int favorites_star_icon_size = 0x7f07002c;
        /**  Offset of bottom margin of the floating action button used when dialpad is up 
         */
        public: static const int floating_action_button_dialpad_margin_bottom_offset = 0x7f070077;
        /**  Height of the floating action button 
         */
        public: static const int floating_action_button_height = 0x7f070070;
        /**  Padding to be applied to the bottom of lists to make space for the floating action
         button 
         */
        public: static const int floating_action_button_list_bottom_padding = 0x7f070074;
        /**  Bottom margin of the floating action button 
 Bottom margin of the floating action button 
         */
        public: static const int floating_action_button_margin_bottom = 0x7f070076;
        /**  Right margin of the floating action button 
 Right margin of the floating action button 
         */
        public: static const int floating_action_button_margin_right = 0x7f070075;
        /**  Corner radius of the floating action button 
         */
        public: static const int floating_action_button_radius = 0x7f070072;
        /**  Z translation of the floating action button 
         */
        public: static const int floating_action_button_translation_z = 0x7f070073;
        /**  Width of the floating action button 
         */
        public: static const int floating_action_button_width = 0x7f070071;
        public: static const int frequently_contacted_title_text_size = 0x7f070083;
        /**  Top margin for the Frequently Contacted section title, when the title is the first
         item in the list 
         */
        public: static const int frequently_contacted_title_top_margin = 0x7f070082;
        /**  Top margin for the Frequently Contacted section title 
         */
        public: static const int frequently_contacted_title_top_margin_when_first_row = 0x7f070081;
        public: static const int letter_to_tile_ratio = 0x7f07006f;
        /**  Padding between the action bar's bottom edge and the first header
         in contacts/group lists. 
         */
        public: static const int list_header_extra_top_padding = 0x7f07004f;
        /**  Minimum height used with @drawable/list_section_divider_holo_custom.
         Right now the drawable has implicit 32dip minimal height, which is confusing.
         This value is for making the hidden configuration explicit in xml. 
         */
        public: static const int list_section_divider_min_height = 0x7f070050;
        /**  Padding to be used between a visible scrollbar and the contact list 
         */
        public: static const int list_visible_scrollbar_padding = 0x7f07005c;
        public: static const int min_lock = 0x7f070002;
        public: static const int min_swipe = 0x7f070000;
        public: static const int min_vert = 0x7f070001;
        public: static const int preference_padding_bottom = 0x7f07004c;
        /**  Dimensions for individual preference cards 
         */
        public: static const int preference_padding_top = 0x7f07004b;
        public: static const int preference_side_margin = 0x7f07004d;
        public: static const int preference_summary_line_spacing_extra = 0x7f07004e;
        /**  The maximum amount to clip on the left and right of the recent call shortcut card 
         */
        public: static const int recent_call_log_item_horizontal_clip_limit = 0x7f070027;
        public: static const int recent_call_log_item_margin_bottom = 0x7f070026;
        public: static const int recent_call_log_item_margin_horizontal = 0x7f070024;
        public: static const int recent_call_log_item_margin_top = 0x7f070025;
        public: static const int recent_call_log_item_padding_bottom = 0x7f07002a;
        public: static const int recent_call_log_item_padding_start = 0x7f070028;
        public: static const int recent_call_log_item_padding_top = 0x7f070029;
        /**  Dimensions for most recent call shortcut cards 
         */
        public: static const int recent_call_log_item_translation_z = 0x7f070023;
        /** 
          Drag to remove view (in dp because it is used in conjunction with a statically
          sized icon
    
         */
        public: static const int remove_text_size = 0x7f070003;
        /**  Margin below the search box. 
         */
        public: static const int search_bottom_margin = 0x7f070037;
        /**  Padding around close icon in the search box 
         */
        public: static const int search_box_close_icon_margin = 0x7f07007e;
        /**  Size of the close icon.
         Because it expands diagonally, it needs to be shrunk to look relatively the same size 
         */
        public: static const int search_box_close_icon_size = 0x7f07007c;
        public: static const int search_box_collapsed_text_margin_left = 0x7f07003d;
        public: static const int search_box_elevation = 0x7f07003f;
        /**  Padding around the icon in the search box. 
 Padding around the icon in the search box. 
         */
        public: static const int search_box_icon_margin = 0x7f07003b;
        /**  Size of the icon (voice search, back arrow) in the search box. 
         */
        public: static const int search_box_icon_size = 0x7f07007b;
        /**  Search box interior padding - left 
         */
        public: static const int search_box_left_padding = 0x7f070039;
        /**  Padding around back arrow icon in the search box 
         */
        public: static const int search_box_navigation_icon_margin = 0x7f07007d;
        /**  Search box interior padding - right 
         */
        public: static const int search_box_right_padding = 0x7f07003a;
        public: static const int search_box_search_icon_padding = 0x7f07003c;
        /**  Left margin of the text field in the search box. 
         */
        public: static const int search_box_text_left_margin = 0x7f07007f;
        public: static const int search_collapsed_text_size = 0x7f070038;
        public: static const int search_list_padding_top = 0x7f07003e;
        /**  Margin to the left and right of the search box. 
         */
        public: static const int search_margin_horizontal = 0x7f070035;
        /**  Size of icon for contacts number shortcuts 
         */
        public: static const int search_shortcut_radius = 0x7f070084;
        /**  Search box text size 
         */
        public: static const int search_text_size = 0x7f070080;
        /**  Margin above the search box. 
         */
        public: static const int search_top_margin = 0x7f070036;
        /**  Length of dialpad's shadows in dialer. 
         */
        public: static const int shadow_length = 0x7f070049;
        /**  Size of the shortcut icon. 0dip means: use the system default 
         */
        public: static const int shortcut_icon_size = 0x7f070061;
        /**  Extra vertical padding for darkened background behind shortcut icon overlay text 
         */
        public: static const int shortcut_overlay_text_background_padding = 0x7f070063;
        /**  Text size of shortcut icon overlay text 
         */
        public: static const int shortcut_overlay_text_size = 0x7f070062;
        public: static const int tab_elevation = 0x7f07007a;
        public: static const int tab_height = 0x7f070032;
        /**  Height of the selection indicator of a tab. 
         */
        public: static const int tab_selected_underline_height = 0x7f070078;
        /**  Size of text in tabs. 
         */
        public: static const int tab_text_size = 0x7f070079;
        public: static const int tile_divider_width = 0x7f07006e;
        /**  Dimensions for contact letter tiles 
         */
        public: static const int tile_letter_font_size = 0x7f07006c;
        public: static const int tile_letter_font_size_small = 0x7f07006d;
        public: static const int transcription_bottom_margin = 0x7f070016;
        public: static const int transcription_top_margin = 0x7f070015;
    };
    public: class drawable {
        public: static const int ab_stacked_opaque_dark_holo = 0x7f020000;
        public: static const int action_button_background = 0x7f020001;
        public: static const int background_dial_holo_dark = 0x7f020002;
        public: static const int badge_action_call = 0x7f020003;
        public: static const int badge_action_sms = 0x7f020004;
        public: static const int call_log_background = 0x7f020005;
        public: static const int divider = 0x7f020006;
        public: static const int empty_call_log = 0x7f020007;
        public: static const int empty_contacts = 0x7f020008;
        public: static const int empty_speed_dial = 0x7f020009;
        public: static const int empty_speeddial = 0x7f02000a;
        public: static const int fab_blue = 0x7f02000b;
        public: static const int fab_ic_call = 0x7f02000c;
        public: static const int fab_ic_dial = 0x7f02000d;
        public: static const int fastscroll_thumb = 0x7f02000e;
        public: static const int floating_action_button = 0x7f02000f;
        public: static const int ic_ab_dialer_holo_dark = 0x7f020010;
        public: static const int ic_ab_dialer_holo_light = 0x7f020011;
        public: static const int ic_ab_search = 0x7f020012;
        public: static const int ic_add_contact_holo_dark = 0x7f020013;
        public: static const int ic_arrow = 0x7f020014;
        public: static const int ic_arrow_am = 0x7f020015;
        public: static const int ic_arrow_back_24dp = 0x7f020016;
        public: static const int ic_back_arrow = 0x7f020017;
        public: static const int ic_business_white_120dp = 0x7f020018;
        public: static const int ic_call_arrow = 0x7f020019;
        public: static const int ic_call_incoming_holo_dark = 0x7f02001a;
        public: static const int ic_call_log_blue = 0x7f02001b;
        public: static const int ic_call_missed_holo_dark = 0x7f02001c;
        public: static const int ic_call_outgoing_holo_dark = 0x7f02001d;
        public: static const int ic_call_voicemail_holo_dark = 0x7f02001e;
        public: static const int ic_calllog_delete = 0x7f02001f;
        public: static const int ic_cancel_holo_light = 0x7f020020;
        public: static const int ic_card_phone = 0x7f020021;
        public: static const int ic_close_dk = 0x7f020022;
        public: static const int ic_contacts_holo_dark = 0x7f020023;
        public: static const int ic_delete_wht_24dp = 0x7f020024;
        public: static const int ic_dialer_fork_add_call = 0x7f020025;
        public: static const int ic_dialer_fork_current_call = 0x7f020026;
        public: static const int ic_dialer_fork_tt_keypad = 0x7f020027;
        public: static const int ic_fav_undo_dk = 0x7f020028;
        public: static const int ic_group_white_24dp = 0x7f020029;
        public: static const int ic_handle = 0x7f02002a;
        public: static const int ic_hold_pause = 0x7f02002b;
        public: static const int ic_menu_all_contacts_dk = 0x7f02002c;
        public: static const int ic_menu_back = 0x7f02002d;
        public: static const int ic_menu_dialpad_dk = 0x7f02002e;
        public: static const int ic_menu_dialpad_lt = 0x7f02002f;
        public: static const int ic_menu_group_dk = 0x7f020030;
        public: static const int ic_menu_group_lt = 0x7f020031;
        public: static const int ic_menu_history_dk = 0x7f020032;
        public: static const int ic_menu_history_lt = 0x7f020033;
        public: static const int ic_menu_overflow_lt = 0x7f020034;
        public: static const int ic_menu_person_dk = 0x7f020035;
        public: static const int ic_menu_person_lt = 0x7f020036;
        public: static const int ic_menu_remove_field_holo_light = 0x7f020037;
        public: static const int ic_menu_settings_holo_light = 0x7f020038;
        public: static const int ic_menu_star_dk = 0x7f020039;
        public: static const int ic_menu_star_holo_light = 0x7f02003a;
        public: static const int ic_menu_star_lt = 0x7f02003b;
        public: static const int ic_minus = 0x7f02003c;
        public: static const int ic_overflow_menu = 0x7f02003d;
        public: static const int ic_person_add_24dp = 0x7f02003e;
        public: static const int ic_person_add_tinted_24dp = 0x7f02003f;
        public: static const int ic_person_white_120dp = 0x7f020040;
        public: static const int ic_play = 0x7f020041;
        public: static const int ic_play_active_holo_dark = 0x7f020042;
        public: static const int ic_play_holo_dark = 0x7f020043;
        public: static const int ic_play_holo_light = 0x7f020044;
        public: static const int ic_plus = 0x7f020045;
        public: static const int ic_remove = 0x7f020046;
        public: static const int ic_results_phone = 0x7f020047;
        public: static const int ic_scroll_handle = 0x7f020048;
        public: static const int ic_scroll_handle_default = 0x7f020049;
        public: static const int ic_scroll_handle_pressed = 0x7f02004a;
        public: static const int ic_search_add_contact = 0x7f02004b;
        public: static const int ic_search_phone = 0x7f02004c;
        public: static const int ic_sound_off_speakerphone_disabled_holo_dark = 0x7f02004d;
        public: static const int ic_sound_off_speakerphone_holo_dark = 0x7f02004e;
        public: static const int ic_sound_speakerphone_disabled_holo_dark = 0x7f02004f;
        public: static const int ic_sound_speakerphone_holo_dark = 0x7f020050;
        public: static const int ic_speakerphone_off = 0x7f020051;
        public: static const int ic_speakerphone_on = 0x7f020052;
        public: static const int ic_star = 0x7f020053;
        public: static const int ic_tab_all = 0x7f020054;
        public: static const int ic_tab_groups = 0x7f020055;
        public: static const int ic_tab_starred = 0x7f020056;
        public: static const int ic_text_holo_dark = 0x7f020057;
        public: static const int ic_text_holo_light = 0x7f020058;
        public: static const int ic_videocam = 0x7f020059;
        public: static const int ic_videocam_wht_24dp = 0x7f02005a;
        public: static const int ic_vm_bt_dk = 0x7f02005b;
        public: static const int ic_vm_minus_dis = 0x7f02005c;
        public: static const int ic_vm_minus_dk = 0x7f02005d;
        public: static const int ic_vm_pause_dis = 0x7f02005e;
        public: static const int ic_vm_pause_dk = 0x7f02005f;
        public: static const int ic_vm_phone_broadcast_dk = 0x7f020060;
        public: static const int ic_vm_play_dis = 0x7f020061;
        public: static const int ic_vm_play_dk = 0x7f020062;
        public: static const int ic_vm_plus_dis = 0x7f020063;
        public: static const int ic_vm_plus_dk = 0x7f020064;
        public: static const int ic_vm_sound_off_dis = 0x7f020065;
        public: static const int ic_vm_sound_off_dk = 0x7f020066;
        public: static const int ic_vm_sound_on_dis = 0x7f020067;
        public: static const int ic_vm_sound_on_dk = 0x7f020068;
        public: static const int ic_voice_search = 0x7f020069;
        public: static const int ic_voicemail_avatar = 0x7f02006a;
        public: static const int ic_voicemail_seek_handle = 0x7f02006b;
        public: static const int item_background_material_borderless_dark = 0x7f02006c;
        public: static const int item_background_material_dark = 0x7f02006d;
        public: static const int list_activated_holo = 0x7f02006e;
        public: static const int list_background_holo = 0x7f02006f;
        public: static const int list_focused_holo = 0x7f020070;
        public: static const int list_item_activated_background = 0x7f020071;
        public: static const int list_longpressed_holo_light = 0x7f020072;
        public: static const int list_pressed_holo_light = 0x7f020073;
        public: static const int list_section_divider_holo_custom = 0x7f020074;
        public: static const int list_selector_background_transition_holo_light = 0x7f020075;
        public: static const int list_selector_disabled_holo_dark = 0x7f020076;
        public: static const int list_title_holo = 0x7f020077;
        public: static const int overflow_menu = 0x7f020078;
        public: static const int overflow_thumbnail = 0x7f020079;
        public: static const int recent_lists_footer_background = 0x7f02007a;
        public: static const int rounded_corner = 0x7f02007b;
        public: static const int rounded_corner_bg = 0x7f02007c;
        public: static const int search_shadow = 0x7f02007d;
        public: static const int search_shortcut_background = 0x7f02007e;
        public: static const int searchedittext_custom_cursor = 0x7f02007f;
        public: static const int seekbar_drawable = 0x7f020080;
        public: static const int shadow_contact_photo = 0x7f020081;
        public: static const int shadow_fade_left = 0x7f020082;
        public: static const int shadow_fade_up = 0x7f020083;
        public: static const int unknown_source = 0x7f020084;
        public: static const int view_pager_tab_background = 0x7f020085;
    };
    public: class id {
        public: static const int accountType = 0x7f0b0053;
        public: static const int accountUserName = 0x7f0b0054;
        public: static const int account_filter_header = 0x7f0b0018;
        public: static const int account_filter_header_container = 0x7f0b0017;
        public: static const int activity_overlay = 0x7f0b006d;
        public: static const int all_contacts_fragment = 0x7f0b001b;
        public: static const int all_contacts_frame = 0x7f0b001a;
        public: static const int arrow = 0x7f0b009a;
        public: static const int badge_container = 0x7f0b0045;
        public: static const int badge_image = 0x7f0b0047;
        public: static const int badge_link_container = 0x7f0b0046;
        public: static const int badge_text = 0x7f0b0048;
        public: static const int blank = 0x7f0b0023;
        public: static const int btn_discard = 0x7f0b0050;
        public: static const int btn_done = 0x7f0b0051;
        public: static const int buttons_linear_layout = 0x7f0b0082;
        public: static const int call_account_icon = 0x7f0b0039;
        public: static const int call_back_action = 0x7f0b0035;
        public: static const int call_detail = 0x7f0b001c;
        public: static const int call_indicator_icon = 0x7f0b003b;
        public: static const int call_location_and_date = 0x7f0b003a;
        public: static const int call_log_action_container = 0x7f0b003f;
        public: static const int call_log_day_group_label = 0x7f0b0032;
        public: static const int call_log_divider = 0x7f0b002f;
        public: static const int call_log_entry_actions = 0x7f0b003d;
        public: static const int call_log_entry_actions_ll = 0x7f0b0040;
        public: static const int call_log_entry_actions_stub = 0x7f0b003c;
        public: static const int call_log_list_item = 0x7f0b0031;
        public: static const int call_log_pager = 0x7f0b002d;
        public: static const int call_log_row = 0x7f0b0033;
        public: static const int call_type = 0x7f0b0037;
        public: static const int call_type_icon = 0x7f0b0024;
        public: static const int call_type_icons = 0x7f0b0038;
        public: static const int call_type_text = 0x7f0b0025;
        public: static const int caller_information = 0x7f0b001d;
        public: static const int caller_name = 0x7f0b001f;
        public: static const int caller_number = 0x7f0b0020;
        public: static const int calllog_frame = 0x7f0b002b;
        public: static const int cliv_data_view = 0x7f0b0013;
        public: static const int cliv_label_textview = 0x7f0b0012;
        /**  For Debug Purpose 
         */
        public: static const int cliv_name_textview = 0x7f0b0010;
        public: static const int cliv_phoneticname_textview = 0x7f0b0011;
        public: static const int contact_detail_list_padding = 0x7f0b004c;
        public: static const int contact_entry_index_tag = 0x7f0b0001;
        public: static const int contact_favorite_card = 0x7f0b007e;
        public: static const int contact_list_all_empty = 0x7f0b0019;
        public: static const int contact_star_icon = 0x7f0b0080;
        public: static const int contact_tile = 0x7f0b007d;
        public: static const int contact_tile_container = 0x7f0b005e;
        public: static const int contact_tile_drag_shadow_overlay = 0x7f0b006e;
        public: static const int contact_tile_frame = 0x7f0b0097;
        public: static const int contact_tile_frequent_phone = 0x7f0b0058;
        public: static const int contact_tile_horizontal_divider = 0x7f0b005c;
        public: static const int contact_tile_image = 0x7f0b0056;
        public: static const int contact_tile_list = 0x7f0b0098;
        public: static const int contact_tile_name = 0x7f0b0057;
        public: static const int contact_tile_phone_number = 0x7f0b005a;
        public: static const int contact_tile_phone_type = 0x7f0b005b;
        public: static const int contact_tile_push_state = 0x7f0b005d;
        public: static const int contact_tile_quick = 0x7f0b0059;
        public: static const int contact_tile_secondary_button = 0x7f0b0081;
        public: static const int contact_tile_status = 0x7f0b005f;
        public: static const int copy_phone_number = 0x7f0b009c;
        public: static const int count = 0x7f0b0072;
        public: static const int date = 0x7f0b0026;
        public: static const int delete_all = 0x7f0b00a0;
        public: static const int details_action = 0x7f0b0043;
        public: static const int dialog_cache_vcard = 0x7f0b0008;
        /**  For vcard.CancelActivity 
         */
        public: static const int dialog_cancel_confirmation = 0x7f0b000b;
        public: static const int dialog_cancel_failed = 0x7f0b000c;
        public: static const int dialog_error_with_message = 0x7f0b000a;
        /**  For ExportVCardActivity 
         */
        public: static const int dialog_export_confirmation = 0x7f0b000d;
        public: static const int dialog_exporting_vcard = 0x7f0b000e;
        public: static const int dialog_fail_to_export_with_reason = 0x7f0b000f;
        public: static const int dialog_io_exception = 0x7f0b0009;
        public: static const int dialog_sdcard_not_found = 0x7f0b0003;
        /**  For vcard.ImportVCardActivity 
         */
        public: static const int dialog_searching_vcard = 0x7f0b0002;
        public: static const int dialog_select_import_type = 0x7f0b0005;
        public: static const int dialog_select_multiple_vcard = 0x7f0b0007;
        public: static const int dialog_select_one_vcard = 0x7f0b0006;
        public: static const int dialog_vcard_not_found = 0x7f0b0004;
        public: static const int dialpadChooser = 0x7f0b0064;
        public: static const int dialpad_floating_action_button = 0x7f0b0067;
        public: static const int dialpad_floating_action_button_container = 0x7f0b0066;
        public: static const int dialpad_floating_action_button_margin_bottom = 0x7f0b0065;
        public: static const int dialtacts_container = 0x7f0b0069;
        public: static const int dialtacts_frame = 0x7f0b006a;
        public: static const int dialtacts_mainlayout = 0x7f0b0068;
        public: static const int dialtacts_options_menu_button = 0x7f0b0095;
        public: static const int directory_header = 0x7f0b006f;
        public: static const int dismiss_button = 0x7f0b0049;
        public: static const int dismiss_separator = 0x7f0b009b;
        public: static const int display_name = 0x7f0b0071;
        public: static const int duration = 0x7f0b0027;
        public: static const int emptyListViewImage = 0x7f0b0073;
        public: static const int emptyListViewMessage = 0x7f0b0074;
        public: static const int empty_list_view = 0x7f0b0030;
        public: static const int filter_status = 0x7f0b002e;
        public: static const int floating_action_button = 0x7f0b006c;
        public: static const int floating_action_button_container = 0x7f0b006b;
        public: static const int history = 0x7f0b0022;
        public: static const int icon = 0x7f0b0052;
        public: static const int is_swipeable_tag = 0x7f0b0000;
        public: static const int label = 0x7f0b0070;
        public: static const int link_stub = 0x7f0b003e;
        public: static const int list_card = 0x7f0b004d;
        public: static const int lists_frame = 0x7f0b0075;
        public: static const int lists_pager = 0x7f0b0078;
        public: static const int lists_pager_header = 0x7f0b0077;
        public: static const int menu_2s_pause = 0x7f0b00a2;
        public: static const int menu_add_contact = 0x7f0b00a1;
        public: static const int menu_add_wait = 0x7f0b00a3;
        public: static const int menu_call_settings = 0x7f0b00a8;
        public: static const int menu_clear_frequents = 0x7f0b00a7;
        public: static const int menu_edit_number_before_call = 0x7f0b009f;
        public: static const int menu_history = 0x7f0b00a5;
        public: static const int menu_import_export = 0x7f0b00a6;
        public: static const int menu_remove_from_call_log = 0x7f0b009e;
        public: static const int menu_send_message = 0x7f0b00a4;
        public: static const int menu_trash = 0x7f0b009d;
        public: static const int name = 0x7f0b0036;
        public: static const int phone_account_label = 0x7f0b0021;
        public: static const int pinned_header_list_layout = 0x7f0b004e;
        public: static const int playback_position_text = 0x7f0b0087;
        public: static const int playback_seek = 0x7f0b0086;
        public: static const int playback_speakerphone = 0x7f0b0084;
        public: static const int playback_speed_text = 0x7f0b0088;
        public: static const int playback_start_stop = 0x7f0b0083;
        public: static const int primary_action_view = 0x7f0b0034;
        public: static const int quick_contact_photo = 0x7f0b001e;
        public: static const int radioButton = 0x7f0b0055;
        public: static const int rate_decrease_button = 0x7f0b0089;
        public: static const int rate_increase_button = 0x7f0b008a;
        public: static const int recents_list_footer = 0x7f0b008b;
        public: static const int remove_view = 0x7f0b0079;
        public: static const int remove_view_content = 0x7f0b007a;
        public: static const int remove_view_icon = 0x7f0b007b;
        public: static const int remove_view_text = 0x7f0b007c;
        public: static const int report_action = 0x7f0b0044;
        public: static const int search_back_button = 0x7f0b008d;
        public: static const int search_box_collapsed = 0x7f0b0091;
        public: static const int search_box_expanded = 0x7f0b008c;
        public: static const int search_box_start_search = 0x7f0b0093;
        public: static const int search_close_button = 0x7f0b008f;
        public: static const int search_magnifying_glass = 0x7f0b0092;
        public: static const int search_progress = 0x7f0b004f;
        public: static const int search_view = 0x7f0b008e;
        public: static const int search_view_container = 0x7f0b0090;
        public: static const int seek_container = 0x7f0b0085;
        public: static const int setPrimary = 0x7f0b0096;
        public: static const int shadow_overlay = 0x7f0b007f;
        public: static const int shortcut_card_list = 0x7f0b0076;
        public: static const int spacer = 0x7f0b0063;
        public: static const int summary = 0x7f0b0061;
        public: static const int swipeable_content = 0x7f0b0099;
        public: static const int tag_contact_type = 0x7f0b0016;
        /**  For tag ids used by ContactPhotoManager to tag views with contact details 
         */
        public: static const int tag_display_name = 0x7f0b0014;
        public: static const int tag_identifier = 0x7f0b0015;
        public: static const int text = 0x7f0b0062;
        public: static const int title = 0x7f0b0060;
        public: static const int video_call_action = 0x7f0b0041;
        public: static const int viewpager_header = 0x7f0b002c;
        public: static const int voice_search_button = 0x7f0b0094;
        public: static const int voicemail_action = 0x7f0b0042;
        public: static const int voicemail_container = 0x7f0b002a;
        public: static const int voicemail_status = 0x7f0b0028;
        public: static const int voicemail_status_action = 0x7f0b004b;
        public: static const int voicemail_status_message = 0x7f0b004a;
        public: static const int voicemail_transcription = 0x7f0b0029;
    };
    public: class integer {
        /**  Duration of the fade in of the call log actions. 
         */
        public: static const int call_log_actions_fade_in_duration = 0x7f060009;
        /**  Duration of the fade out of the call log actions. 
         */
        public: static const int call_log_actions_fade_out_duration = 0x7f06000a;
        /**  Start delay for the fade in of the call log actions. 
         */
        public: static const int call_log_actions_fade_start = 0x7f060008;
        /**  Expand/collapse of call log entry duration. 
         */
        public: static const int call_log_expand_collapse_duration = 0x7f060007;
        /**  Maximum number of exported VCard file index 
         */
        public: static const int config_export_file_max_index = 0x7f06000d;
        /**  Minimum number of exported VCard file index 
         */
        public: static const int config_export_file_min_index = 0x7f06000c;
        /**  Layout weight of card in contact list view.
    Default to 0 to indicate no padding 
         */
        public: static const int contact_list_card_layout_weight = 0x7f060012;
        /**  Layout weight of space elements in contact list view.
    Default to 0 to indicate no padding
         */
        public: static const int contact_list_space_layout_weight = 0x7f060011;
        /**   Determines the number of columns in a ContactTileRow in the favorites tab 
         */
        public: static const int contact_tile_column_count_in_favorites = 0x7f06000e;
        public: static const int contact_tile_column_count_in_favorites_new = 0x7f06000f;
        public: static const int escape_animation_duration = 0x7f060002;
        public: static const int fade_duration = 0x7f060000;
        public: static const int floating_action_button_animation_duration = 0x7f06000b;
        public: static const int max_dismiss_velocity = 0x7f060004;
        public: static const int max_escape_animation_duration = 0x7f060003;
        public: static const int snap_animation_duration = 0x7f060005;
        /**  The number of characters in the snippet before we need to tokenize and ellipse. 
 The number of characters in the snippet before we need to tokenize and ellipse. 
 The number of characters in the snippet before we need to tokenize and ellipse. 
 Yikes, there is less space on a tablet!  This makes the search experience rather
         poor. Another reason to get rid of the exist tablet layout. 
 The number of characters in the snippet before we need to tokenize and ellipse. 
 The number of characters in the snippet before we need to tokenize and ellipse. 
 The number of characters in the snippet before we need to tokenize and ellipse. 
         */
        public: static const int snippet_length_before_tokenize = 0x7f060010;
        /**  Swipe constants 
         */
        public: static const int swipe_escape_velocity = 0x7f060001;
        public: static const int swipe_scroll_slop = 0x7f060006;
    };
    public: class layout {
        public: static const int account_filter_header = 0x7f040000;
        public: static const int account_filter_header_for_phone_favorite = 0x7f040001;
        public: static const int account_selector_list_item = 0x7f040002;
        public: static const int all_contacts_activity = 0x7f040003;
        public: static const int call_detail = 0x7f040004;
        public: static const int call_detail_history_header = 0x7f040005;
        public: static const int call_detail_history_item = 0x7f040006;
        public: static const int call_details_voicemail_header = 0x7f040007;
        public: static const int call_log_activity = 0x7f040008;
        public: static const int call_log_fragment = 0x7f040009;
        public: static const int call_log_list_item = 0x7f04000a;
        public: static const int call_log_list_item_actions = 0x7f04000b;
        public: static const int call_log_list_item_extra = 0x7f04000c;
        public: static const int call_log_voicemail_status = 0x7f04000d;
        public: static const int contact_detail_list_padding = 0x7f04000e;
        public: static const int contact_list_card = 0x7f04000f;
        public: static const int contact_list_content = 0x7f040010;
        public: static const int contact_list_filter = 0x7f040011;
        public: static const int contact_list_filter_custom = 0x7f040012;
        public: static const int contact_list_filter_item = 0x7f040013;
        public: static const int contact_tile_frequent = 0x7f040014;
        public: static const int contact_tile_frequent_phone = 0x7f040015;
        public: static const int contact_tile_starred = 0x7f040016;
        public: static const int contact_tile_starred_quick_contact = 0x7f040017;
        public: static const int custom_contact_list_filter_account = 0x7f040018;
        public: static const int custom_contact_list_filter_group = 0x7f040019;
        public: static const int dialer_preferences = 0x7f04001a;
        public: static const int dialpad_chooser_list_item = 0x7f04001b;
        public: static const int dialpad_fragment = 0x7f04001c;
        public: static const int dialtacts_activity = 0x7f04001d;
        public: static const int directory_header = 0x7f04001e;
        public: static const int empty_list_view = 0x7f04001f;
        public: static const int keyguard_preview = 0x7f040020;
        public: static const int list_separator = 0x7f040021;
        public: static const int lists_fragment = 0x7f040022;
        public: static const int phone_disambig_item = 0x7f040023;
        public: static const int phone_favorite_tile_view = 0x7f040024;
        public: static const int playback_layout = 0x7f040025;
        public: static const int recents_list_footer = 0x7f040026;
        public: static const int search_bar_expanded = 0x7f040027;
        public: static const int search_edittext = 0x7f040028;
        public: static const int select_dialog_item = 0x7f040029;
        public: static const int set_primary_checkbox = 0x7f04002a;
        public: static const int show_all_contacts_fragment = 0x7f04002b;
        public: static const int speed_dial_fragment = 0x7f04002c;
        public: static const int tile_interactions_teaser_view = 0x7f04002d;
    };
    public: class menu {
        public: static const int call_details_cab = 0x7f0f0000;
        public: static const int call_details_options = 0x7f0f0001;
        public: static const int call_log_options = 0x7f0f0002;
        public: static const int dialpad_options = 0x7f0f0003;
        public: static const int dialtacts_options = 0x7f0f0004;
    };
    public: class mipmap {
        public: static const int ic_contacts_clr_48cv_44dp = 0x7f030000;
        public: static const int ic_launcher_phone = 0x7f030001;
    };
    public: class plurals {
        /**  Title of the notification of new voicemails. [CHAR LIMIT=30] 
         */
        public: static const int notification_voicemail_title = 0x7f0c0000;
        /**  Displayed at the top of the contacts showing the total number of contacts found when typing search query 
         */
        public: static const int searchFoundContacts = 0x7f0c0001;
    };
    public: class string {
        /**  Title for data source when creating or editing a contact that doesn't
         belong to a specific account.  This contact will only exist on the phone
         and will not be synced. 
         */
        public: static const int account_phone = 0x7f0a0114;
        /**  Description for incoming calls going to voice mail vs. not 
         */
        public: static const int actionIncomingCall = 0x7f0a005b;
        /**  Content description for the fake action menu up button as used
     inside search. [CHAR LIMIT=NONE] 
         */
        public: static const int action_menu_back_from_search = 0x7f0a01b1;
        /**  Content description for the fake action menu button that brings up the call history
         activity 
         */
        public: static const int action_menu_call_history_description = 0x7f0a003f;
        /**  Content description for the button that displays the dialpad
         [CHAR LIMIT=NONE] 
         */
        public: static const int action_menu_dialpad_button = 0x7f0a0041;
        /**  Content description for the fake action menu overflow button.
         This should be same as the description for the real action menu
         overflow button available in ActionBar.
         [CHAR LIMIT=NONE] 
         */
        public: static const int action_menu_overflow_description = 0x7f0a0040;
        /**  Message displayed when there is no application available to handle a particular action.
         [CHAR LIMIT=NONE] 
         */
        public: static const int activity_not_available = 0x7f0a0079;
        /**  Title of the activity that allows the uesr to filter the list of contacts displayed according to account [CHAR LIMIT=25] 
         */
        public: static const int activity_title_contacts_filter = 0x7f0a01a1;
        public: static const int add_2sec_pause = 0x7f0a0049;
        /**  Menu items for dialpad options as part of Pause and Wait ftr [CHAR LIMIT=30] 
         */
        public: static const int add_contact = 0x7f0a0048;
        /**  Message displayed when there is no application available to handle the add contact menu option. [CHAR LIMIT=NONE] 
         */
        public: static const int add_contact_not_available = 0x7f0a0076;
        public: static const int add_wait = 0x7f0a004a;
        /**  Shown when there are no contacts in the all contacts list. 
         */
        public: static const int all_contacts_empty = 0x7f0a008f;
        /**  Application name used in Settings/Apps. Default label for activities
         that don't specify a label. 
         */
        public: static const int applicationLabel = 0x7f0a0001;
        /**  The message shown when vCard importer is caching files to be imported into local temporary
         data storage. [CHAR LIMIT=NONE] 
         */
        public: static const int caching_vcard_message = 0x7f0a0186;
        /**  The title shown when vCard importer is caching files to be imported into local temporary
         data storage.  [CHAR LIMIT=40] 
         */
        public: static const int caching_vcard_title = 0x7f0a0191;
        /**  Title bar for call detail screen 
         */
        public: static const int callDetailTitle = 0x7f0a004f;
        /**  A nicely formatted call duration displayed when viewing call details. For example "42 mins 28 secs" 
         */
        public: static const int callDetailsDurationFormat = 0x7f0a006d;
        /**  Action string for calling an assistant phone number 
         */
        public: static const int call_assistant = 0x7f0a00e8;
        /**  Action string for calling a callback number 
         */
        public: static const int call_callback = 0x7f0a00dd;
        /**  Action string for calling a car phone number 
         */
        public: static const int call_car = 0x7f0a00de;
        /**  Action string for calling a company main phone number 
         */
        public: static const int call_company_main = 0x7f0a00df;
        /**  Action string for calling a custom phone number 
         */
        public: static const int call_custom = 0x7f0a00d5;
        /**  String a header on the call details screen.  Appears above the list calls to or from a
         particular number.
         [CHAR LIMIT=65] 
         */
        public: static const int call_detail_list_header = 0x7f0a00a5;
        /**  Title for the call disambiguation dialog 
         */
        public: static const int call_disambig_title = 0x7f0a0029;
        /**  Action string for calling a home fax phone number 
         */
        public: static const int call_fax_home = 0x7f0a00da;
        /**  Action string for calling a work fax phone number 
         */
        public: static const int call_fax_work = 0x7f0a00d9;
        /**  Action string for calling a home phone number 
         */
        public: static const int call_home = 0x7f0a00d6;
        /**  Action string for calling a ISDN phone number 
         */
        public: static const int call_isdn = 0x7f0a00e0;
        /**  Button text for the "call back" button displayed underneath an entry in the call log.
         Tapping causes a call to be placed to the caller represented by the call log entry.
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_action_call_back = 0x7f0a0094;
        /**  Button text for the "DETAILS" button displayed underneath an entry in the call log.
         Tapping navigates the user to the call details screen where the user can view details for
         the call log entry.
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_action_details = 0x7f0a0097;
        /**  Button text for the "report" button displayed underneath an entry in the call log.
         Tapping causes the call log entry to be reported to Google as a bad id.
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_action_report = 0x7f0a00a1;
        /**  Button text for the "video call" button displayed underneath an entry in the call log.
         Tapping causes a video call to be placed to the caller represented by the call log entry.
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_action_video_call = 0x7f0a0095;
        /**  Button text for the "LISTEN" button displayed underneath an entry in the call log.
         Tapping navigates the user to the call details screen where the user can listen to the
         voicemail represented by the call log entry.
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_action_voicemail = 0x7f0a0096;
        /**   Title of activity that displays a list of all calls 
         */
        public: static const int call_log_activity_title = 0x7f0a0080;
        /**  String resource for the font-family to use for the call log activity's title
         Do not translate. 
         */
        public: static const int call_log_activity_title_font_family = 0x7f0a007b;
        /**  Title for the call log tab containing the list of all voicemails and calls
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_all_title = 0x7f0a0081;
        public: static const int call_log_empty_gecode = 0x7f0a00c0;
        /**  String used as a header in the call log above calls which occurred two days or more ago.
         [CHAR LIMIT=65] 
         */
        public: static const int call_log_header_other = 0x7f0a00a4;
        /**  String used as a header in the call log above calls which occurred today.
         [CHAR LIMIT=65] 
         */
        public: static const int call_log_header_today = 0x7f0a00a2;
        /**  String used as a header in the call log above calls which occurred yesterday.
         [CHAR LIMIT=65] 
         */
        public: static const int call_log_header_yesterday = 0x7f0a00a3;
        /**  The header to show that call log is only showing incoming calls. [CHAR LIMIT=40] 
         */
        public: static const int call_log_incoming_header = 0x7f0a0019;
        /**  The counter for calls in a group and the date of the latest call as shown in the call log [CHAR LIMIT=15] 
         */
        public: static const int call_log_item_count_and_date = 0x7f0a0027;
        /**  The header to show that call log is only showing missed calls. [CHAR LIMIT=40] 
         */
        public: static const int call_log_missed_header = 0x7f0a001b;
        /**  Title for the call log tab containing the list of all missed calls only
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_missed_title = 0x7f0a0082;
        /**  The header to show that call log is only showing outgoing calls. [CHAR LIMIT=40] 
         */
        public: static const int call_log_outgoing_header = 0x7f0a001a;
        /**  The header to show that call log is only showing voicemail calls. [CHAR LIMIT=40] 
         */
        public: static const int call_log_voicemail_header = 0x7f0a0018;
        /**  Title for the call log tab containing the list of all voicemail calls only
         [CHAR LIMIT=30] 
         */
        public: static const int call_log_voicemail_title = 0x7f0a0083;
        /**  Action string for calling a main phone number 
         */
        public: static const int call_main = 0x7f0a00e1;
        /**  Action string for calling a MMS phone number 
         */
        public: static const int call_mms = 0x7f0a00e9;
        /**  Action string for calling a mobile phone number 
         */
        public: static const int call_mobile = 0x7f0a00d7;
        /**  Message displayed when the Phone application has been disabled and a phone call cannot
         be made. [CHAR LIMIT=NONE] 
         */
        public: static const int call_not_available = 0x7f0a0078;
        /**  Action string for calling an other phone number 
         */
        public: static const int call_other = 0x7f0a00dc;
        /**  Action string for calling an other fax phone number 
         */
        public: static const int call_other_fax = 0x7f0a00e2;
        /**  Action string for calling a pager phone number 
         */
        public: static const int call_pager = 0x7f0a00db;
        /**  Action string for calling a radio phone number 
         */
        public: static const int call_radio = 0x7f0a00e3;
        public: static const int call_settings = 0x7f0a00ba;
        /**  Label for the call settings section description [CHAR LIMIT=80]
         */
        public: static const int call_settings_description = 0x7f0a00b6;
        /**  Label for the call settings section [CHAR LIMIT=30]
         */
        public: static const int call_settings_label = 0x7f0a00b5;
        /**  Action string for calling a Telex phone number 
         */
        public: static const int call_telex = 0x7f0a00e4;
        /**  Action string for calling a TTY/TDD phone number 
         */
        public: static const int call_tty_tdd = 0x7f0a00e5;
        /**  Action string for calling a work phone number 
         */
        public: static const int call_work = 0x7f0a00d8;
        /**  Action string for calling a work mobile phone number 
         */
        public: static const int call_work_mobile = 0x7f0a00e6;
        /**  Action string for calling a work pager phone number 
         */
        public: static const int call_work_pager = 0x7f0a00e7;
        /**  Message shown in a Dialog confirming a user's cancel request toward existing vCard export.
         The argument is file name for the vCard export the user wants to cancel.
         [CHAR LIMIT=128] 
         */
        public: static const int cancel_export_confirmation_message = 0x7f0a0161;
        /**  Message shown in a Dialog confirming a user's cancel request toward existing vCard import.
         The argument is file name for the vCard import the user wants to cancel.
         [CHAR LIMIT=128] 
         */
        public: static const int cancel_import_confirmation_message = 0x7f0a0160;
        /**  Title shown in a Dialog telling users cancel vCard import/export operation is failed. [CHAR LIMIT=40] 
         */
        public: static const int cancel_vcard_import_or_export_failed = 0x7f0a0162;
        /**  Generic action string for starting an IM chat 
         */
        public: static const int chat = 0x7f0a0149;
        /**  Action string for starting an IM chat with the AIM protocol 
         */
        public: static const int chat_aim = 0x7f0a0141;
        /**  Action string for starting an IM chat with the Google Talk protocol 
         */
        public: static const int chat_gtalk = 0x7f0a0146;
        /**  Action string for starting an IM chat with the ICQ protocol 
         */
        public: static const int chat_icq = 0x7f0a0147;
        /**  Action string for starting an IM chat with the Jabber protocol 
         */
        public: static const int chat_jabber = 0x7f0a0148;
        /**  Action string for starting an IM chat with the MSN or Windows Live protocol 
         */
        public: static const int chat_msn = 0x7f0a0142;
        /**  Action string for starting an IM chat with the QQ protocol 
         */
        public: static const int chat_qq = 0x7f0a0145;
        /**  Action string for starting an IM chat with the Skype protocol 
         */
        public: static const int chat_skype = 0x7f0a0144;
        /**  Action string for starting an IM chat with the Yahoo protocol 
         */
        public: static const int chat_yahoo = 0x7f0a0143;
        /**  Confirmation dialog for clearing the call log. [CHAR LIMIT=NONE]  
         */
        public: static const int clearCallLogConfirmation = 0x7f0a000f;
        /**  Title of the confirmation dialog for clearing the call log. [CHAR LIMIT=37]  
         */
        public: static const int clearCallLogConfirmation_title = 0x7f0a000e;
        /**  Title of the "Clearing call log" progress-dialog [CHAR LIMIT=35] 
         */
        public: static const int clearCallLogProgress_title = 0x7f0a0010;
        /**  Confirmation dialog for clearing frequents. [CHAR LIMIT=NONE] 
         */
        public: static const int clearFrequentsConfirmation = 0x7f0a0100;
        /**  Title of the confirmation dialog for clearing frequents. [CHAR LIMIT=37] 
         */
        public: static const int clearFrequentsConfirmation_title = 0x7f0a00ff;
        /**  Title of the "Clearing frequently contacted" progress-dialog [CHAR LIMIT=35] 
         */
        public: static const int clearFrequentsProgress_title = 0x7f0a0101;
        /**  The error reason the vCard composer "may" emit when database is corrupted or
         something is going wrong. Usually users should not see this text. [CHAR LIMIT=NONE] 
         */
        public: static const int composer_failed_to_get_database_infomation = 0x7f0a0174;
        /**  This error message shown when the user actually have no contact
         (e.g. just after data-wiping), or, data providers of the contact list prohibits their
         contacts from being exported to outside world via vcard exporter, etc. [CHAR LIMIT=NONE] 
         */
        public: static const int composer_has_no_exportable_contact = 0x7f0a0175;
        /**  The error reason the vCard composer may emit when vCard composer is not initialized
         even when needed.
         Users should not usually see this error message. [CHAR LIMIT=NONE] 
         */
        public: static const int composer_not_initialized = 0x7f0a0176;
        /**  The list (separated by ',') of extensions should be checked in addition to
     config_export_extension. e.g. If "aaa" is added to here and 00001.vcf and 00002.aaa
     exist in a target directory, 00003.vcf becomes a next file name candidate.
     Without this configuration, 00002.vcf becomes the candidate.
         */
        public: static const int config_export_extensions_to_consider = 0x7f0a00d3;
        /**  Extension for exported VCard files 
         */
        public: static const int config_export_file_extension = 0x7f0a00d2;
        /**  Prefix of exported VCard file 
         */
        public: static const int config_export_file_prefix = 0x7f0a00d0;
        /**  Suffix of exported VCard file. Attached before an extension 
         */
        public: static const int config_export_file_suffix = 0x7f0a00d1;
        /**  The type of VCard for export. If you want to let the app emit vCard which is
    specific to some vendor (like DoCoMo), specify this type (e.g. "docomo") 
         */
        public: static const int config_export_vcard_type = 0x7f0a00ce;
        /**  The type of vcard for improt. If the vcard importer cannot guess the exact type
    of a vCard type, the improter uses this type. 
         */
        public: static const int config_import_vcard_type = 0x7f0a00cf;
        /**  Regular expression for prohibiting certain phone numbers in dialpad.
         Ignored if empty. 
         */
        public: static const int config_prohibited_phone_number_regexp = 0x7f0a0000;
        /**  Dialog message shown when a user confirms whether he/she export Contact data [CHAR LIMIT=NONE] 
         */
        public: static const int confirm_export_message = 0x7f0a017a;
        /**  Dialog title shown when a user confirms whether he/she export Contact data. [CHAR LIMIT=32] 
         */
        public: static const int confirm_export_title = 0x7f0a018b;
        /**  Title for "Contact display options" category, which is shown above options which
         manipulate how contacts are shown. [CHAR LIMIT=40] 
         */
        public: static const int contact_display_options_category_title = 0x7f0a00ae;
        /**  Message that appears in the favorites tab of the Phone app when the contact list has not fully loaded yet (below the favorite and frequent contacts) [CHAR LIMIT=20] 
         */
        public: static const int contact_list_loading = 0x7f0a0071;
        /**  Attribution of a contact status update, when the time of update is unknown 
         */
        public: static const int contact_status_update_attribution = 0x7f0a01ae;
        /**  Attribution of a contact status update, when the time of update is known 
         */
        public: static const int contact_status_update_attribution_with_date = 0x7f0a01af;
        /**  Shows up as a tooltip to provide a hint to the user that the profile pic in a contact
         card can be tapped to bring up a list of all numbers, or long pressed to start reordering
         [CHAR LIMIT=NONE]
    
         */
        public: static const int contact_tooltip = 0x7f0a0090;
        /**  The description text for the favorites tab.

         Note: AccessibilityServices use this attribute to announce what the view represents.
         This is especially valuable for views without textual representation like ImageView.

         [CHAR LIMIT=NONE] 
         */
        public: static const int contactsFavoritesLabel = 0x7f0a01a4;
        /**  Directory partition name (also exists in contacts) 
         */
        public: static const int contactsList = 0x7f0a0105;
        /**  Title of the activity that allows the user to customize filtering of contact list [CHAR LIMIT=128] 
         */
        public: static const int custom_list_filter = 0x7f0a01a2;
        public: static const int description_add_contact = 0x7f0a00bf;
        /**  String describing the button to call a number or contact.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_call = 0x7f0a005e;
        /**  String describing the "call back" action for an entry in the call log.  The call back
         action triggers a return call to the named user.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_call_back_action = 0x7f0a009b;
        public: static const int description_call_log_incoming_call = 0x7f0a00bb;
        public: static const int description_call_log_missed_call = 0x7f0a00bd;
        public: static const int description_call_log_outgoing_call = 0x7f0a00bc;
        /**  String describing the icon in the call log used to play a voicemail.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_call_log_play_button = 0x7f0a005c;
        /**  String describing the icon in the call log used to represent an unheard voicemail left to
         the user.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
              [CHAR LIMIT=NONE]
    
         */
        public: static const int description_call_log_unheard_voicemail = 0x7f0a0064;
        public: static const int description_call_log_voicemail = 0x7f0a00be;
        /**   String describing the icon used to clear the search field 
         */
        public: static const int description_clear_search = 0x7f0a01b2;
        /**  String describing the button to access the contact details for a name or number.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_contact_details = 0x7f0a005f;
        public: static const int description_delete_button = 0x7f0a00b9;
        /**  String describing the "details" action for an entry in the call log.  The details action
         displays the call details screen for an entry in the call log.  This shows the calls to
         and from the specified number associated with the call log entry.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_details_action = 0x7f0a009e;
        /**  String describing the Dial ImageButton

         Used by AccessibilityService to announce the purpose of the button.
    
         */
        public: static const int description_dial_button = 0x7f0a0038;
        public: static const int description_dial_phone_number = 0x7f0a01b6;
        /**  String describing the digits text box containing the number to dial.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_digits_edittext = 0x7f0a0039;
        /**  Content description for dismiss button on badge. [CHAR LIMIT=NONE] 
         */
        public: static const int description_dismiss = 0x7f0a0091;
        /**  String describing the image on ImageButton eight

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_eight = 0x7f0a0032;
        /**  String describing the image on ImageButton five

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_five = 0x7f0a002f;
        /**  String describing the image on ImageButton four

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_four = 0x7f0a002e;
        /**  String describing the image on ImageButton nine

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_nine = 0x7f0a0033;
        /**  String describing the image on ImageButton one

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_one = 0x7f0a002b;
        /**  String describing the image on ImageButton pound

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_pound = 0x7f0a0036;
        /**  String describing the image on ImageButton seven

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_seven = 0x7f0a0031;
        /**  String describing the image on ImageButton six

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_six = 0x7f0a0030;
        /**  String describing the image on ImageButton star

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_star = 0x7f0a0034;
        /**  String describing the image on ImageButton three

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_three = 0x7f0a002d;
        /**  String describing the image on ImageButton two

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_two = 0x7f0a002c;
        /**  String describing the image on ImageButton zero

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_image_button_zero = 0x7f0a0035;
        /**  String describing an incoming answered call entry in the call log.
         Note: AccessibilityServices uses this attribute to announce what the view represents.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_incoming_answered_call = 0x7f0a0099;
        /**  String describing an incoming missed call entry in the call log.
         Note: AccessibilityServices uses this attribute to announce what the view represents.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_incoming_missed_call = 0x7f0a0098;
        /**  String describing the Contact Editor Minus button

         Used by AccessibilityService to announce the purpose of the button.

         [CHAR LIMIT=NONE]
    
         */
        public: static const int description_minus_button = 0x7f0a014a;
        /**  String indicating a call log entry has an associated voicemail.

    Note: AccessibilityServices use this attribute to announce what the view represents.
          This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_new_voicemail = 0x7f0a0060;
        /**  String indicating the number of calls to/from a caller in the call log.

    Note: AccessibilityServices use this attribute to announce what the view represents.
          This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_num_calls = 0x7f0a0061;
        /**  String describing an outgoing call entry in the call log.
         Note: AccessibilityServices uses this attribute to announce what the view represents.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_outgoing_call = 0x7f0a009a;
        /**  String describing the seekbar in the voicemail playback to seek playback position.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_playback_seek = 0x7f0a003c;
        /**  String describing the button in the voicemail playback to switch on/off speakerphone.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_playback_speakerphone = 0x7f0a003b;
        /**  String describing the button in the voicemail playback to start/stop playback.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_playback_start_stop = 0x7f0a003a;
        /**  String describing the text for photo of a contact in a contacts list.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_quick_contact_for = 0x7f0a010d;
        /**  String describing the button in the voicemail playback to decrease playback rate.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_rate_decrease = 0x7f0a003d;
        /**  String describing the button in the voicemail playback to increase playback rate.

         Used by AccessibilityService to announce the purpose of the view.
    
         */
        public: static const int description_rate_increase = 0x7f0a003e;
        /**  String describing the image on ImageButton plus

         Used by AccessibilityService to announce the purpose of the button.
    
 String describing the Search ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public: static const int description_search_button = 0x7f0a0037;
        public: static const int description_send_message = 0x7f0a01b5;
        /**  String describing the button to SMS a number or contact.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
              [CHAR LIMIT=NONE]
    
         */
        public: static const int description_send_text_message = 0x7f0a0063;
        /**  String describing the icon used to start a voice search 
         */
        public: static const int description_start_voice_search = 0x7f0a0065;
        /**  String indicating a call log entry had video capabilities.

    Note: AccessibilityServices use this attribute to announce what the view represents.
          This is especially valuable for views without textual representation like ImageView.
          [CHAR LIMIT=NONE]
    
 Description string for an action button to initiate a video call. 
         */
        public: static const int description_video_call = 0x7f0a0062;
        /**  String describing the "video call" action for an entry in the call log.  The video call
         action triggers a return video call to the named person/number.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_video_call_action = 0x7f0a009c;
        /**  String describing the button to view the contact for the current number.

        Note: AccessibilityServices use this attribute to announce what the view represents.
              This is especially valuable for views without textual representation like ImageView.
    
         */
        public: static const int description_view_contact = 0x7f0a005d;
        /**  String describing a contact picture that introduces users to the contact detail screen.

       Used by AccessibilityService to announce the purpose of the button.

       [CHAR LIMIT=NONE]
    
         */
        public: static const int description_view_contact_detail = 0x7f0a0111;
        /**  String describing the "listen" action for an entry in the call log.  The listen
         action is shown for call log entries representing a voicemail message and this button
         triggers playing back the voicemail.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int description_voicemail_action = 0x7f0a009d;
        public: static const int description_voicemail_button = 0x7f0a00b8;
        /**  Hint text displayed in the "digits" field above the dialer's
         dialpad, if there's already a call in progress.  (This hint
         reminds the user that the dialer will add a new call, as opposed
         to sending DTMF tones over the current call.)
         [CHAR LIMIT=40] 
         */
        public: static const int dialerDialpadHintText = 0x7f0a006c;
        /**  The description text for the dialer tab.

    Note: AccessibilityServices use this attribute to announce what the view represents.
    This is especially valuable for views without textual representation like ImageView.

    [CHAR LIMIT=NONE] 
         */
        public: static const int dialerIconLabel = 0x7f0a0003;
        /**  Displayed in the text entry box in the dialer when in landscape mode to guide the user
         to dial using the physical keyboard 
         */
        public: static const int dialerKeyboardHintText = 0x7f0a006b;
        /**  Item label: use the Dialer's dialpad to add another call.
         (Part of a list of options shown in the dialer when another call
         is already in progress.) 
         */
        public: static const int dialer_addAnotherCall = 0x7f0a0053;
        /**  Hint displayed in dialer search box when there is no query that is currently typed.
         [CHAR LIMIT=30] 
         */
        public: static const int dialer_hint_find_contact = 0x7f0a007a;
        /**  Item label: jump to the in-call UI.
         (Part of a list of options shown in the dialer when another call
         is already in progress.) 
         */
        public: static const int dialer_returnToInCallScreen = 0x7f0a0052;
        /**  Label for the dialer app setting page [CHAR LIMIT=30]
         */
        public: static const int dialer_settings_label = 0x7f0a004c;
        /**  Item label: jump to the in-call DTMF dialpad.
         (Part of a list of options shown in the dialer when another call
         is already in progress.) 
         */
        public: static const int dialer_useDtmfDialpad = 0x7f0a0051;
        /**  Dialog title when importing contacts from an external source. [CHAR LIMIT=36] 
         */
        public: static const int dialog_import = 0x7f0a019d;
        /**  Dialog title when selecting the bulk operation to perform from a list. [CHAR LIMIT=36] 
         */
        public: static const int dialog_import_export = 0x7f0a019c;
        public: static const int dialog_new_contact_account = 0x7f0a015c;
        /**  Dialog message which is shown when the user tries to make a phone call
         to prohibited phone numbers [CHAR LIMIT=NONE] 
         */
        public: static const int dialog_phone_call_prohibited_message = 0x7f0a006e;
        public: static const int dialog_sync_add = 0x7f0a0153;
        /**  Dialog message which is shown when the user tries to check voicemail
         while the system is in airplane mode. The user cannot access to
         voicemail service in Airplane mode. [CHAR LIMI=NONE] 
         */
        public: static const int dialog_voicemail_airplane_mode_message = 0x7f0a0070;
        /**  Dialog message which is shown when the user tries to check voicemail
         while the system isn't ready for the access. [CHAR LIMIT=NONE] 
         */
        public: static const int dialog_voicemail_not_ready_message = 0x7f0a006f;
        public: static const int dialpad_0_number = 0x7f0a00c2;
        public: static const int dialpad_1_number = 0x7f0a00c3;
        public: static const int dialpad_2_number = 0x7f0a00c4;
        public: static const int dialpad_3_number = 0x7f0a00c5;
        public: static const int dialpad_4_number = 0x7f0a00c6;
        public: static const int dialpad_5_number = 0x7f0a00c7;
        public: static const int dialpad_6_number = 0x7f0a00c8;
        public: static const int dialpad_7_number = 0x7f0a00c9;
        public: static const int dialpad_8_number = 0x7f0a00ca;
        public: static const int dialpad_9_number = 0x7f0a00cb;
        /**  The label in section header in the contact list for a contact directory [CHAR LIMIT=128] 
         */
        public: static const int directory_search_label = 0x7f0a0107;
        /**  List title for a special contacts group that covers all contacts that
a        ren't members of any other group. [CHAR LIMIT=25] 
         */
        public: static const int display_all_contacts = 0x7f0a0151;
        public: static const int display_more_groups = 0x7f0a0154;
        /**  An allowable value for the "sort list by" contact display option  
         */
        public: static const int display_options_sort_by_family_name = 0x7f0a0197;
        /**  An allowable value for the "sort list by" contact display option  
         */
        public: static const int display_options_sort_by_given_name = 0x7f0a0196;
        /**  Contact preferences related strings 
 Label of the "sort by" display option 
         */
        public: static const int display_options_sort_list_by = 0x7f0a0195;
        /**  An allowable value for the "view names as" contact display option  
         */
        public: static const int display_options_view_family_name_first = 0x7f0a019a;
        /**  An allowable value for the "view names as" contact display option  
         */
        public: static const int display_options_view_given_name_first = 0x7f0a0199;
        /**  Label of the "name format" display option [CHAR LIMIT=64]
         */
        public: static const int display_options_view_names_as = 0x7f0a0198;
        /**  List title for a special contacts group that covers all contacts. [CHAR LIMIT=25] 
         */
        public: static const int display_ungrouped = 0x7f0a0150;
        /**  Warning message given to users just before they remove a currently syncing
         group that would also cause all ungrouped contacts to stop syncing.  [CHAR LIMIT=NONE] 
         */
        public: static const int display_warn_remove_ungrouped = 0x7f0a0155;
        /**  Setting option name to enable or disable DTMF tone sound [CHAR LIMIT=30] 
         */
        public: static const int dtmf_tone_enable_title = 0x7f0a00b2;
        /**  Generic action string for sending an email 
         */
        public: static const int email = 0x7f0a0135;
        /**  Header that expands to list all of the types of email addresses when editing or creating
         an email address for a contact [CHAR LIMIT=20] 
         */
        public: static const int emailLabelsGroup = 0x7f0a0122;
        /**  Action string for sending an email to a custom email address 
         */
        public: static const int email_custom = 0x7f0a0134;
        /**  Action string for sending an email to a home email address 
         */
        public: static const int email_home = 0x7f0a0130;
        /**  Action string for sending an email to a mobile email address 
         */
        public: static const int email_mobile = 0x7f0a0131;
        /**  Action string for sending an email to an other email address 
         */
        public: static const int email_other = 0x7f0a0133;
        /**  Action string for sending an email to a work email address 
         */
        public: static const int email_work = 0x7f0a0132;
        /**  Header that expands to list all event types when editing an event of a contact
         [CHAR LIMIT=20] 
         */
        public: static const int eventLabelsGroup = 0x7f0a0127;
        /**  Content description for the expand or collapse name fields button.
         Clicking this button causes the name editor to toggle between showing
         a single field where the entire name is edited at once, or multiple
         fields corresponding to each part of the name (Name Prefix, First Name,
         Middle Name, Last Name, Name Suffix).
         [CHAR LIMIT=NONE] 
         */
        public: static const int expand_collapse_name_fields_description = 0x7f0a014b;
        /**  Action that exports all contacts to (USB) storage [CHAR LIMIT=25] 
         */
        public: static const int export_to_sdcard = 0x7f0a0194;
        /**  Dialog message shown when exporting Contact data failed. [CHAR LIMIT=NONE] 
         */
        public: static const int exporting_contact_failed_message = 0x7f0a0178;
        /**  Dialog title shown when exporting Contact data failed. [CHAR LIMIT=20] 
         */
        public: static const int exporting_contact_failed_title = 0x7f0a0177;
        /**  Message shown when the application is exporting contact data outside 
         */
        public: static const int exporting_contact_list_message = 0x7f0a0173;
        /**  Dialog title shown when the application is exporting contact data outside. [CHAR LIMIT=NONE] 
         */
        public: static const int exporting_contact_list_title = 0x7f0a0172;
        /**  The title shown when exporting vCard is canceled (probably by a user)
         The argument is file name the user canceled importing.
         [CHAR LIMIT=40] 
         */
        public: static const int exporting_vcard_canceled_title = 0x7f0a0171;
        /**  The title shown when exporting vCard is successfuly finished [CHAR LIMIT=40] 
         */
        public: static const int exporting_vcard_finished_title = 0x7f0a0170;
        /**  The failed reason shown when contacts exporter fails to be initialized.
         Some exact reason must follow this. [CHAR LIMIT=NONE]
         */
        public: static const int fail_reason_could_not_initialize_exporter = 0x7f0a0165;
        /**  The failed reason shown when vCard importer/exporter could not open the file
         specified by a user. The file name should be in the message. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_could_not_open_file = 0x7f0a0164;
        /**  The failed reason shown when some error happend during contacts export.
         Some exact reason must follow this. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_error_occurred_during_export = 0x7f0a0167;
        /**  Fail reason shown when vCard importer failed to look over meta information stored in vCard file(s). 
         */
        public: static const int fail_reason_failed_to_collect_vcard_meta_info = 0x7f0a016e;
        /**  The failed reason shown when the import of some of vCard files failed during multiple vCard
         files import. It includes the case where all files were failed to be imported. 
         */
        public: static const int fail_reason_failed_to_read_files = 0x7f0a016f;
        /**  The failed reason shown when Contacts app (especially vCard importer/exporter)
         emitted some I/O error. Exact reason will be appended by the system. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_io_error = 0x7f0a016a;
        /**  Failure reason show when Contacts app (especially vCard importer) encountered
         low memory problem and could not proceed its import procedure. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_low_memory_during_import = 0x7f0a016b;
        /**  The failed reason shown when there's no contact which is allowed to be exported.
         Note that user may have contacts data but all of them are probably not allowed to be
         exported because of security/permission reasons. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_no_exportable_contact = 0x7f0a0166;
        /**  The failed reason shown when vCard importer doesn't support the format.
         This may be shown when the vCard is corrupted [CHAR LIMIT=40] 
         */
        public: static const int fail_reason_not_supported = 0x7f0a016d;
        /**  The failed reason shown when the given file name is too long for the system.
         The length limit of each file is different in each Android device, so we don't need to
         mention it here. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_too_long_filename = 0x7f0a0168;
        /**  The failed reason shown when vCard exporter could not create a file for the vCard since
         there are too many files relevant to vCard. 
         */
        public: static const int fail_reason_too_many_vcard = 0x7f0a0169;
        /**  The failed reason which should not be shown but it may in some buggy condition. [CHAR LIMIT=40] 
         */
        public: static const int fail_reason_unknown = 0x7f0a0163;
        /**  The failed reason shown when vCard parser was not able to be parsed by the current vCard
         implementation. This might happen even when the input vCard is completely valid, though
         we believe it is rather rare in the actual world. [CHAR LIMIT=NONE] 
         */
        public: static const int fail_reason_vcard_parse_error = 0x7f0a016c;
        /**   Text displayed when user swipes out a favorite contact 
         */
        public: static const int favorite_hidden = 0x7f0a0087;
        /**   Text displayed for the undo button to undo removing a favorite contact 
         */
        public: static const int favorite_hidden_undo = 0x7f0a0088;
        /**  The text displayed on the divider for the Favorites tab in Phone app indicating that items below it are frequently called as opposed to starred contacts [CHAR LIMIT = 39] 
         */
        public: static const int favoritesFrequentCalled = 0x7f0a010f;
        /**  The text displayed on the divider for the Favorites tab in People app indicating that items below it are frequently contacted [CHAR LIMIT = 39] 
         */
        public: static const int favoritesFrequentContacted = 0x7f0a0110;
        /**  Button text for the "all contacts" button displayed on the main dialer screen above the
         list of favorite phone numbers.  Navigates the user to the "All Contacts" list.
         This text represents the same action as the text in string "menu_allContacts".
         [CHAR LIMIT=21] 
         */
        public: static const int favorites_menu_all_contacts = 0x7f0a0093;
        /**  Displayed at the top of search results indicating that more contacts were found than shown [CHAR LIMIT=64] 
         */
        public: static const int foundTooManyContacts = 0x7f0a010b;
        /**  Field title for the full name of a contact [CHAR LIMIT=64]
         */
        public: static const int full_name = 0x7f0a0117;
        /**  Label for the general dialer settings section description [CHAR LIMIT=80]
         */
        public: static const int general_settings_description = 0x7f0a00ad;
        /**  Dialer settings related strings
 Label for the general dialer settings section [CHAR LIMIT=30]
         */
        public: static const int general_settings_label = 0x7f0a00ac;
        /**  Hint text for the organization name when editing 
         */
        public: static const int ghostData_company = 0x7f0a012a;
        /**  Hint text for the organization title when editing 
         */
        public: static const int ghostData_title = 0x7f0a012b;
        /**  Header for the list of all groups for a contact [CHAR LIMIT=20] 
         */
        public: static const int groupsLabel = 0x7f0a012f;
        /**  Query hint displayed inside the search field [CHAR LIMIT=64] 
         */
        public: static const int hint_findContacts = 0x7f0a01a3;
        /**  Header that expands to list all of the types of IM account when editing or creating an IM
         account for a contact [CHAR LIMIT=20] 
         */
        public: static const int imLabelsGroup = 0x7f0a0124;
        /**  The title of a dialog that displays the IMEI of the phone 
         */
        public: static const int imei = 0x7f0a0072;
        /**  One of alternatives shown when the system allows a user to select how many vCard files
         should be imported. This message shows only when the system is certain that there's more
         than one vCard files available in the system. 
         */
        public: static const int import_all_vcard_string = 0x7f0a018f;
        /**  The failure message shown when the system could not find any vCard file.
         (with extension ".vcf" in SDCard.)
         [CHAR LIMIT=128] 
         */
        public: static const int import_failure_no_vcard_file = 0x7f0a0189;
        /**  Action string for selecting (USB) storage for importing contacts [CHAR LIMIT=30] 
         */
        public: static const int import_from_sdcard = 0x7f0a015f;
        /**  Action string for selecting SIM for importing contacts 
         */
        public: static const int import_from_sim = 0x7f0a015d;
        /**  Action string for selecting SIM for importing contacts, when more than one SIM card 
         */
        public: static const int import_from_sim_number = 0x7f0a015e;
        /**  One of alternatives shown when the system allows a user to select how many vCard files
         should be imported. This message shows only when the system is certain that there's more
         than one vCard files available in the system. 
         */
        public: static const int import_multiple_vcard_string = 0x7f0a018e;
        /**  One of alternatives shown when the system allows a user to select how many vCard files
         should be imported. This message shows only when the system is certain that there's more
         than one vCard files available in the system. 
         */
        public: static const int import_one_vcard_string = 0x7f0a018d;
        /**  The title shown when importing vCard is canceled (probably by a user)
         The argument is file name the user canceled importing.
         [CHAR LIMIT=40] 
         */
        public: static const int importing_vcard_canceled_title = 0x7f0a017f;
        /**  Description shown when importing vCard data.
         The argument is the name of a contact which is being read.
         [CHAR LIMIT=20] 
         */
        public: static const int importing_vcard_description = 0x7f0a017b;
        /**  The title shown when reading vCard finished
         The argument is file name the user imported.
         [CHAR LIMIT=40] 
         */
        public: static const int importing_vcard_finished_title = 0x7f0a017e;
        /**  The label describing the Notes field of a contact. This field allows free form text entry
         about a contact 
         */
        public: static const int label_notes = 0x7f0a012c;
        /**  The label describing the SIP address field of a contact. [CHAR LIMIT=20] 
         */
        public: static const int label_sip_address = 0x7f0a012d;
        /**  Title for the activity that dials the phone.  This is the name
         used in the Launcher icon. 
         */
        public: static const int launcherActivityLabel = 0x7f0a0002;
        public: static const int launcherDialer = 0x7f0a00b7;
        /**  Font family used when drawing letters for letter tile avatars.
         Do not translate. 
         */
        public: static const int letter_tile_letter_font_family = 0x7f0a01b0;
        /**  Displayed at the top of the contacts showing the account filter selected  [CHAR LIMIT=64] 
         */
        public: static const int listAllContactsInAccount = 0x7f0a0159;
        /**  Displayed at the top of the contacts showing single contact. [CHAR LIMIT=64] 
         */
        public: static const int listCustomView = 0x7f0a015a;
        /**  Displayed at the top of the contacts showing the zero total number of contacts found when "Only contacts with phones" not selected. [CHAR LIMIT=30]
         (also in contacts) 
         */
        public: static const int listFoundAllContactsZero = 0x7f0a010c;
        /**  Displayed at the top of the contacts showing single contact. [CHAR LIMIT=64] 
         */
        public: static const int listSingleContact = 0x7f0a015b;
        /**  Displayed at the top of the contacts showing the zero total number of contacts visible when "All contacts" is selected  [CHAR LIMIT=64]
         */
        public: static const int listTotalAllContactsZero = 0x7f0a01a5;
        /**  Displayed at the top of the contacts showing the zero total number of contacts visible when "Custom" is selected  [CHAR LIMIT=64]
         */
        public: static const int listTotalAllContactsZeroCustom = 0x7f0a01a6;
        /**  Displayed at the top of the contacts showing the zero total number of contacts visible when a group or account is selected  [CHAR LIMIT=64]
         */
        public: static const int listTotalAllContactsZeroGroup = 0x7f0a01a8;
        /**  Displayed at the top of the contacts showing the zero total number of contacts visible when starred contact list is selected  [CHAR LIMIT=64]
         */
        public: static const int listTotalAllContactsZeroStarred = 0x7f0a01a7;
        /**  Delimeter used between each item in a textual list; for example "Alpha, Beta".
         [CHAR LIMIT=3] 
         */
        public: static const int list_delimeter = 0x7f0a00ab;
        /**  Contact list filter label indicating that the list is showing all available accounts [CHAR LIMIT=64] 
         */
        public: static const int list_filter_all_accounts = 0x7f0a014c;
        /**  Contact list filter label indicating that the list is showing all starred contacts [CHAR LIMIT=64] 
         */
        public: static const int list_filter_all_starred = 0x7f0a014d;
        /**  Contact list filter selection indicating that the list shows groups chosen by the user [CHAR LIMIT=64] 
         */
        public: static const int list_filter_customize = 0x7f0a014e;
        /**  Contact list filter selection indicating that the list shows all contacts with phone numbers [CHAR LIMIT=64] 
         */
        public: static const int list_filter_phones = 0x7f0a0112;
        /**  Contact list filter selection indicating that the list shows only the selected contact [CHAR LIMIT=64] 
         */
        public: static const int list_filter_single = 0x7f0a014f;
        /**  The name of the invisible local contact directory 
         */
        public: static const int local_invisible_directory = 0x7f0a0106;
        /**  The label in section header in the contact list for a local contacts [CHAR LIMIT=128] 
         */
        public: static const int local_search_label = 0x7f0a0108;
        /**  Message next to disamgiguation dialog check box 
         */
        public: static const int make_primary = 0x7f0a002a;
        /**  Action string for viewing a custom postal address 
         */
        public: static const int map_custom = 0x7f0a0140;
        /**  Action string for viewing a home postal address 
         */
        public: static const int map_home = 0x7f0a013d;
        /**  Action string for viewing an other postal address 
         */
        public: static const int map_other = 0x7f0a013f;
        /**  Action string for viewing a work postal address 
         */
        public: static const int map_work = 0x7f0a013e;
        /**  The title of a dialog that displays the MEID of the CDMA phone 
         */
        public: static const int meid = 0x7f0a0073;
        /**  The menu item to open the list of accounts 
         */
        public: static const int menu_accounts = 0x7f0a01ab;
        /**  Menu item to display all contacts [CHAR LIMIT=30] 
         */
        public: static const int menu_allContacts = 0x7f0a004e;
        /**  Menu item used to call a contact, containing the number of the contact to call 
         */
        public: static const int menu_callNumber = 0x7f0a0066;
        /**   The menu item to clear frequents [CHAR LIMIT=30] 
         */
        public: static const int menu_clear_frequents = 0x7f0a01a9;
        /**  The menu item to filter the list of contacts displayed 
         */
        public: static const int menu_contacts_filter = 0x7f0a01a0;
        /**  Menu item to copy something [CHAR_LIMIT=10] 
         */
        public: static const int menu_copy = 0x7f0a0042;
        /**  Menu item to indicate you want to cancel the current editing process and NOT save the changes you've made [CHAR LIMIT=12] 
         */
        public: static const int menu_doNotSave = 0x7f0a0158;
        /**  Menu item to indicate you are done editing a contact and want to save the changes you've made 
         */
        public: static const int menu_done = 0x7f0a0157;
        /**  The menu item to bulk import or bulk export contacts from SIM card or SD card.  [CHAR LIMIT=30]
         */
        public: static const int menu_import_export = 0x7f0a01ac;
        /**  Menu item to create a new contact [CHAR LIMIT=30] 
         */
        public: static const int menu_newContact = 0x7f0a004d;
        /**  Menu item to search contacts 
         */
        public: static const int menu_search = 0x7f0a019f;
        /**  Menu item to select account used to make phone calls [CHAR LIMIT=30] 
         */
        public: static const int menu_select_account = 0x7f0a004b;
        /**  Menu item to select SIM card 
         */
        public: static const int menu_select_sim = 0x7f0a01aa;
        /**  Menu item used to send an SMS or MMS message to a phone number  
         */
        public: static const int menu_sendTextMessage = 0x7f0a0005;
        /**  Menu item used to show all calls in the call log. [CHAR LIMIT=30] 
         */
        public: static const int menu_show_all_calls = 0x7f0a0047;
        /**  Menu item used to show only incoming in the call log. [CHAR LIMIT=30] 
         */
        public: static const int menu_show_incoming_only = 0x7f0a0044;
        /**  Menu item used to show only missed in the call log. [CHAR LIMIT=30] 
         */
        public: static const int menu_show_missed_only = 0x7f0a0045;
        /**  Menu item used to show only outgoing in the call log. [CHAR LIMIT=30] 
         */
        public: static const int menu_show_outgoing_only = 0x7f0a0043;
        /**  Menu item used to show only voicemails in the call log. [CHAR LIMIT=30] 
         */
        public: static const int menu_show_voicemails_only = 0x7f0a0046;
        public: static const int menu_sync_remove = 0x7f0a0152;
        /**  Shown as the display name for a person when the name is missing or unknown. [CHAR LIMIT=18]
         */
        public: static const int missing_name = 0x7f0a010e;
        /**  Header that expands to list all name types when editing a structured name of a contact
         [CHAR LIMIT=20] 
         */
        public: static const int nameLabelsGroup = 0x7f0a0115;
        /**  Field title for the family name of a contact 
         */
        public: static const int name_family = 0x7f0a0119;
        /**  Field title for the given name of a contact 
         */
        public: static const int name_given = 0x7f0a0118;
        /**  Field title for the middle name of a contact 
         */
        public: static const int name_middle = 0x7f0a011b;
        /**  Field title for the phonetic name of a contact [CHAR LIMIT=64]
         */
        public: static const int name_phonetic = 0x7f0a011d;
        /**  Field title for the phonetic family name of a contact 
         */
        public: static const int name_phonetic_family = 0x7f0a0120;
        /**  Field title for the phonetic given name of a contact 
         */
        public: static const int name_phonetic_given = 0x7f0a011e;
        /**  Field title for the phonetic middle name of a contact 
         */
        public: static const int name_phonetic_middle = 0x7f0a011f;
        /**  Field title for the prefix name of a contact 
         */
        public: static const int name_prefix = 0x7f0a011a;
        /**  Field title for the suffix name of a contact 
         */
        public: static const int name_suffix = 0x7f0a011c;
        /**  The "file name" displayed for vCards received directly via NFC [CHAR LIMIT=16] 
         */
        public: static const int nfc_vcard_file_name = 0x7f0a018a;
        /**  Header that expands to list all nickname types when editing a nickname of a contact
         [CHAR LIMIT=20] 
         */
        public: static const int nicknameLabelsGroup = 0x7f0a0116;
        /**  Dialog message shown when SDcard does not exist. [CHAR LIMIT=30] 
         */
        public: static const int no_sdcard_message = 0x7f0a0179;
        /**  Used in the notification of a new voicemail for the action to play the voicemail. 
         */
        public: static const int notification_action_voicemail_play = 0x7f0a0011;
        /**  Text used in the ticker to notify the user of the latest voicemail. [CHAR LIMIT=30] 
         */
        public: static const int notification_new_voicemail_ticker = 0x7f0a0013;
        /**  Used to build a list of names or phone numbers, to indicate the callers who left
         voicemails.
         The first argument may be one or more callers, the most recent ones.
         The second argument is an additional callers.
         This string is used to build a list of callers.

         [CHAR LIMIT=10]
     
         */
        public: static const int notification_voicemail_callers_list = 0x7f0a0012;
        /**  Number of missed calls shown on call card [CHAR LIMIT=40] 
         */
        public: static const int num_missed_calls = 0x7f0a008d;
        /**  Header that expands to list all organization types when editing an organization of a
         contact [CHAR LIMIT=20] 
         */
        public: static const int organizationLabelsGroup = 0x7f0a0125;
        /**  Label for section of general call settings where miscellaneous settings are listed. 
         */
        public: static const int other_settings_title = 0x7f0a00b3;
        /**  String used to display calls from pay phone in the call log 
         */
        public: static const int payphone = 0x7f0a006a;
        /**  The percentage, used for expressing the progress of vCard import/export. 
         */
        public: static const int percentage = 0x7f0a0187;
        /**  Header that expands to list all of the types of phone numbers when editing or creating a
         phone number for a contact [CHAR LIMIT=20] 
         */
        public: static const int phoneLabelsGroup = 0x7f0a0121;
        /**  Header that expands to list all of the types of postal addresses when editing or creating
         an postal address for a contact [CHAR LIMIT=20] 
         */
        public: static const int postalLabelsGroup = 0x7f0a0123;
        /**  Field title for the full postal address of a contact [CHAR LIMIT=64]
         */
        public: static const int postal_address = 0x7f0a0129;
        /**  Field title for the city of a structured postal address of a contact 
         */
        public: static const int postal_city = 0x7f0a0139;
        /**  Field title for the country of a structured postal address of a contact 
         */
        public: static const int postal_country = 0x7f0a013c;
        /**  Field title for the neighborhood of a structured postal address of a contact 
         */
        public: static const int postal_neighborhood = 0x7f0a0138;
        /**  Field title for the PO box of a structured postal address of a contact 
         */
        public: static const int postal_pobox = 0x7f0a0137;
        /**  Field title for the postal code of a structured postal address of a contact 
         */
        public: static const int postal_postcode = 0x7f0a013b;
        /**  Field title for the region, or state, of a structured postal address of a contact 
         */
        public: static const int postal_region = 0x7f0a013a;
        /**  Field title for the street of a structured postal address of a contact 
         */
        public: static const int postal_street = 0x7f0a0136;
        /**  String used to display calls from private numbers in the call log 
         */
        public: static const int private_num = 0x7f0a0069;
        /**  The message shown while importing vCard(s).
         First argument is current index of contacts to be imported.
         Second argument is the total number of contacts.
         Third argument is the name of a contact which is being read.
         [CHAR LIMIT=20] 
         */
        public: static const int progress_notifier_message = 0x7f0a0193;
        /**  The title shown when reading vCard is canceled (probably by a user)
         [CHAR LIMIT=40] 
         */
        public: static const int reading_vcard_canceled_title = 0x7f0a017d;
        /**  Dialog title shown when reading vCard data failed [CHAR LIMIT=40] 
         */
        public: static const int reading_vcard_failed_title = 0x7f0a017c;
        /**  The description text for the call log tab.

    Note: AccessibilityServices use this attribute to announce what the view represents.
    This is especially valuable for views without textual representation like ImageView.

    [CHAR LIMIT=NONE] 
         */
        public: static const int recentCallsIconLabel = 0x7f0a0004;
        /**  Menu item used to add a number from the call log to contacts 
         */
        public: static const int recentCalls_addToContact = 0x7f0a0008;
        /**  Menu item used to call a contact from the call log 
         */
        public: static const int recentCalls_callNumber = 0x7f0a0006;
        /**  Menu item used to remove all calls from the call log 
         */
        public: static const int recentCalls_deleteAll = 0x7f0a000a;
        /**  Menu item used to copy a number from the call log to the dialer so it can be edited before calling it 
         */
        public: static const int recentCalls_editNumberBeforeCall = 0x7f0a0007;
        /**  Text displayed when the call log is empty. 
         */
        public: static const int recentCalls_empty = 0x7f0a000d;
        /**  Menu item used to remove a single call from the call log 
         */
        public: static const int recentCalls_removeFromRecentList = 0x7f0a0009;
        /**  Menu item used to share a voicemail. [CHAR LIMIT=30] 
         */
        public: static const int recentCalls_shareVoicemail = 0x7f0a000c;
        /**  Menu item used to delete a voicemail. [CHAR LIMIT=30] 
         */
        public: static const int recentCalls_trashVoicemail = 0x7f0a000b;
        /**  Text displayed when the list of missed calls is empty 
         */
        public: static const int recentMissed_empty = 0x7f0a007d;
        /**  Text displayed when the list of voicemails is empty 
         */
        public: static const int recentVoicemails_empty = 0x7f0a007e;
        /**  Title for the recent calls footer that brings users to the full call history when clicked 
         */
        public: static const int recents_footer_text = 0x7f0a008c;
        /**  Header for the list of all relationships for a contact [CHAR LIMIT=20] 
         */
        public: static const int relationLabelsGroup = 0x7f0a0126;
        /**  Remove button that shows up when contact is long-pressed. [CHAR LIMIT=NONE] 
         */
        public: static const int remove_contact = 0x7f0a0092;
        /**  Title of settings screen for managing the "Respond via SMS" feature. [CHAR LIMIT=30] 
         */
        public: static const int respond_via_sms_setting_title = 0x7f0a00b4;
        /**  Setting option name to pick ringtone (a list dialog comes up). [CHAR LIMIT=30] 
         */
        public: static const int ringtone_title = 0x7f0a00b0;
        /**  Displayed in a spinner dialog as user changes to display options are saved 
         */
        public: static const int savingDisplayGroups = 0x7f0a0156;
        /**  Dialog message shown when searching VCard data failed.
         An exact reason for the failure should [CHAR LIMIT=NONE] 
         */
        public: static const int scanning_sdcard_failed_message = 0x7f0a0192;
        /**  The font-family to use for the text inside the searchbox.
         Do not translate. 
         */
        public: static const int search_font_family = 0x7f0a01b3;
        /**  Title shown in the search result activity of contacts app while searching.  [CHAR LIMIT=20]
         (also in contacts) 
         */
        public: static const int search_results_searching = 0x7f0a010a;
        /**  Shortcut item used to add a number directly from search 
         */
        public: static const int search_shortcut_add_to_contacts = 0x7f0a008a;
        /**  Shortcut item used to call a number directly from search 
         */
        public: static const int search_shortcut_call_number = 0x7f0a0089;
        /**  Shortcut item used to make a video call directly from search. 
         */
        public: static const int search_shortcut_make_video_call = 0x7f0a008b;
        /**  Dialog message shown when searching VCard data from SD Card. [CHAR LIMIT=NONE] 
         */
        public: static const int searching_vcard_message = 0x7f0a0190;
        /**  Dialog title shown when a user is asked to select vCard file. [CHAR LIMIT=25] 
         */
        public: static const int select_vcard_title = 0x7f0a018c;
        /**  The title of the preference section that allows users to configure how they want their
         contacts to be displayed. [CHAR LIMIT=128] 
         */
        public: static const int settings_contact_display_options_title = 0x7f0a01b4;
        /**  Toast indicating that sharing a contact has failed. [CHAR LIMIT=NONE]  
         */
        public: static const int share_error = 0x7f0a019e;
        /**  Action that shares visible contacts 
         */
        public: static const int share_visible_contacts = 0x7f0a019b;
        public: static const int show_all_contacts = 0x7f0a00c1;
        public: static const int show_all_contacts_button_text = 0x7f0a00cd;
        public: static const int show_all_contacts_title = 0x7f0a00cc;
        /**   Menu option to show favorite contacts only 
         */
        public: static const int show_favorites_only = 0x7f0a007f;
        /**  Dialog text displayed when loading a phone number from the SIM card for speed dial 
         */
        public: static const int simContacts_emptyLoading = 0x7f0a0074;
        /**  Dialog title displayed when loading a phone number from the SIM card for speed dial 
         */
        public: static const int simContacts_title = 0x7f0a0075;
        /**  Generic action string for text messaging a contact. Used by AccessibilityService to
         announce the purpose of the view. [CHAR LIMIT=NONE] 
         */
        public: static const int sms = 0x7f0a0128;
        /**  Action string for sending an SMS to an assistant phone number 
         */
        public: static const int sms_assistant = 0x7f0a00fd;
        /**  Action string for sending an SMS to a callback number 
         */
        public: static const int sms_callback = 0x7f0a00f2;
        /**  Action string for sending an SMS to a car phone number 
         */
        public: static const int sms_car = 0x7f0a00f3;
        /**  Action string for sending an SMS to a company main phone number 
         */
        public: static const int sms_company_main = 0x7f0a00f4;
        /**  Action string for sending an SMS to a custom phone number 
         */
        public: static const int sms_custom = 0x7f0a00ea;
        /**  Title for the sms disambiguation dialog 
         */
        public: static const int sms_disambig_title = 0x7f0a0028;
        /**  Action string for sending an SMS to a home fax phone number 
         */
        public: static const int sms_fax_home = 0x7f0a00ef;
        /**  Action string for sending an SMS to a work fax phone number 
         */
        public: static const int sms_fax_work = 0x7f0a00ee;
        /**  Action string for sending an SMS to a home phone number 
         */
        public: static const int sms_home = 0x7f0a00eb;
        /**  Action string for sending an SMS to a ISDN phone number 
         */
        public: static const int sms_isdn = 0x7f0a00f5;
        /**  Action string for sending an SMS to a main phone number 
         */
        public: static const int sms_main = 0x7f0a00f6;
        /**  Action string for sending an SMS to a MMS phone number 
         */
        public: static const int sms_mms = 0x7f0a00fe;
        /**  Action string for sending an SMS to a mobile phone number 
         */
        public: static const int sms_mobile = 0x7f0a00ec;
        /**  Action string for sending an SMS to an other phone number 
         */
        public: static const int sms_other = 0x7f0a00f1;
        /**  Action string for sending an SMS to an other fax phone number 
         */
        public: static const int sms_other_fax = 0x7f0a00f7;
        /**  Action string for sending an SMS to a pager phone number 
         */
        public: static const int sms_pager = 0x7f0a00f0;
        /**  Action string for sending an SMS to a radio phone number 
         */
        public: static const int sms_radio = 0x7f0a00f8;
        /**  Action string for sending an SMS to a Telex phone number 
         */
        public: static const int sms_telex = 0x7f0a00f9;
        /**  Action string for sending an SMS to a TTY/TDD phone number 
         */
        public: static const int sms_tty_tdd = 0x7f0a00fa;
        /**  Action string for sending an SMS to a work phone number 
         */
        public: static const int sms_work = 0x7f0a00ed;
        /**  Action string for sending an SMS to a work mobile phone number 
         */
        public: static const int sms_work_mobile = 0x7f0a00fb;
        /**  Action string for sending an SMS to a work pager phone number 
         */
        public: static const int sms_work_pager = 0x7f0a00fc;
        /**  Title for the category "sounds", which is shown above sounds and vibration related
         settings. [CHAR LIMIT=30] 
         */
        public: static const int sounds_and_vibrate_category_title = 0x7f0a00af;
        /**  Shown when there are no speed dial favorites. 
         */
        public: static const int speed_dial_empty = 0x7f0a008e;
        /**   Used to display as default status when the contact is available for chat [CHAR LIMIT=19] 
         */
        public: static const int status_available = 0x7f0a0102;
        /**   Used to display as default status when the contact is away or idle for chat [CHAR LIMIT=19] 
         */
        public: static const int status_away = 0x7f0a0103;
        /**   Used to display as default status when the contact is busy or Do not disturb for chat [CHAR LIMIT=19] 
         */
        public: static const int status_busy = 0x7f0a0104;
        public: static const int tab_all_contacts = 0x7f0a0086;
        /**  The font-family to use for tab text.
         Do not translate. 
         */
        public: static const int tab_font_family = 0x7f0a01ad;
        public: static const int tab_recents = 0x7f0a0085;
        public: static const int tab_speed_dial = 0x7f0a0084;
        /**  Toast for call detail screen when couldn't read the requested details 
         */
        public: static const int toast_call_detail_error = 0x7f0a0050;
        /**  Toast message which appears when a call log contact is reported.
         [CHAR LIMIT=NONE] 
         */
        public: static const int toast_caller_id_reported = 0x7f0a00a0;
        /**  Toast message which appears when a call log entry is deleted.
         [CHAR LIMIT=NONE] 
         */
        public: static const int toast_entry_removed = 0x7f0a009f;
        /**  Toast shown when text is copied to the clipboard [CHAR LIMIT=64] 
         */
        public: static const int toast_text_copied = 0x7f0a00d4;
        /**  Title for incoming call details screen 
         */
        public: static const int type_incoming = 0x7f0a0054;
        /**  Title for incoming video call in call details screen [CHAR LIMIT=60] 
         */
        public: static const int type_incoming_video = 0x7f0a0057;
        /**  Title for missed call details screen 
         */
        public: static const int type_missed = 0x7f0a0056;
        /**  Title for missed video call in call details screen [CHAR LIMIT=60] 
         */
        public: static const int type_missed_video = 0x7f0a0059;
        /**  Title for outgoing call details screen 
         */
        public: static const int type_outgoing = 0x7f0a0055;
        /**  Title for outgoing video call in call details screen [CHAR LIMIT=60] 
         */
        public: static const int type_outgoing_video = 0x7f0a0058;
        /**  Title for voicemail details screen 
         */
        public: static const int type_voicemail = 0x7f0a005a;
        /**  String used to display calls from unknown numbers in the call log 
         */
        public: static const int unknown = 0x7f0a0067;
        /**  String describing the text on the header of the profile contact in the contacts list
         This may be programatically capitalized. [CHAR LIMIT=20] 
         */
        public: static const int user_profile_contacts_list_header = 0x7f0a0109;
        /**  The message shown when a given vCard export request is rejected by the system. [CHAR LIMIT=NONE] 
         */
        public: static const int vcard_export_request_rejected_message = 0x7f0a0184;
        /**  The message shown when vCard export request is accepted. The system may start that work soon, or do it later
         when there are already other import/export requests.
         The argument is file name the user exported.
         [CHAR LIMIT=40] 
         */
        public: static const int vcard_export_will_start_message = 0x7f0a0183;
        /**  Message used when vCard import has failed. [CHAR LIMIT=40] 
         */
        public: static const int vcard_import_failed = 0x7f0a0188;
        /**  The message shown when a given vCard import request is rejected by the system. [CHAR LIMIT=NONE] 
         */
        public: static const int vcard_import_request_rejected_message = 0x7f0a0182;
        /**  The message shown when vCard import request is accepted. The system may start that work soon, or do it later
         when there are already other import/export requests.
         The argument is file name the user imported.
         [CHAR LIMIT=40] 
         */
        public: static const int vcard_import_will_start_message = 0x7f0a0180;
        /**  The message shown when vCard import request is accepted. The system may start that work soon, or do it later when there are already other import/export requests.
         "The file" is what a user selected for importing.
         [CHAR LIMIT=40] 
         */
        public: static const int vcard_import_will_start_message_with_default_name = 0x7f0a0181;
        /**  Used when file name is unknown in vCard processing. It typically happens
         when the file is given outside the Contacts app. [CHAR LIMIT=30] 
         */
        public: static const int vcard_unknown_filename = 0x7f0a0185;
        /**  Setting option name to enable or disable vibration when ringing the phone.
         [CHAR LIMIT=30] 
         */
        public: static const int vibrate_on_ring_title = 0x7f0a00b1;
        /**  String resource for the font-family to use for the full call history footer
         Do not translate. 
         */
        public: static const int view_full_call_history_font_family = 0x7f0a007c;
        /**  Button to view the updates from the current group on the group detail page [CHAR LIMIT=25] 
         */
        public: static const int view_updates_from_group = 0x7f0a0113;
        /**  Message displayed when there is no application available to handle voice search. [CHAR LIMIT=NONE] 
         */
        public: static const int voice_search_not_available = 0x7f0a0077;
        /**  String used for displaying calls to the voicemail number in the call log 
         */
        public: static const int voicemail = 0x7f0a0068;
        /**  Message to display before we have prepared the media player, i.e. before we know duration. [CHAR LIMIT=40] 
         */
        public: static const int voicemail_buffering = 0x7f0a0015;
        /**  Message to display whilst we are waiting for the content to be fetched. [CHAR LIMIT=40] 
         */
        public: static const int voicemail_fetching_content = 0x7f0a0016;
        /**  Message to display if we fail to get content within a suitable time period. [CHAR LIMIT=40] 
         */
        public: static const int voicemail_fetching_timout = 0x7f0a0017;
        /**  String describing the "play faster" button in the playback control used to listen to a
         voicemail message.  Speeds up playback of the voicemail message.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int voicemail_play_faster = 0x7f0a00a8;
        /**  String describing the "play slower" button in the playback control used to listen to a
         voicemail message.  Slows down playback of the voicemail message.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int voicemail_play_slower = 0x7f0a00a9;
        /**  String describing the "play/pause" button in the playback control used to listen to a
         voicemail message.  Starts playback or pauses ongoing playback.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int voicemail_play_start_pause = 0x7f0a00aa;
        /**  Message to show when there is an error playing back the voicemail. [CHAR LIMIT=40] 
         */
        public: static const int voicemail_playback_error = 0x7f0a0014;
        /**  String describing the "speaker off" button on the playback control used to listen to a
         voicemail message.  When speaker is off, playback of the voicemail will occur through the
         phone earpiece.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int voicemail_speaker_off = 0x7f0a00a7;
        /**  String describing the "speaker on" button on the playback control used to listen to a
         voicemail message.  When speaker is on, playback of the voicemail will occur through the
         phone speaker.
         Note: AccessibilityServices uses this attribute to announce the purpose of the button.
         [CHAR LIMIT=NONE] 
         */
        public: static const int voicemail_speaker_on = 0x7f0a00a6;
        /**   Faster than normal pvoicemail playback speed. [CHAR LIMIT=30] 
         */
        public: static const int voicemail_speed_faster = 0x7f0a0025;
        /**   Fastest voicemail playback speed. [CHAR LIMIT=30] 
         */
        public: static const int voicemail_speed_fastest = 0x7f0a0026;
        /**   Normal voicemail playback speed. [CHAR LIMIT=30] 
         */
        public: static const int voicemail_speed_normal = 0x7f0a0024;
        /**  Slower than normal voicemail playback speed. [CHAR LIMIT=30] 
         */
        public: static const int voicemail_speed_slower = 0x7f0a0023;
        /**  The slowest voicemail playback speed. [CHAR LIMIT=30] 
         */
        public: static const int voicemail_speed_slowest = 0x7f0a0022;
        /**   User action prompt shown next to a voicemail status message to let the user call voicemail
    server directly to listen to the voicemails. [CHAR LIMIT=20] 
         */
        public: static const int voicemail_status_action_call_server = 0x7f0a0021;
        /**   User action prompt shown next to a voicemail status message to let the user configure
    visual voicemail. [CHAR LIMIT=20] 
         */
        public: static const int voicemail_status_action_configure = 0x7f0a0020;
        /**   Voicemail status message shown at the top of call details screen to notify the user that
    the audio of this voicemail is not available. [CHAR LIMIT=64] 
         */
        public: static const int voicemail_status_audio_not_available = 0x7f0a001f;
        /**   Voicemail status message shown at the top of call log to invite the user to configure
    visual voicemail. [CHAR LIMIT=64] 
         */
        public: static const int voicemail_status_configure_voicemail = 0x7f0a001e;
        /**   Voicemail status message shown at the top of call log to notify the user that there is no
      data connection to the voicemail server, but there are new voicemails waiting on the server.
      [CHAR LIMIT=64] 
         */
        public: static const int voicemail_status_messages_waiting = 0x7f0a001d;
        /**   Voicemail status message shown at the top of call log to notify the user that no new
    voicemails are currently available. This can happen when both notification as well as data
    connection to the voicemail server is lost. [CHAR LIMIT=64] 
         */
        public: static const int voicemail_status_voicemail_not_available = 0x7f0a001c;
        /**  Header that expands to list all website types when editing a website of a contact
         [CHAR LIMIT=20] 
         */
        public: static const int websiteLabelsGroup = 0x7f0a012e;
    };
    public: class style {
        /**  Inherit from Theme.Material.Light.Dialog instead of Theme.Material.Light.Dialog.Alert
    since the Alert dialog is private. They are identical anyway. 
         */
        public: static const int AlertDialogTheme = 0x7f0d000e;
        public: static const int BackgroundOnlyTheme = 0x7f0d0017;
        public: static const int CallDetailActivityTheme = 0x7f0d0006;
        public: static const int ContactListFilterTheme = 0x7f0d0015;
        /**  TextView style used for headers.

This is similar to ?android:attr/listSeparatorTextView but uses different
background and text color. See also android:style/Widget.Holo.TextView.ListSeparator
(which is private, so we cannot specify it as a parent style).  
         */
        public: static const int ContactListSeparatorTextViewStyle = 0x7f0d0012;
        public: static const int CustomContactListFilterView = 0x7f0d0016;
        public: static const int DialpadTheme = 0x7f0d0003;
        /**  Action bar overflow menu icon. 
         */
        public: static const int DialtactsActionBarOverflow = 0x7f0d0001;
        /**  Action bar overflow menu icon.  White with no shadow. 
         */
        public: static const int DialtactsActionBarOverflowWhite = 0x7f0d0002;
        public: static const int DialtactsActionBarStyle = 0x7f0d0007;
        /**  Text style for tabs. 
         */
        public: static const int DialtactsActionBarTabTextStyle = 0x7f0d000a;
        /**  Text in the action bar at the top of the screen 
         */
        public: static const int DialtactsActionBarTitleText = 0x7f0d0009;
        public: static const int DialtactsActionBarWithoutTitleStyle = 0x7f0d0008;
        /**  Hide the actionbar title during the activity preview 
         */
        public: static const int DialtactsActivityTheme = 0x7f0d0005;
        /**  <item name="android:colorPrimary">@color/dialer_theme_color</item>
        <item name="android:colorPrimaryDark">@color/dialer_theme_color_dark</item>
        <item name="dialpad_key_button_touch_tint">@color/dialer_dialpad_touch_tint</item>
        <item name="android:colorControlActivated">@color/dialer_theme_color</item> 
         */
        public: static const int DialtactsTheme = 0x7f0d0000;
        public: static const int DialtactsThemeWithoutActionBarOverlay = 0x7f0d0004;
        public: static const int DirectoryHeader = 0x7f0d000f;
        public: static const int DirectoryHeaderStyle = 0x7f0d0011;
        public: static const int DismissButtonStyle = 0x7f0d000c;
        public: static const int ListViewStyle = 0x7f0d000b;
        public: static const int SectionHeaderStyle = 0x7f0d0010;
        /**  Style applied to the "Settings" screen.  Keep in sync with SettingsLight in Telephony. 
         */
        public: static const int SettingsStyle = 0x7f0d000d;
        public: static const int TextAppearanceMedium = 0x7f0d0013;
        public: static const int TextAppearanceSmall = 0x7f0d0014;
    };
    public: class xml {
        public: static const int general_settings = 0x7f050000;
        public: static const int preference_display_options = 0x7f050001;
        public: static const int searchable = 0x7f050002;
    };
    public: class styleable {
        /** Attributes that can be used with a CallLog.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CallLog_call_log_header_color Elastos.Droid.Dialer:call_log_header_color}</code></td><td></td></tr>
           <tr><td><code>{@link #CallLog_call_log_primary_background_color Elastos.Droid.Dialer:call_log_primary_background_color}</code></td><td></td></tr>
           <tr><td><code>{@link #CallLog_call_log_primary_text_color Elastos.Droid.Dialer:call_log_primary_text_color}</code></td><td></td></tr>
           <tr><td><code>{@link #CallLog_call_log_secondary_background_color Elastos.Droid.Dialer:call_log_secondary_background_color}</code></td><td></td></tr>
           <tr><td><code>{@link #CallLog_call_log_secondary_text_color Elastos.Droid.Dialer:call_log_secondary_text_color}</code></td><td></td></tr>
           </table>
           @see #CallLog_call_log_header_color
           @see #CallLog_call_log_primary_background_color
           @see #CallLog_call_log_primary_text_color
           @see #CallLog_call_log_secondary_background_color
           @see #CallLog_call_log_secondary_text_color
         */
        public: static const int CallLog[5];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_header_color}
          attribute's value can be found in the {@link #CallLog} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_header_color
        */
        public: static const int CallLog_call_log_header_color = 4;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_primary_background_color}
          attribute's value can be found in the {@link #CallLog} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_primary_background_color
        */
        public: static const int CallLog_call_log_primary_background_color = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_primary_text_color}
          attribute's value can be found in the {@link #CallLog} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_primary_text_color
        */
        public: static const int CallLog_call_log_primary_text_color = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_secondary_background_color}
          attribute's value can be found in the {@link #CallLog} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_secondary_background_color
        */
        public: static const int CallLog_call_log_secondary_background_color = 3;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_secondary_text_color}
          attribute's value can be found in the {@link #CallLog} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_secondary_text_color
        */
        public: static const int CallLog_call_log_secondary_text_color = 2;
        /** Attributes that can be used with a ContactBrowser.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ContactBrowser_contact_browser_background Elastos.Droid.Dialer:contact_browser_background}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactBrowser_contact_browser_list_padding_left Elastos.Droid.Dialer:contact_browser_list_padding_left}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactBrowser_contact_browser_list_padding_right Elastos.Droid.Dialer:contact_browser_list_padding_right}</code></td><td></td></tr>
           </table>
           @see #ContactBrowser_contact_browser_background
           @see #ContactBrowser_contact_browser_list_padding_left
           @see #ContactBrowser_contact_browser_list_padding_right
         */
        public: static const int ContactBrowser[3];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#contact_browser_background}
          attribute's value can be found in the {@link #ContactBrowser} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:contact_browser_background
        */
        public: static const int ContactBrowser_contact_browser_background = 2;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#contact_browser_list_padding_left}
          attribute's value can be found in the {@link #ContactBrowser} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:contact_browser_list_padding_left
        */
        public: static const int ContactBrowser_contact_browser_list_padding_left = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#contact_browser_list_padding_right}
          attribute's value can be found in the {@link #ContactBrowser} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:contact_browser_list_padding_right
        */
        public: static const int ContactBrowser_contact_browser_list_padding_right = 1;
        /** Attributes that can be used with a ContactListItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ContactListItemView_activated_background Elastos.Droid.Dialer:activated_background}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_background_color Elastos.Droid.Dialer:list_item_background_color}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_data_width_weight Elastos.Droid.Dialer:list_item_data_width_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_gap_between_image_and_text Elastos.Droid.Dialer:list_item_gap_between_image_and_text}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_gap_between_label_and_data Elastos.Droid.Dialer:list_item_gap_between_label_and_data}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_header_height Elastos.Droid.Dialer:list_item_header_height}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_header_text_color Elastos.Droid.Dialer:list_item_header_text_color}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_header_text_indent Elastos.Droid.Dialer:list_item_header_text_indent}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_header_text_size Elastos.Droid.Dialer:list_item_header_text_size}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_height Elastos.Droid.Dialer:list_item_height}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_label_width_weight Elastos.Droid.Dialer:list_item_label_width_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_name_text_color Elastos.Droid.Dialer:list_item_name_text_color}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_name_text_size Elastos.Droid.Dialer:list_item_name_text_size}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_padding_bottom Elastos.Droid.Dialer:list_item_padding_bottom}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_padding_left Elastos.Droid.Dialer:list_item_padding_left}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_padding_right Elastos.Droid.Dialer:list_item_padding_right}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_padding_top Elastos.Droid.Dialer:list_item_padding_top}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_photo_size Elastos.Droid.Dialer:list_item_photo_size}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_prefix_highlight_color Elastos.Droid.Dialer:list_item_prefix_highlight_color}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_presence_icon_margin Elastos.Droid.Dialer:list_item_presence_icon_margin}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_presence_icon_size Elastos.Droid.Dialer:list_item_presence_icon_size}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_profile_photo_size Elastos.Droid.Dialer:list_item_profile_photo_size}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_text_indent Elastos.Droid.Dialer:list_item_text_indent}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_item_text_offset_top Elastos.Droid.Dialer:list_item_text_offset_top}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_list_section_header_height Elastos.Droid.Dialer:list_section_header_height}</code></td><td></td></tr>
           <tr><td><code>{@link #ContactListItemView_section_header_background Elastos.Droid.Dialer:section_header_background}</code></td><td></td></tr>
           </table>
           @see #ContactListItemView_activated_background
           @see #ContactListItemView_list_item_background_color
           @see #ContactListItemView_list_item_data_width_weight
           @see #ContactListItemView_list_item_gap_between_image_and_text
           @see #ContactListItemView_list_item_gap_between_label_and_data
           @see #ContactListItemView_list_item_header_height
           @see #ContactListItemView_list_item_header_text_color
           @see #ContactListItemView_list_item_header_text_indent
           @see #ContactListItemView_list_item_header_text_size
           @see #ContactListItemView_list_item_height
           @see #ContactListItemView_list_item_label_width_weight
           @see #ContactListItemView_list_item_name_text_color
           @see #ContactListItemView_list_item_name_text_size
           @see #ContactListItemView_list_item_padding_bottom
           @see #ContactListItemView_list_item_padding_left
           @see #ContactListItemView_list_item_padding_right
           @see #ContactListItemView_list_item_padding_top
           @see #ContactListItemView_list_item_photo_size
           @see #ContactListItemView_list_item_prefix_highlight_color
           @see #ContactListItemView_list_item_presence_icon_margin
           @see #ContactListItemView_list_item_presence_icon_size
           @see #ContactListItemView_list_item_profile_photo_size
           @see #ContactListItemView_list_item_text_indent
           @see #ContactListItemView_list_item_text_offset_top
           @see #ContactListItemView_list_section_header_height
           @see #ContactListItemView_section_header_background
         */
        public: static const int ContactListItemView[26];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#activated_background}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:activated_background
        */
        public: static const int ContactListItemView_activated_background = 2;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_background_color}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_background_color
        */
        public: static const int ContactListItemView_list_item_background_color = 15;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_data_width_weight}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_data_width_weight
        */
        public: static const int ContactListItemView_list_item_data_width_weight = 24;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_gap_between_image_and_text}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_gap_between_image_and_text
        */
        public: static const int ContactListItemView_list_item_gap_between_image_and_text = 8;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_gap_between_label_and_data}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_gap_between_label_and_data
        */
        public: static const int ContactListItemView_list_item_gap_between_label_and_data = 9;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_header_height}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_header_height
        */
        public: static const int ContactListItemView_list_item_header_height = 19;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_header_text_color}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_header_text_color
        */
        public: static const int ContactListItemView_list_item_header_text_color = 17;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_header_text_indent}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_header_text_indent
        */
        public: static const int ContactListItemView_list_item_header_text_indent = 16;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_header_text_size}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_header_text_size
        */
        public: static const int ContactListItemView_list_item_header_text_size = 18;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_height}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_height
        */
        public: static const int ContactListItemView_list_item_height = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_label_width_weight}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_label_width_weight
        */
        public: static const int ContactListItemView_list_item_label_width_weight = 25;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_name_text_color}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_name_text_color
        */
        public: static const int ContactListItemView_list_item_name_text_color = 20;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_name_text_size}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_name_text_size
        */
        public: static const int ContactListItemView_list_item_name_text_size = 21;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_padding_bottom}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_padding_bottom
        */
        public: static const int ContactListItemView_list_item_padding_bottom = 6;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_padding_left}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_padding_left
        */
        public: static const int ContactListItemView_list_item_padding_left = 7;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_padding_right}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_padding_right
        */
        public: static const int ContactListItemView_list_item_padding_right = 5;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_padding_top}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_padding_top
        */
        public: static const int ContactListItemView_list_item_padding_top = 4;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_photo_size}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_photo_size
        */
        public: static const int ContactListItemView_list_item_photo_size = 12;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_prefix_highlight_color}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_prefix_highlight_color
        */
        public: static const int ContactListItemView_list_item_prefix_highlight_color = 14;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_presence_icon_margin}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_presence_icon_margin
        */
        public: static const int ContactListItemView_list_item_presence_icon_margin = 10;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_presence_icon_size}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_presence_icon_size
        */
        public: static const int ContactListItemView_list_item_presence_icon_size = 11;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_profile_photo_size}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_profile_photo_size
        */
        public: static const int ContactListItemView_list_item_profile_photo_size = 13;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_text_indent}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_text_indent
        */
        public: static const int ContactListItemView_list_item_text_indent = 22;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_item_text_offset_top}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_item_text_offset_top
        */
        public: static const int ContactListItemView_list_item_text_offset_top = 23;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#list_section_header_height}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:list_section_header_height
        */
        public: static const int ContactListItemView_list_section_header_height = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#section_header_background}
          attribute's value can be found in the {@link #ContactListItemView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:section_header_background
        */
        public: static const int ContactListItemView_section_header_background = 3;
        /** Attributes that can be used with a ContactsDataKind.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ContactsDataKind_android_allContactsName Elastos.Droid.Dialer:android_allContactsName}</code></td><td> Resource representing the term "All Contacts" (e.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_android_detailColumn Elastos.Droid.Dialer:android_detailColumn}</code></td><td> Column in data table that contains details for this data.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_android_detailSocialSummary Elastos.Droid.Dialer:android_detailSocialSummary}</code></td><td> Flag indicating that detail should be built from SocialProvider.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_android_icon Elastos.Droid.Dialer:android_icon}</code></td><td> Icon used to represent data of this kind.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_android_mimeType Elastos.Droid.Dialer:android_mimeType}</code></td><td> Mime-type handled by this mapping.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_android_summaryColumn Elastos.Droid.Dialer:android_summaryColumn}</code></td><td> Column in data table that summarizes this data.</td></tr>
           </table>
           @see #ContactsDataKind_android_allContactsName
           @see #ContactsDataKind_android_detailColumn
           @see #ContactsDataKind_android_detailSocialSummary
           @see #ContactsDataKind_android_icon
           @see #ContactsDataKind_android_mimeType
           @see #ContactsDataKind_android_summaryColumn
         */
        public: static const int ContactsDataKind[6];
        /**
          <p>
          @attr description
           Resource representing the term "All Contacts" (e.g. "All Friends" or
        "All connections"). Optional (Default is "All Contacts"). 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_allContactsName}.
          @attr name android:android_allContactsName
        */
        public: static const int ContactsDataKind_android_allContactsName = 5;
        /**
          <p>
          @attr description
           Column in data table that contains details for this data. 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_detailColumn}.
          @attr name android:android_detailColumn
        */
        public: static const int ContactsDataKind_android_detailColumn = 3;
        /**
          <p>
          @attr description
           Flag indicating that detail should be built from SocialProvider. 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_detailSocialSummary}.
          @attr name android:android_detailSocialSummary
        */
        public: static const int ContactsDataKind_android_detailSocialSummary = 4;
        /**
          <p>
          @attr description
           Icon used to represent data of this kind. 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_icon}.
          @attr name android:android_icon
        */
        public: static const int ContactsDataKind_android_icon = 0;
        /**
          <p>
          @attr description
           Mime-type handled by this mapping. 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_mimeType}.
          @attr name android:android_mimeType
        */
        public: static const int ContactsDataKind_android_mimeType = 1;
        /**
          <p>
          @attr description
           Column in data table that summarizes this data. 
          <p>This corresponds to the global attribute          resource symbol {@link Elastos.Droid.Dialer.R.attr#android_summaryColumn}.
          @attr name android:android_summaryColumn
        */
        public: static const int ContactsDataKind_android_summaryColumn = 2;
        /** Attributes that can be used with a Favorites.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Favorites_favorites_padding_bottom Elastos.Droid.Dialer:favorites_padding_bottom}</code></td><td></td></tr>
           </table>
           @see #Favorites_favorites_padding_bottom
         */
        public: static const int Favorites[1];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#favorites_padding_bottom}
          attribute's value can be found in the {@link #Favorites} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:favorites_padding_bottom
        */
        public: static const int Favorites_favorites_padding_bottom = 0;
        /** Attributes that can be used with a ProportionalLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ProportionalLayout_direction Elastos.Droid.Dialer:direction}</code></td><td></td></tr>
           <tr><td><code>{@link #ProportionalLayout_ratio Elastos.Droid.Dialer:ratio}</code></td><td></td></tr>
           </table>
           @see #ProportionalLayout_direction
           @see #ProportionalLayout_ratio
         */
        public: static const int ProportionalLayout[2];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#direction}
          attribute's value can be found in the {@link #ProportionalLayout} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:direction
        */
        public: static const int ProportionalLayout_direction = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#ratio}
          attribute's value can be found in the {@link #ProportionalLayout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:ratio
        */
        public: static const int ProportionalLayout_ratio = 1;
        /** Attributes that can be used with a SearchEditTextLayout.
         */
        public: static const int SearchEditTextLayout[0];
        /** Attributes that can be used with a Theme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_android_textColorSecondary Elastos.Droid.Dialer:android_textColorSecondary}</code></td><td></td></tr>
           </table>
           @see #Theme_android_textColorSecondary
         */
        public: static const int Theme[1];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#android_textColorSecondary}
          attribute's value can be found in the {@link #Theme} array.
          @attr name android:android_textColorSecondary
        */
        public: static const int Theme_android_textColorSecondary = 0;
        /** Attributes that can be used with a VoicemailStatus.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #VoicemailStatus_call_log_voicemail_status_action_text_color Elastos.Droid.Dialer:call_log_voicemail_status_action_text_color}</code></td><td></td></tr>
           <tr><td><code>{@link #VoicemailStatus_call_log_voicemail_status_background_color Elastos.Droid.Dialer:call_log_voicemail_status_background_color}</code></td><td></td></tr>
           <tr><td><code>{@link #VoicemailStatus_call_log_voicemail_status_height Elastos.Droid.Dialer:call_log_voicemail_status_height}</code></td><td></td></tr>
           <tr><td><code>{@link #VoicemailStatus_call_log_voicemail_status_text_color Elastos.Droid.Dialer:call_log_voicemail_status_text_color}</code></td><td></td></tr>
           </table>
           @see #VoicemailStatus_call_log_voicemail_status_action_text_color
           @see #VoicemailStatus_call_log_voicemail_status_background_color
           @see #VoicemailStatus_call_log_voicemail_status_height
           @see #VoicemailStatus_call_log_voicemail_status_text_color
         */
        public: static const int VoicemailStatus[4];
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_voicemail_status_action_text_color}
          attribute's value can be found in the {@link #VoicemailStatus} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_voicemail_status_action_text_color
        */
        public: static const int VoicemailStatus_call_log_voicemail_status_action_text_color = 3;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_voicemail_status_background_color}
          attribute's value can be found in the {@link #VoicemailStatus} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_voicemail_status_background_color
        */
        public: static const int VoicemailStatus_call_log_voicemail_status_background_color = 1;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_voicemail_status_height}
          attribute's value can be found in the {@link #VoicemailStatus} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_voicemail_status_height
        */
        public: static const int VoicemailStatus_call_log_voicemail_status_height = 0;
        /**
          <p>This symbol is the offset where the {@link Elastos.Droid.Dialer.R.attr#call_log_voicemail_status_text_color}
          attribute's value can be found in the {@link #VoicemailStatus} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:call_log_voicemail_status_text_color
        */
        public: static const int VoicemailStatus_call_log_voicemail_status_text_color = 2;
    };
};
};
};
};

#endif // __Elastos_Droid_Dialer_R_H__
