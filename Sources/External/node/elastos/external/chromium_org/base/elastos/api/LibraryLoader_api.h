// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     api_generator
// For
//     org/chromium/base/library_loader/LibraryLoader

#ifndef ELASTOS_ORG_CHROMIUM_BASE_LIBRARY_LOADER_LIBRARYLOADER_JNI
#define ELASTOS_ORG_CHROMIUM_BASE_LIBRARY_LOADER_LIBRARYLOADER_JNI

//#include <jni.h>

#include "ElAndroid.h"
#include "elastos.h"
#include "base/logging.h"

//#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.

namespace base {
namespace android {

extern "C" {

static Elastos::Boolean LibraryLoaded(Elastos::ArrayOf<Elastos::String>* initCommandLine);

__attribute__((visibility("default")))
Elastos::Boolean Elastos_LibraryLoader_nativeLibraryLoaded(
    /* [in] */ Elastos::ArrayOf<Elastos::String>* initCommandLine) {
    return LibraryLoaded(initCommandLine);
}

static void RecordChromiumAndroidLinkerHistogram(Elastos::Boolean loadedAtFixedAddressFailed,
    Elastos::Boolean isLowMemoryDevice);

__attribute__((visibility("default")))
void Elastos_LibraryLoader_nativeRecordChromiumAndroidLinkerHistogram(
    /* [in] */ Elastos::Boolean loadedAtFixedAddressFailed,
    /* [in] */ Elastos::Boolean isLowMemoryDevice) {
    return RecordChromiumAndroidLinkerHistogram(loadedAtFixedAddressFailed, isLowMemoryDevice);
}

static Elastos::String GetVersionNumber();

__attribute__((visibility("default")))
Elastos::String Elastos_LibraryLoader_nativeGetVersionNumber() {
    return GetVersionNumber();
}

static void RecordNativeLibraryHack(Elastos::Boolean usedHack);

__attribute__((visibility("default")))
void Elastos_LibraryLoader_nativeRecordNativeLibraryHack(
    /* [in] */ Elastos::Boolean usedHack) {
    return RecordNativeLibraryHack(usedHack);
}

};  // extern "C"

// Step 2: method stubs.

// Step 3: Callback init .

static bool RegisterNativesImpl() {

  return true;
}

}  // namespace android
}  // namespace base

#endif  // ELASTOS_ORG_CHROMIUM_BASE_LIBRARY_LOADER_LIBRARYLOADER_JNI
