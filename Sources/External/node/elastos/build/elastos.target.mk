# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := elastos
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=elastos' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DANDROID' \
	'-DHAVE_SYS_UIO_H'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-g \
	-O0 \
	-Wno-unused-local-typedefs

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=c++98 \
	-Wno-c++0x-compat

INCS_Debug := \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/stlport \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/ \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/deps/uv/ \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/deps/v8/ \
	-I$(srcdir)/JavaScriptCore \
	-I$(srcdir)/JavaScriptCore/icu \
	-I$(srcdir)/JavaScriptCore/wtf \
	-I$(srcdir)/JavaScriptCore/wtf/text \
	-I$(srcdir)/JavaScriptCore/wtf/unicode \
	-I$(srcdir)/JavaScriptCore/wtf/unicode/icu \
	-I$(srcdir)/../../../Elastos/Runtime/Core/inc \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/car \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/clsmodule \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/driver \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/elasys \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/eltypes \
	-I$(srcdir)/../../../Elastos/LibCore/inc/common \
	-I$(srcdir)/../../../Elastos/LibCore/inc/elastos/utility \
	-I$(srcdir)/../../../Elastos/Frameworks/Droid/Base/Core/inc/elastos/droid \
	-I$(srcdir)/../../../../Targets/obj/rdk/arm.gnu.android.dbg/inc \
	-I$(srcdir)/../../../../Targets/obj/rdk/arm.gnu.android.dbg/mirror/Elastos/Frameworks/Droid/Base/Core/src/elastos/droid \
	-I$(srcdir)/bridge \
	-I$(srcdir)/bridge/car \
	-I$(srcdir)/bridge/car/v8 \
	-I$(srcdir)/bindings_node/v8 \
	-I$(srcdir)/plugins \
	-I$(srcdir)/addon \
	-I$(srcdir)/platform \
	-I$(srcdir)/platform/elastos \
	-I$(srcdir)/platform/graphics \
	-I$(srcdir)/platform/text \
	-I$(srcdir)/utils \
	-I$(srcdir)/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=elastos' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DANDROID' \
	'-DHAVE_SYS_UIO_H'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-tree-vrp \
	-fno-omit-frame-pointer \
	-Wno-unused-local-typedefs

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=c++98 \
	-Wno-c++0x-compat

INCS_Release := \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/bionic \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/stlport \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/ \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/deps/uv/ \
    -I $(XDK_BUILD_PATH)/Prebuilt/Linux/usr/include/node/deps/v8/ \
	-I$(srcdir)/JavaScriptCore \
	-I$(srcdir)/JavaScriptCore/icu \
	-I$(srcdir)/JavaScriptCore/wtf \
	-I$(srcdir)/JavaScriptCore/wtf/text \
	-I$(srcdir)/JavaScriptCore/wtf/unicode \
	-I$(srcdir)/JavaScriptCore/wtf/unicode/icu \
	-I$(srcdir)/../../../Elastos/Runtime/Core/inc \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/car \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/clsmodule \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/driver \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/elasys \
	-I$(srcdir)/../../../Elastos/Runtime/Library/inc/eltypes \
	-I$(srcdir)/../../../Elastos/LibCore/inc/common \
	-I$(srcdir)/../../../Elastos/LibCore/inc/elastos/utility \
	-I$(srcdir)/../../../Elastos/Frameworks/Droid/Base/Core/inc/elastos/droid \
	-I$(srcdir)/../../../../Targets/obj/rdk/arm.gnu.android.dbg/inc \
	-I$(srcdir)/../../../../Targets/obj/rdk/arm.gnu.android.dbg/mirror/Elastos/Frameworks/Droid/Base/Core/src/elastos/droid \
	-I$(srcdir)/bridge \
	-I$(srcdir)/bridge/car \
	-I$(srcdir)/bridge/car/v8 \
	-I$(srcdir)/bindings_node/v8 \
	-I$(srcdir)/plugins \
	-I$(srcdir)/addon \
	-I$(srcdir)/platform \
	-I$(srcdir)/platform/elastos \
	-I$(srcdir)/platform/graphics \
	-I$(srcdir)/platform/text \
	-I$(srcdir)/utils \
	-I$(srcdir)/include

OBJS := \
	$(obj).target/$(TARGET)/addon/elastos_root.o \
	$(obj).target/$(TARGET)/bindings_node/v8/V8Utilities.o \
	$(obj).target/$(TARGET)/bindings_node/v8/NPV8Object.o \
	$(obj).target/$(TARGET)/bindings_node/v8/V8NPObject.o \
	$(obj).target/$(TARGET)/bindings_node/v8/V8NPUtils.o \
	$(obj).target/$(TARGET)/bindings_node/v8/V8Helpers.o \
	$(obj).target/$(TARGET)/bindings_node/v8/V8Proxy.o \
	$(obj).target/$(TARGET)/bindings_node/v8/npruntime.o \
	$(obj).target/$(TARGET)/bindings_node/v8/npapi.o \
	$(obj).target/$(TARGET)/bridge/car/Elastos.CoreLibrary.o \
	$(obj).target/$(TARGET)/bridge/car/CarUtility.o \
	$(obj).target/$(TARGET)/bridge/car/CobjectWrapper.o \
	$(obj).target/$(TARGET)/bridge/car/CarCallbackProxy.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarClassCobjectV8.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarFieldCobjectV8.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarInstanceCobjectV8.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarMethodCobject.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarNPObjectV8.o \
	$(obj).target/$(TARGET)/bridge/car/v8/CarUtilityPrivate.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	--sysroot=$(XDK_BUILD_PATH)/Prebuilt/Linux \
	-L$(XDK_BUILD_PATH)/Prebuilt/Linux/usr/lib

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	--sysroot=$(XDK_BUILD_PATH)/Prebuilt/Linux \
	-L$(XDK_BUILD_PATH)/Prebuilt/Linux/usr/lib

LIBS := \
	$(XDK_USER_LIB)/Elastos.Runtime.lib \
	$(XDK_TARGETS)/Elastos.Runtime.eco \
	$(XDK_TARGETS)/Elastos.CoreLibrary.eco \
	$(XDK_USER_LIB)/crt0.lib \
	-licuuc \
	-licui18n \
	-llog \
	-lnode

$(obj).target/elastos.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/elastos.node: LIBS := $(LIBS)
$(obj).target/elastos.node: TOOLSET := $(TOOLSET)
$(obj).target/elastos.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/elastos.node
# Add target alias
.PHONY: elastos
elastos: $(builddir)/elastos.node

# Copy this to the executable output path.
$(builddir)/elastos.node: TOOLSET := $(TOOLSET)
$(builddir)/elastos.node: $(obj).target/elastos.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/elastos.node
# Short alias for building this executable.
.PHONY: elastos.node
elastos.node: $(obj).target/elastos.node $(builddir)/elastos.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/elastos.node

